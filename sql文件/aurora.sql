/*
 Navicat Premium Data Transfer

 Source Server         : localhost
 Source Server Type    : MySQL
 Source Server Version : 80029 (8.0.29)
 Source Host           : localhost:3306
 Source Schema         : aurora

 Target Server Type    : MySQL
 Target Server Version : 80029 (8.0.29)
 File Encoding         : 65001

 Date: 18/04/2024 17:22:32
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for t_about
-- ----------------------------
DROP TABLE IF EXISTS `t_about`;
CREATE TABLE `t_about`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '内容',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_about
-- ----------------------------
INSERT INTO `t_about` VALUES (1, '{\"content\":\"this is 啊哈14\'s blog.\\nwelcome to my website.\\n![logo.jpg](http://localhost:9000/blog/aurora/articles/a4483be44cc72c76099a98fe78e47e11.jpg)\"}', '2024-03-13 17:22:13', '2024-04-06 17:17:43');

-- ----------------------------
-- Table structure for t_article
-- ----------------------------
DROP TABLE IF EXISTS `t_article`;
CREATE TABLE `t_article`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `user_id` int NOT NULL COMMENT '作者',
  `category_id` int NULL DEFAULT NULL COMMENT '文章分类',
  `article_cover` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '文章缩略图',
  `article_title` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '标题',
  `article_abstract` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '文章摘要，如果该字段为空，默认取文章的前500个字符作为摘要',
  `article_content` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '内容',
  `is_top` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否置顶 0否 1是',
  `is_featured` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否推荐 0否 1是',
  `is_delete` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否删除  0否 1是',
  `status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '状态值 1公开 2私密 3草稿',
  `type` tinyint(1) NOT NULL DEFAULT 1 COMMENT '文章类型 1原创 2转载 3翻译',
  `password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '访问密码',
  `original_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '原文链接',
  `create_time` datetime NOT NULL COMMENT '发表时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 138 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_article
-- ----------------------------
INSERT INTO `t_article` VALUES (135, 1, 217, 'http://localhost:9000/blog/aurora/articles/6b8e209c04510c80669c8f3e43794e2d.png', '测试文章demo', '测试文章', '# 测试文章\n`test`\n> 文章功能测试\n1. ~~自动保存功能~~', 0, 0, 0, 2, 1, '123', NULL, '2024-03-25 18:46:53', '2024-04-06 16:54:49');
INSERT INTO `t_article` VALUES (136, 1, 218, 'http://localhost:9000/blog/aurora/articles/64e53e8813f025ee29f22135d2a520f3.jpg', 'SpringSecurity详解', '以该blog为讲解主题', '# SpringSecurity 流程详解\n\n## 流程\n\n> 在每一次的请求中都会对呆着token的信息进行JWT验证，同时上下文中的认证信息只在一次请求周期内完成，下一次新的请求会进行新的认证。\n\n## aurora项目`SpringSecurity`流程\n\n### 参考\n\n> [认证1流程](https://zhuanlan.zhihu.com/p/365513384)\n>\n> [SpringSecurity 登录流程](https://www.cnblogs.com/zongmin/p/13783174.html#_label1_0)\n>\n> [Spring Security详细讲解(JWT+SpringSecurity登入案例) 比较详细的一个流程](https://developer.aliyun.com/article/996569#slide-0)\n>\n> https://juejin.cn/column/6960549063062683684\n\n### 前端设置token\n\n> 代码：\n>\n> ```vue\n> axios.interceptors.request.use((config) => {\n>   config.headers[\'Authorization\'] = \'Bearer \' + sessionStorage.getItem(\'token\')\n>   return config\n> })\n> ```\n>\n> 该函数是一个axios请求拦截器，用于在每次发送请求前统一设置请求头中的Authorization字段。它从sessionStorage中获取token，然后将其与\'Bearer \'拼接，作为Authorization字段的值。这样可以确保每个请求都携带了认证信息。\n\n### 第一次认证的处理\n\n> - 第一次都是登录，本地中并没有存在认证信息和token信息\n>\n> 	1. 前端发送登录请求，携带用户名和密码\n>\n> 	2. 因为`Security`配置开启了`formlogin()`，所以对于登录的请求，`UsernamePasswordAuthenticationFilter`会接收用户名和密码，进行封装为一个==待认证==的`Authentication`。\n>\n> 	  ```java\n> 	  //UsernamePasswordAuthenticationFilter 类进行处理的语句\n> 	  UsernamePasswordAuthenticationToken authRequest = new UsernamePasswordAuthenticationToken(username, password);\n> 	  //封装之后就是对这个信息进行认证了\n> 	  this.getAuthenticationManager().authenticate(authRequest);//通过这个方法进行认证\n> 	  ```\n>\n> 	3. 通过调用`AuthenticationManager的authenticate()方法`进行上边`Authentication`的认证，认证成功，则会返回一个封装了当前用户权限等信息的 `Authentication` 对象进行返回。\n> 	    但是因为`AuthenticationManager`是一个接口，`AuthenticationManager` 的默认实现是 `ProviderManager`，进而调用他的`authenticate()`方法进行认证处理。\n> 	    但是它不直接自己处理认证请求，而是委托给其所配置的 `AuthenticationProvider` 列表，然后会依次使用每一个 `AuthenticationProvider` 进行认证，如果有一个 `AuthenticationProvider` 认证后的结果不为 `null`，则表示该 `AuthenticationProvider` 已经认证成功，之后的 `AuthenticationProvider` 将不再继续认证。然后直接以该 `AuthenticationProvider` 的认证结果作为 `ProviderManager` 的认证结果。如果所有的 `AuthenticationProvider` 的认证结果都为 `null`，则表示认证失败，将抛出一个 `ProviderNotFoundException`。\n>\n> 	  ```java\n> 	  protected final UserDetails retrieveUser(String username, UsernamePasswordAuthenticationToken authentication)\n> 	  //AuthenticationProvider 列表中一个实现类DaoAuthenticationProvider类中的一个认证执行方法 ,一般使用的就是这个进行认证。\n> 	  //`AbstractUserDetailsAuthenticationProvider `是DaoAuthenticationProvider的上层抽象类，也就是ProviderManager--AuthenticationProvider：AbstractUserDetailsAuthenticationProvider（抽象类）---DaoAuthenticationProvider（抽象的实现类）\n> 	  ```\n>\n> \n>\n> 4. 而在委托的`ProviderManager`类中进行认证时【调用`authenticate()`或者`retrieveUser()`方法】，会使用`UserDetailsService`接口.\n>     通过 `UserDetailsService` 的 `loadUserByUsername()` 方法获取用户名对应的信息并封装到 `UserDetails` \n>     ==本项目自定实现了`UserDetailsService`和`UserDetails`两个接口`UserDetailServiceImpl`和`UserDetailsDTO`，前者自定义了从数据库中取出`username`相关的数据==\n>\n>\n> ```java\n> UserDetails loadUserByUsername(String username)//通过用户名进行数据库的信息查找元素\n> ```\n>\n> 5. `UserDetails` 赋给上层的`Provider`的实现类，之后调用`additionalAuthenticationChecks`方法对用户的密码进行最后的检查.方法是在`DaoAuthenticationProvider`父类 `AbstractUserDetailsAuthenticationProvider `的 `authenticate `方法中被调用的调用上下文中设置的`PasswordEncoder`，最终密码校验的细节完全在`BCrypt`实体类中进行\n> 	补充：数据库保存的密码编码和这里的应设置一样，不一样要进行多次的编码解码，而数据库的设置，应该是在注册哪里进行保存的时候进行编码。\n>\n> 	```java\n> 	//additionalAuthenticationChecks 方法内部执行验证的逻辑\n> 	this.passwordEncoder.matches(presentedPassword, userDetails.getPassword())\n> 	```\n>\n> 	==密码校验通过==之后就会返回一个认证通过的 `Authentication` 的 `principal`，然后会把该 `Authentication` 存入到 `SecurityContext` 中。\n>\n> 6. 现在认证处理已经完成，根据认证结果不同转向不同的处理器\n>\n> 	1. 认证成功，转向`AuthenticationSuccessHandler`\n> 		1. 根据`SecurityContext` 中`authentication`信息，生成`JWT-token`。【具体实现细节在`TokenServiceImpl`中，他会生成，并把`authentication`对应的`UserDetails` 存入`redis`中】\n> 		2. 将登录成功后的用户信息（包含token）返回给客户端（前端），==这里就保证后边请求会携带`token`了==\n>\n> 	1. 认证失败，转向`AuthenticationFailureHandler`,\n> 		1. `aurora`项目这里就是向前端返回一个JSON字符串，包含了认证错误的原因。\n\n### 已经经过登录的请求-不是登录请求\n\n> 1. 前端发送请求【因为已经登录验证过了，这里请求中都会携带`token`】\n>\n> 2. 这里转向`JwtAuthenticationTokenFilter`进行验证，通过`doFilterInternal()`方法在这一次的上下文中设置`authentication`。\n>     ==因为一个认证信息的周期就是一次请求的周期==\n>\n> 3.1. 如果可以通过解析`token`获取到对应的`UserDetails` ，说明这个用户是获得认证的用户，之后将其的`authentication`放到 `SecurityContext` 中。\n> 3.2. 不能获取到，就会像登录那样直接转到`UsernamePasswordAuthenticationFilter`这个过滤器进行在一次的处理。【一般就是认证过期，再次登录】\n>\n> 4. 上下文存在`authentication`,这次请求的认证结束。剩余的过滤器等认证都会通过。\n> 5. 执行具体的业务层逻辑。\n\n### 权限认证\n\n> [通过自定义决策管理器实现动态权限管理](https://blog.csdn.net/m0_59448100/article/details/127093942)\n>\n> [动态权限控制（上）思路](https://juejin.cn/post/6844904006209241096?searchId=2024031918550725963048FD0787BE7A2F#heading-0)\n>\n> [动态权限控制（下）实习](https://juejin.cn/post/6844904007534641159)\n\n> 1. 用户认证之后，就要对请求`url`进行权限判定，判定当前认证的用户是否对于这个请求的资源有权限。\n>\n> 2. 而过滤器中的`FilterSecurityInterceptor`负责对 `http` 接口进行权限认证。【是Security的内置filter】\n>\n> 	```java\n> 	 //`FilterSecurityInterceptor`	内执行的方法\n> 	public void doFilter(ServletRequest request, ServletResponse response,\n> 	 			FilterChain chain) throws IOException, ServletException {\n> 	 		FilterInvocation fi = new FilterInvocation(request, response, chain);\n> 	 		invoke(fi);\n> 	 	}\n> 	//初始化了一个 FilterInvocation ：封装 Servlet 环境中的 HTTP 请求、响应以及过滤器链 然后被 invoke 方法处理\n> 	//实际上是将当前请求的上下文信息封装起来，并交给 Spring Security 的安全过滤器链进行处理。在过滤器链的执行过程中，各个安全过滤器可以通过 FilterInvocation 对象来获取当前请求的信息，并进行相应的安全控制操作。\n> 	```\n>\n> 	`invoke`方法内部一般使用父类的 `beforeInvocation` 方法进一步进行鉴权处理，然后再进入过滤器链。\n>\n> 3. `beforeInvocation`方法详解\n> 	通过 `this.obtainSecurityMetadataSource().getAttributes(Object object)`拿受保护对象（就是当前请求的 URI）所有的映射角色（`ConfigAttribute` 直接理解为角色的进一步抽象） ==也就是调用下边的元数据加载器的方法，得到方法生成的权限信息==。\n>\n> 	```java\n> 	Authentication authenticated = this.authenticateIfRequired();\n> 	//这一步拿到当前上下文的认证信息\n> 	 this.accessDecisionManager.decide(authenticated, object, attributes);\n> 	```\n>\n> 	然后使用访问自定义实现的决策管理器`AccessDecisionManager` 进行投票决策来确定是否放行。\n>\n> 4. `FilterInvocationSecurityMetadataSource`元数据加载器 \n> 	加载符合这个`url`路径的权限列表（角色列表）\n>\n> 5. `AccessDecisionManager访问决策管理器`会将上边加载的角色列表和当前认证的角色信息对比，符合就放行，完成鉴权的认定。否则就抛出异常信息。\n> 	【因为是自定义的，没有使用投票器，也就不需要投票判定，直接上述的角色对比，符合就放行】\n>\n> 6. 鉴权结束\n\n### 异常处理\n\n> 说明：\n>\n> 我们还希望在认证失败或者是授权失败的情况下也能和我们的接口一样返回相同结构的json，这样可以让前端能对响应进行统一的处理。要实现这个功能我们需要知道SpringSecurity的异常处理机制。在SpringSecurity中，如果我们==在认证或者授权的过程==中出现了异常会被`ExceptionTranslationFilter`捕获到。在ExceptionTranslationFilter中会去判断是认证失败还是授权失败出现的异常。\n\n> 如果是==认证==过程中出现的异常会被封装成`AuthenticationException`然后调用 `AuthenticationEntryPoint` 对象的方法去进行异常处理。\n> 如果是==授权==过程中出现的异常会被封装成`AccessDeniedException`然后调用 `AccessDeniedHandler` 对象的方法去进行异常处理。\n\n> 所以如果我们需要自定义异常处理，我们只需要自定义`AuthenticationEntryPoint`和`AccessDeniedHandler`然后配置给`SpringSecurity`即可，\n>\n> 本项目认证实现类：`AuthenticationEntryPointImpl` 向前端发送JSON：用户未登录\n>\n> 本项目授权实现类：`AccessDeniedHandlerImpl`向前端发送JSON：用户权限不足\n\n## 知识点\n\n### `UserDetailsService`接口\n\n> 1. 接口只提供了一个方法：\n>\n> 	```java\n> 	UserDetails loadUserByUsername(String username) throws UsernameNotFoundException;\n> 	```\n>\n> 	该方法很容易理解：==通过用户名来加载用户==。这个方法主要用于从系统数据中查询并加载具体的用户到Spring Security中。\n>\n> 2. UserDetailsService 可以知道最终交给Spring Security的是`UserDetails` 。\n>\n> 3. 通过继承``UserDetailsService`接口，可以自定义从数据库读取信息的逻辑。\n\n### `UserDetails`接口\n\n> 1. 该接口是提供用户信息的核心接口。该接口实现仅仅存储用户的信息。\n>     后续会将该接口提供的用户信息封装到认证对象Authentication中去。\n> 2. 我们可以自定义一些属性传递给`Authentication`,通过实现`UserDetails`接口。完成数据的自定义封装\n> 3. ```java\n> 		@Override\n> 	    @Transient\n> 	    public Collection<? extends GrantedAuthority> getAuthorities() {\n> 	        return roles.stream()\n> 	                .map(SimpleGrantedAuthority::new)\n> 	                .collect(Collectors.toSet());\n> 	    }\n> 	```\n>\n> 	这个重写的方法同样可以用于`authentication.getAuthorities()`,本质就是使用这个获取`UserDetails`中`roles`信息（角色信息）。\n\n### `UserDetailsManager`\n\n> `UserDetailsManager` 类型负责对安全用户实体抽象`UserDetails`的增删查改操作。同时还继承了`UserDetailsService`接口。\n\n### `PasswordEncoder`\n\n> https://felord.blog.csdn.net/article/details/102504387\n\n### `WebSecurityConfigurerAdapter`配置类\n\n> https://felord.blog.csdn.net/article/details/102583995\n\n### 自定义登录相关流程解析\n\n> https://felord.blog.csdn.net/article/details/102617422\n\n### 过滤器链\n\n> https://mp.weixin.qq.com/s?__biz=MzUzMzQ2MDIyMA%3D%3D&chksm=faa2e6f2cdd56fe441d637ef6c339518af064bded807d6c12a0ac3ef9ed9424eb9785eae469f&idx=1&mid=2247484257&scene=21&sn=7034ccb9c2b6ac6d61364a2a87111a50#wechat_redirect\n\n#### `SecurityContextPersistenceFilter`\n\n> `SecurityContextPersistenceFilter` 主要控制 `SecurityContext` 的在一次请求中的生命周期 。请求来临时，创建`SecurityContext` 安全上下文信息，请求结束时清空 `SecurityContextHolder`。\n>\n> `SecurityContextPersistenceFilter` 通过 `HttpScurity#securityContext()` 及相关方法引入其配置对象 `SecurityContextConfigurer` 来进行配置。\n\n### RBAC权限模型\n\n> RBAC权限模型：**`基于角色的访问控制（RBAC）是实施面向企业安全策略的一种有效的访问控制方式。`** 其基本思想是，对系统操作的各种权限不是直接授予具体的用户，而是在用户集合与权限集合之间建立一个角色集合。每一种角色对应一组相应的权限。一旦用户被分配了适当的角色后，该用户就拥有此角色的所有操作权限。这样做的好处是，不必在每次创建用户时都进行分配权限的操作，只要分配用户相应的角色即可，而且角色的权限变更比用户的权限变更要少得多，这样将简化用户的权限管理，减少系统的开销。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n', 1, 0, 0, 1, 1, NULL, NULL, '2024-03-31 21:41:31', '2024-04-08 20:42:27');

-- ----------------------------
-- Table structure for t_article_tag
-- ----------------------------
DROP TABLE IF EXISTS `t_article_tag`;
CREATE TABLE `t_article_tag`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `article_id` int NOT NULL COMMENT '文章id',
  `tag_id` int NOT NULL COMMENT '标签id',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `fk_article_tag_1`(`article_id` ASC) USING BTREE,
  INDEX `fk_article_tag_2`(`tag_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 99 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_article_tag
-- ----------------------------
INSERT INTO `t_article_tag` VALUES (96, 135, 41);
INSERT INTO `t_article_tag` VALUES (98, 136, 42);

-- ----------------------------
-- Table structure for t_category
-- ----------------------------
DROP TABLE IF EXISTS `t_category`;
CREATE TABLE `t_category`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `category_name` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '分类名',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 219 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_category
-- ----------------------------
INSERT INTO `t_category` VALUES (217, '分类测试', '2024-03-25 18:50:24', '2024-03-28 14:45:53');
INSERT INTO `t_category` VALUES (218, 'java', '2024-03-31 21:44:02', NULL);

-- ----------------------------
-- Table structure for t_comment
-- ----------------------------
DROP TABLE IF EXISTS `t_comment`;
CREATE TABLE `t_comment`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '主键',
  `user_id` int NOT NULL COMMENT '评论用户Id',
  `topic_id` int NULL DEFAULT NULL COMMENT '评论主题id',
  `comment_content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '评论内容',
  `reply_user_id` int NULL DEFAULT NULL COMMENT '被回复的用户id',
  `parent_id` int NULL DEFAULT NULL COMMENT '父评论id',
  `type` tinyint NOT NULL COMMENT '评论类型 1.文章 2.留言 3.关于我 4.友链 5.说说',
  `is_delete` tinyint NOT NULL DEFAULT 0 COMMENT '是否删除  0否 1是',
  `is_review` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否审核',
  `create_time` datetime NOT NULL COMMENT '评论时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `fk_comment_user`(`user_id` ASC) USING BTREE,
  INDEX `fk_comment_parent`(`parent_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1043 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_comment
-- ----------------------------
INSERT INTO `t_comment` VALUES (1032, 1, 135, '测试评论', NULL, NULL, 1, 0, 1, '2024-03-28 16:36:16', NULL);
INSERT INTO `t_comment` VALUES (1033, 1, 135, '测试文章评论回复', 1, 1032, 1, 0, 1, '2024-03-28 16:38:08', NULL);
INSERT INTO `t_comment` VALUES (1036, 1, 135, '1', 2, 1032, 1, 0, 1, '2024-03-28 18:39:06', NULL);
INSERT INTO `t_comment` VALUES (1037, 1, 135, '管理员回复管理员', 1, 1032, 1, 0, 1, '2024-03-29 00:36:54', NULL);
INSERT INTO `t_comment` VALUES (1042, 1024, NULL, '留言测试demo', NULL, NULL, 2, 0, 1, '2024-04-11 23:54:59', '2024-04-11 23:55:09');

-- ----------------------------
-- Table structure for t_exception_log
-- ----------------------------
DROP TABLE IF EXISTS `t_exception_log`;
CREATE TABLE `t_exception_log`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `opt_uri` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '请求接口',
  `opt_method` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '请求方式',
  `request_method` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '请求方式',
  `request_param` varchar(2000) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '请求参数',
  `opt_desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '操作描述',
  `exception_info` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '异常信息',
  `ip_address` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT 'ip',
  `ip_source` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT 'ip来源',
  `create_time` datetime NOT NULL COMMENT '操作时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 10 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_exception_log
-- ----------------------------
INSERT INTO `t_exception_log` VALUES (1, '/articles/135', 'com.aurora.controller.ArticleController.getArticleById', 'GET', '[135]', '根据id获取文章', 'com.aurora.exception.BizException: 文章密码认证未通过\r\n	at com.aurora.service.impl.ArticleServiceImpl.getArticleById(ArticleServiceImpl.java:139)\r\n	at com.aurora.service.impl.ArticleServiceImpl$$FastClassBySpringCGLIB$$16e85493.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)\r\n	at com.aurora.service.impl.ArticleServiceImpl$$EnhancerBySpringCGLIB$$d93edf75.getArticleById(<generated>)\r\n	at com.aurora.controller.ArticleController.getArticleById(ArticleController.java:57)\r\n	at com.aurora.controller.ArticleController$$FastClassBySpringCGLIB$$b88e9521.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)\r\n	at com.aurora.controller.ArticleController$$EnhancerBySpringCGLIB$$dcf32acf.getArticleById(<generated>)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n	at java.lang.reflect.Method.invoke(Method.java:498)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)\r\n	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\r\n	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at com.aurora.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:64)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)\r\n	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)\r\n	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\r\n	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n	at java.lang.Thread.run(Thread.java:748)\r\n', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:27:45');
INSERT INTO `t_exception_log` VALUES (2, '/users/info', 'com.aurora.controller.UserInfoController.updateUserInfo', 'PUT', '[{\"nickname\":\"2651694460\"}]', '更新用户信息', 'java.lang.ClassCastException: java.lang.String cannot be cast to com.aurora.model.dto.UserDetailsDTO\r\n	at com.aurora.util.UserUtil.getUserDetailsDTO(UserUtil.java:22)\r\n	at com.aurora.service.impl.UserInfoServiceImpl.updateUserInfo(UserInfoServiceImpl.java:64)\r\n	at com.aurora.service.impl.UserInfoServiceImpl$$FastClassBySpringCGLIB$$8a988b28.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)\r\n	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)\r\n	at com.aurora.service.impl.UserInfoServiceImpl$$EnhancerBySpringCGLIB$$3aa7c854.updateUserInfo(<generated>)\r\n	at com.aurora.controller.UserInfoController.updateUserInfo(UserInfoController.java:32)\r\n	at com.aurora.controller.UserInfoController$$FastClassBySpringCGLIB$$19719586.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)\r\n	at com.aurora.controller.UserInfoController$$EnhancerBySpringCGLIB$$e1d9131e.updateUserInfo(<generated>)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n	at java.lang.reflect.Method.invoke(Method.java:498)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)\r\n	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\r\n	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)\r\n	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at com.aurora.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:64)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)\r\n	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)\r\n	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\r\n	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n	at java.lang.Thread.run(Thread.java:748)\r\n', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:28:43');
INSERT INTO `t_exception_log` VALUES (3, '/users/logout', 'com.aurora.controller.UserAuthController.logout', 'POST', NULL, '用户登出', 'java.lang.ClassCastException: java.lang.String cannot be cast to com.aurora.model.dto.UserDetailsDTO\r\n	at com.aurora.util.UserUtil.getUserDetailsDTO(UserUtil.java:22)\r\n	at com.aurora.service.impl.UserAuthServiceImpl.logout(UserAuthServiceImpl.java:186)\r\n	at com.aurora.service.impl.UserAuthServiceImpl$$FastClassBySpringCGLIB$$be1c91ee.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)\r\n	at com.aurora.service.impl.UserAuthServiceImpl$$EnhancerBySpringCGLIB$$f7334866.logout(<generated>)\r\n	at com.aurora.controller.UserAuthController.logout(UserAuthController.java:74)\r\n	at com.aurora.controller.UserAuthController$$FastClassBySpringCGLIB$$e98e9e00.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)\r\n	at com.aurora.controller.UserAuthController$$EnhancerBySpringCGLIB$$b448cc.logout(<generated>)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n	at java.lang.reflect.Method.invoke(Method.java:498)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)\r\n	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\r\n	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)\r\n	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at com.aurora.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:64)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)\r\n	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)\r\n	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\r\n	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n	at java.lang.Thread.run(Thread.java:748)\r\n', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:28:54');
INSERT INTO `t_exception_log` VALUES (4, '/users/logout', 'com.aurora.controller.UserAuthController.logout', 'POST', NULL, '用户登出', 'java.lang.ClassCastException: java.lang.String cannot be cast to com.aurora.model.dto.UserDetailsDTO\r\n	at com.aurora.util.UserUtil.getUserDetailsDTO(UserUtil.java:22)\r\n	at com.aurora.service.impl.UserAuthServiceImpl.logout(UserAuthServiceImpl.java:186)\r\n	at com.aurora.service.impl.UserAuthServiceImpl$$FastClassBySpringCGLIB$$be1c91ee.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)\r\n	at com.aurora.service.impl.UserAuthServiceImpl$$EnhancerBySpringCGLIB$$f7334866.logout(<generated>)\r\n	at com.aurora.controller.UserAuthController.logout(UserAuthController.java:74)\r\n	at com.aurora.controller.UserAuthController$$FastClassBySpringCGLIB$$e98e9e00.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)\r\n	at com.aurora.controller.UserAuthController$$EnhancerBySpringCGLIB$$b448cc.logout(<generated>)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n	at java.lang.reflect.Method.invoke(Method.java:498)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)\r\n	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\r\n	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)\r\n	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at com.aurora.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:64)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)\r\n	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)\r\n	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\r\n	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n	at java.lang.Thread.run(Thread.java:748)\r\n', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:28:57');
INSERT INTO `t_exception_log` VALUES (5, '/users/logout', 'com.aurora.controller.UserAuthController.logout', 'POST', NULL, '用户登出', 'java.lang.ClassCastException: java.lang.String cannot be cast to com.aurora.model.dto.UserDetailsDTO\r\n	at com.aurora.util.UserUtil.getUserDetailsDTO(UserUtil.java:22)\r\n	at com.aurora.service.impl.UserAuthServiceImpl.logout(UserAuthServiceImpl.java:186)\r\n	at com.aurora.service.impl.UserAuthServiceImpl$$FastClassBySpringCGLIB$$be1c91ee.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)\r\n	at com.aurora.service.impl.UserAuthServiceImpl$$EnhancerBySpringCGLIB$$f7334866.logout(<generated>)\r\n	at com.aurora.controller.UserAuthController.logout(UserAuthController.java:74)\r\n	at com.aurora.controller.UserAuthController$$FastClassBySpringCGLIB$$e98e9e00.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)\r\n	at com.aurora.controller.UserAuthController$$EnhancerBySpringCGLIB$$b448cc.logout(<generated>)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n	at java.lang.reflect.Method.invoke(Method.java:498)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)\r\n	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\r\n	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)\r\n	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at com.aurora.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:64)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)\r\n	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)\r\n	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\r\n	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n	at java.lang.Thread.run(Thread.java:748)\r\n', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:29:51');
INSERT INTO `t_exception_log` VALUES (6, '/articles/135', 'com.aurora.controller.ArticleController.getArticleById', 'GET', '[135]', '根据id获取文章', 'com.aurora.exception.BizException: 文章密码认证未通过\r\n	at com.aurora.service.impl.ArticleServiceImpl.getArticleById(ArticleServiceImpl.java:139)\r\n	at com.aurora.service.impl.ArticleServiceImpl$$FastClassBySpringCGLIB$$16e85493.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)\r\n	at com.aurora.service.impl.ArticleServiceImpl$$EnhancerBySpringCGLIB$$d93edf75.getArticleById(<generated>)\r\n	at com.aurora.controller.ArticleController.getArticleById(ArticleController.java:57)\r\n	at com.aurora.controller.ArticleController$$FastClassBySpringCGLIB$$b88e9521.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)\r\n	at com.aurora.controller.ArticleController$$EnhancerBySpringCGLIB$$dcf32acf.getArticleById(<generated>)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n	at java.lang.reflect.Method.invoke(Method.java:498)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)\r\n	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\r\n	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)\r\n	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at com.aurora.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:64)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)\r\n	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)\r\n	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\r\n	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n	at java.lang.Thread.run(Thread.java:748)\r\n', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:30:36');
INSERT INTO `t_exception_log` VALUES (7, '/articles/access', 'com.aurora.controller.ArticleController.accessArticle', 'POST', '[{\"articleId\":135,\"articlePassword\":\"123456\"}]', '校验文章访问密码', 'com.aurora.exception.BizException: 密码错误\r\n	at com.aurora.service.impl.ArticleServiceImpl.accessArticle(ArticleServiceImpl.java:197)\r\n	at com.aurora.service.impl.ArticleServiceImpl$$FastClassBySpringCGLIB$$16e85493.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)\r\n	at com.aurora.service.impl.ArticleServiceImpl$$EnhancerBySpringCGLIB$$763fbeef.accessArticle(<generated>)\r\n	at com.aurora.controller.ArticleController.accessArticle(ArticleController.java:63)\r\n	at com.aurora.controller.ArticleController$$FastClassBySpringCGLIB$$b88e9521.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)\r\n	at com.aurora.controller.ArticleController$$EnhancerBySpringCGLIB$$bfbfa03f.accessArticle(<generated>)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n	at java.lang.reflect.Method.invoke(Method.java:498)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)\r\n	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\r\n	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)\r\n	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at com.aurora.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:64)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)\r\n	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)\r\n	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\r\n	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n	at java.lang.Thread.run(Thread.java:748)\r\n', '127.0.0.1', '内网IP|内网IP', '2024-04-07 16:26:36');
INSERT INTO `t_exception_log` VALUES (8, '/articles/access', 'com.aurora.controller.ArticleController.accessArticle', 'POST', '[{\"articleId\":135,\"articlePassword\":\"123456\"}]', '校验文章访问密码', 'com.aurora.exception.BizException: 密码错误\r\n	at com.aurora.service.impl.ArticleServiceImpl.accessArticle(ArticleServiceImpl.java:197)\r\n	at com.aurora.service.impl.ArticleServiceImpl$$FastClassBySpringCGLIB$$16e85493.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)\r\n	at com.aurora.service.impl.ArticleServiceImpl$$EnhancerBySpringCGLIB$$763fbeef.accessArticle(<generated>)\r\n	at com.aurora.controller.ArticleController.accessArticle(ArticleController.java:63)\r\n	at com.aurora.controller.ArticleController$$FastClassBySpringCGLIB$$b88e9521.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)\r\n	at com.aurora.controller.ArticleController$$EnhancerBySpringCGLIB$$bfbfa03f.accessArticle(<generated>)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n	at java.lang.reflect.Method.invoke(Method.java:498)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)\r\n	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\r\n	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)\r\n	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at com.aurora.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:64)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)\r\n	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)\r\n	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\r\n	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n	at java.lang.Thread.run(Thread.java:748)\r\n', '127.0.0.1', '内网IP|内网IP', '2024-04-07 16:26:38');
INSERT INTO `t_exception_log` VALUES (9, '/articles/access', 'com.aurora.controller.ArticleController.accessArticle', 'POST', '[{\"articleId\":135,\"articlePassword\":\"123456\"}]', '校验文章访问密码', 'com.aurora.exception.BizException: 密码错误\r\n	at com.aurora.service.impl.ArticleServiceImpl.accessArticle(ArticleServiceImpl.java:197)\r\n	at com.aurora.service.impl.ArticleServiceImpl$$FastClassBySpringCGLIB$$16e85493.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:687)\r\n	at com.aurora.service.impl.ArticleServiceImpl$$EnhancerBySpringCGLIB$$a781eb81.accessArticle(<generated>)\r\n	at com.aurora.controller.ArticleController.accessArticle(ArticleController.java:63)\r\n	at com.aurora.controller.ArticleController$$FastClassBySpringCGLIB$$b88e9521.invoke(<generated>)\r\n	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)\r\n	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)\r\n	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)\r\n	at com.aurora.controller.ArticleController$$EnhancerBySpringCGLIB$$ce8eb5dd.accessArticle(<generated>)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n	at java.lang.reflect.Method.invoke(Method.java:498)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)\r\n	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)\r\n	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\r\n	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\r\n	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)\r\n	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)\r\n	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at com.aurora.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:64)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)\r\n	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)\r\n	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)\r\n	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)\r\n	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\r\n	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\r\n	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\r\n	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\r\n	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)\r\n	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)\r\n	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n	at java.lang.Thread.run(Thread.java:748)\r\n', '127.0.0.1', '内网IP|内网IP', '2024-04-11 23:32:43');

-- ----------------------------
-- Table structure for t_friend_link
-- ----------------------------
DROP TABLE IF EXISTS `t_friend_link`;
CREATE TABLE `t_friend_link`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `link_name` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '链接名',
  `link_avatar` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '链接头像',
  `link_address` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '链接地址',
  `link_intro` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '链接介绍',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `fk_friend_link_user`(`link_name` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 48 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_friend_link
-- ----------------------------
INSERT INTO `t_friend_link` VALUES (47, '友链测试（跳转到baidu）', 'https://www.baidu.com/favicon.ico', 'https://www.baidu.com/', '友链demo', '2024-04-11 23:59:22', NULL);

-- ----------------------------
-- Table structure for t_job
-- ----------------------------
DROP TABLE IF EXISTS `t_job`;
CREATE TABLE `t_job`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '任务ID',
  `job_name` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '任务名称',
  `job_group` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'DEFAULT' COMMENT '任务组名',
  `invoke_target` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '调用目标字符串',
  `cron_expression` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT '' COMMENT 'cron执行表达式',
  `misfire_policy` tinyint(1) NULL DEFAULT 3 COMMENT '计划执行错误策略（1立即执行 2执行一次 3放弃执行）',
  `concurrent` tinyint(1) NULL DEFAULT 1 COMMENT '是否并发执行（0禁止 1允许）',
  `status` tinyint(1) NULL DEFAULT 0 COMMENT '状态（0暂停 1正常）',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  `remark` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT '' COMMENT '备注信息',
  PRIMARY KEY (`id`, `job_name`, `job_group`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 87 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '定时任务调度表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_job
-- ----------------------------
INSERT INTO `t_job` VALUES (81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '0 0,30 * * * ?', 3, 1, 1, '2022-08-11 21:49:27', '2022-08-13 08:49:47', '统计用户的地域分布');
INSERT INTO `t_job` VALUES (82, '统计访问量', '默认', 'auroraQuartz.saveUniqueView', '0 0 0 * * ?', 3, 1, 1, '2022-08-12 16:35:11', NULL, '向数据库中写入每天的访问量');
INSERT INTO `t_job` VALUES (83, '清空redis访客记录', '默认', 'auroraQuartz.clear', '0 0 1 * * ?', 3, 1, 1, '2022-08-12 16:36:30', '2022-08-13 08:47:48', '清空redis访客记录');
INSERT INTO `t_job` VALUES (84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '0 0/10 * * * ?', 3, 1, 1, '2022-08-13 21:19:08', '2022-08-19 14:13:52', '百度SEO');
INSERT INTO `t_job` VALUES (85, '清理定时任务日志', '默认', 'auroraQuartz.clearJobLogs', '0 0 0 * * ?', 3, 1, 1, '2022-08-13 21:26:21', NULL, '清理定时任务日志');
INSERT INTO `t_job` VALUES (86, '导入文章数据到ES', '默认', 'auroraQuartz.importDataIntoES', '0 15 0 * * ?', 3, 1, 0, '2024-04-01 17:03:18', '2024-04-01 17:06:26', '(能完成功能)dev阶段调试ES搜索设置，此时未使用maxwell，rabbitmq，将文章数据自动更新到ES');

-- ----------------------------
-- Table structure for t_job_log
-- ----------------------------
DROP TABLE IF EXISTS `t_job_log`;
CREATE TABLE `t_job_log`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '任务日志ID',
  `job_id` int NOT NULL COMMENT '任务ID',
  `job_name` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '任务名称',
  `job_group` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '任务组名',
  `invoke_target` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '调用目标字符串',
  `job_message` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '日志信息',
  `status` tinyint(1) NULL DEFAULT 0 COMMENT '执行状态（1正常 0失败）',
  `exception_info` varchar(2000) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT '' COMMENT '异常信息',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  `start_time` datetime NULL DEFAULT NULL COMMENT '开始时间',
  `end_time` datetime NULL DEFAULT NULL COMMENT '结束时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 10476 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '定时任务调度日志表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_job_log
-- ----------------------------
INSERT INTO `t_job_log` VALUES (10356, 85, '清理定时任务日志', '默认', 'auroraQuartz.clearJobLogs', '清理定时任务日志 总共耗时：38毫秒', 1, '', '2024-04-12 00:00:00', '2024-04-12 00:00:00', '2024-04-12 00:00:00');
INSERT INTO `t_job_log` VALUES (10357, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：263毫秒', 1, '', '2024-04-12 00:00:00', '2024-04-12 00:00:00', '2024-04-12 00:00:00');
INSERT INTO `t_job_log` VALUES (10358, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：354毫秒', 1, '', '2024-04-12 00:10:00', '2024-04-12 00:10:00', '2024-04-12 00:10:00');
INSERT INTO `t_job_log` VALUES (10359, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：6毫秒', 1, '', '2024-04-12 00:30:00', '2024-04-12 00:30:00', '2024-04-12 00:30:00');
INSERT INTO `t_job_log` VALUES (10360, 83, '清空redis访客记录', '默认', 'auroraQuartz.clear', '清空redis访客记录 总共耗时：5毫秒', 1, '', '2024-04-12 01:00:00', '2024-04-12 01:00:00', '2024-04-12 01:00:00');
INSERT INTO `t_job_log` VALUES (10361, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：7毫秒', 1, '', '2024-04-12 01:00:00', '2024-04-12 01:00:00', '2024-04-12 01:00:00');
INSERT INTO `t_job_log` VALUES (10362, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：10毫秒', 1, '', '2024-04-12 01:30:00', '2024-04-12 01:30:00', '2024-04-12 01:30:00');
INSERT INTO `t_job_log` VALUES (10363, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：11毫秒', 1, '', '2024-04-12 02:00:00', '2024-04-12 02:00:00', '2024-04-12 02:00:00');
INSERT INTO `t_job_log` VALUES (10364, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：7毫秒', 1, '', '2024-04-12 02:30:00', '2024-04-12 02:30:00', '2024-04-12 02:30:00');
INSERT INTO `t_job_log` VALUES (10365, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：5毫秒', 1, '', '2024-04-12 03:00:00', '2024-04-12 03:00:00', '2024-04-12 03:00:00');
INSERT INTO `t_job_log` VALUES (10366, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：0毫秒', 1, '', '2024-04-12 03:30:00', '2024-04-12 03:30:00', '2024-04-12 03:30:00');
INSERT INTO `t_job_log` VALUES (10367, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：5毫秒', 1, '', '2024-04-12 04:00:00', '2024-04-12 04:00:00', '2024-04-12 04:00:00');
INSERT INTO `t_job_log` VALUES (10368, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：5毫秒', 1, '', '2024-04-12 04:30:00', '2024-04-12 04:30:00', '2024-04-12 04:30:00');
INSERT INTO `t_job_log` VALUES (10369, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：12毫秒', 1, '', '2024-04-12 05:00:00', '2024-04-12 05:00:00', '2024-04-12 05:00:00');
INSERT INTO `t_job_log` VALUES (10370, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：0毫秒', 1, '', '2024-04-12 05:30:00', '2024-04-12 05:30:00', '2024-04-12 05:30:00');
INSERT INTO `t_job_log` VALUES (10371, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：6毫秒', 1, '', '2024-04-12 06:00:00', '2024-04-12 06:00:00', '2024-04-12 06:00:00');
INSERT INTO `t_job_log` VALUES (10372, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：0毫秒', 1, '', '2024-04-12 06:30:00', '2024-04-12 06:30:00', '2024-04-12 06:30:00');
INSERT INTO `t_job_log` VALUES (10373, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：6毫秒', 1, '', '2024-04-12 07:00:00', '2024-04-12 07:00:00', '2024-04-12 07:00:00');
INSERT INTO `t_job_log` VALUES (10374, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：5毫秒', 1, '', '2024-04-12 07:30:00', '2024-04-12 07:30:00', '2024-04-12 07:30:00');
INSERT INTO `t_job_log` VALUES (10375, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：1333毫秒', 1, '', '2024-04-12 07:50:01', '2024-04-12 07:50:00', '2024-04-12 07:50:01');
INSERT INTO `t_job_log` VALUES (10376, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：10毫秒', 1, '', '2024-04-12 08:00:00', '2024-04-12 08:00:00', '2024-04-12 08:00:00');
INSERT INTO `t_job_log` VALUES (10377, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：370毫秒', 1, '', '2024-04-12 08:00:00', '2024-04-12 08:00:00', '2024-04-12 08:00:00');
INSERT INTO `t_job_log` VALUES (10378, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：290毫秒', 1, '', '2024-04-12 08:10:00', '2024-04-12 08:10:00', '2024-04-12 08:10:00');
INSERT INTO `t_job_log` VALUES (10379, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：235毫秒', 1, '', '2024-04-12 08:20:00', '2024-04-12 08:20:00', '2024-04-12 08:20:00');
INSERT INTO `t_job_log` VALUES (10380, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：18毫秒', 1, '', '2024-04-12 08:30:00', '2024-04-12 08:30:00', '2024-04-12 08:30:00');
INSERT INTO `t_job_log` VALUES (10381, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：267毫秒', 1, '', '2024-04-12 08:30:00', '2024-04-12 08:30:00', '2024-04-12 08:30:00');
INSERT INTO `t_job_log` VALUES (10382, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：214毫秒', 1, '', '2024-04-12 08:40:00', '2024-04-12 08:40:00', '2024-04-12 08:40:00');
INSERT INTO `t_job_log` VALUES (10383, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：274毫秒', 1, '', '2024-04-12 08:50:00', '2024-04-12 08:50:00', '2024-04-12 08:50:00');
INSERT INTO `t_job_log` VALUES (10384, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：12毫秒', 1, '', '2024-04-12 09:00:00', '2024-04-12 09:00:00', '2024-04-12 09:00:00');
INSERT INTO `t_job_log` VALUES (10385, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：315毫秒', 1, '', '2024-04-12 09:00:00', '2024-04-12 09:00:00', '2024-04-12 09:00:00');
INSERT INTO `t_job_log` VALUES (10386, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：282毫秒', 1, '', '2024-04-12 09:10:00', '2024-04-12 09:10:00', '2024-04-12 09:10:00');
INSERT INTO `t_job_log` VALUES (10387, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：224毫秒', 1, '', '2024-04-12 09:20:00', '2024-04-12 09:20:00', '2024-04-12 09:20:00');
INSERT INTO `t_job_log` VALUES (10388, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：12毫秒', 1, '', '2024-04-12 09:30:00', '2024-04-12 09:30:00', '2024-04-12 09:30:00');
INSERT INTO `t_job_log` VALUES (10389, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：259毫秒', 1, '', '2024-04-12 09:30:00', '2024-04-12 09:30:00', '2024-04-12 09:30:00');
INSERT INTO `t_job_log` VALUES (10390, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：294毫秒', 1, '', '2024-04-12 09:40:00', '2024-04-12 09:40:00', '2024-04-12 09:40:00');
INSERT INTO `t_job_log` VALUES (10391, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：292毫秒', 1, '', '2024-04-12 09:50:00', '2024-04-12 09:50:00', '2024-04-12 09:50:00');
INSERT INTO `t_job_log` VALUES (10392, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：13毫秒', 1, '', '2024-04-12 10:00:00', '2024-04-12 10:00:00', '2024-04-12 10:00:00');
INSERT INTO `t_job_log` VALUES (10393, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：477毫秒', 1, '', '2024-04-12 10:00:00', '2024-04-12 10:00:00', '2024-04-12 10:00:00');
INSERT INTO `t_job_log` VALUES (10394, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：1122毫秒', 1, '', '2024-04-12 10:10:01', '2024-04-12 10:10:00', '2024-04-12 10:10:01');
INSERT INTO `t_job_log` VALUES (10395, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：292毫秒', 1, '', '2024-04-12 10:20:00', '2024-04-12 10:20:00', '2024-04-12 10:20:00');
INSERT INTO `t_job_log` VALUES (10396, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：16毫秒', 1, '', '2024-04-12 10:30:00', '2024-04-12 10:30:00', '2024-04-12 10:30:00');
INSERT INTO `t_job_log` VALUES (10397, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：226毫秒', 1, '', '2024-04-12 10:30:00', '2024-04-12 10:30:00', '2024-04-12 10:30:00');
INSERT INTO `t_job_log` VALUES (10398, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：271毫秒', 1, '', '2024-04-12 10:40:00', '2024-04-12 10:40:00', '2024-04-12 10:40:00');
INSERT INTO `t_job_log` VALUES (10399, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：418毫秒', 1, '', '2024-04-12 10:50:00', '2024-04-12 10:50:00', '2024-04-12 10:50:00');
INSERT INTO `t_job_log` VALUES (10400, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：19毫秒', 1, '', '2024-04-12 11:00:00', '2024-04-12 11:00:00', '2024-04-12 11:00:00');
INSERT INTO `t_job_log` VALUES (10401, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：246毫秒', 1, '', '2024-04-12 11:00:00', '2024-04-12 11:00:00', '2024-04-12 11:00:00');
INSERT INTO `t_job_log` VALUES (10402, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：233毫秒', 1, '', '2024-04-12 11:10:00', '2024-04-12 11:10:00', '2024-04-12 11:10:00');
INSERT INTO `t_job_log` VALUES (10403, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：549毫秒', 1, '', '2024-04-12 11:20:01', '2024-04-12 11:20:00', '2024-04-12 11:20:01');
INSERT INTO `t_job_log` VALUES (10404, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：11毫秒', 1, '', '2024-04-12 11:30:00', '2024-04-12 11:30:00', '2024-04-12 11:30:00');
INSERT INTO `t_job_log` VALUES (10405, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：290毫秒', 1, '', '2024-04-12 11:30:00', '2024-04-12 11:30:00', '2024-04-12 11:30:00');
INSERT INTO `t_job_log` VALUES (10406, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：390毫秒', 1, '', '2024-04-12 11:40:00', '2024-04-12 11:40:00', '2024-04-12 11:40:00');
INSERT INTO `t_job_log` VALUES (10407, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4358毫秒', 1, '', '2024-04-12 11:50:04', '2024-04-12 11:50:00', '2024-04-12 11:50:04');
INSERT INTO `t_job_log` VALUES (10408, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：0毫秒', 1, '', '2024-04-12 12:00:00', '2024-04-12 12:00:00', '2024-04-12 12:00:00');
INSERT INTO `t_job_log` VALUES (10409, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：2408毫秒', 1, '', '2024-04-12 12:00:02', '2024-04-12 12:00:00', '2024-04-12 12:00:02');
INSERT INTO `t_job_log` VALUES (10410, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：283毫秒', 1, '', '2024-04-12 12:10:00', '2024-04-12 12:10:00', '2024-04-12 12:10:00');
INSERT INTO `t_job_log` VALUES (10411, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：3565毫秒', 1, '', '2024-04-12 12:20:04', '2024-04-12 12:20:00', '2024-04-12 12:20:04');
INSERT INTO `t_job_log` VALUES (10412, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：7毫秒', 1, '', '2024-04-12 12:30:00', '2024-04-12 12:30:00', '2024-04-12 12:30:00');
INSERT INTO `t_job_log` VALUES (10413, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：339毫秒', 1, '', '2024-04-12 12:30:00', '2024-04-12 12:30:00', '2024-04-12 12:30:00');
INSERT INTO `t_job_log` VALUES (10414, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4320毫秒', 1, '', '2024-04-12 12:40:04', '2024-04-12 12:40:00', '2024-04-12 12:40:04');
INSERT INTO `t_job_log` VALUES (10415, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4402毫秒', 1, '', '2024-04-12 12:50:04', '2024-04-12 12:50:00', '2024-04-12 12:50:04');
INSERT INTO `t_job_log` VALUES (10416, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：8毫秒', 1, '', '2024-04-12 13:00:00', '2024-04-12 13:00:00', '2024-04-12 13:00:00');
INSERT INTO `t_job_log` VALUES (10417, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：1492毫秒', 1, '', '2024-04-12 13:00:02', '2024-04-12 13:00:00', '2024-04-12 13:00:02');
INSERT INTO `t_job_log` VALUES (10418, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4369毫秒', 1, '', '2024-04-12 13:10:04', '2024-04-12 13:10:00', '2024-04-12 13:10:04');
INSERT INTO `t_job_log` VALUES (10419, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：1239毫秒', 1, '', '2024-04-12 13:20:01', '2024-04-12 13:20:00', '2024-04-12 13:20:01');
INSERT INTO `t_job_log` VALUES (10420, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：5毫秒', 1, '', '2024-04-12 13:30:00', '2024-04-12 13:30:00', '2024-04-12 13:30:00');
INSERT INTO `t_job_log` VALUES (10421, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：1608毫秒', 1, '', '2024-04-12 13:30:02', '2024-04-12 13:30:00', '2024-04-12 13:30:02');
INSERT INTO `t_job_log` VALUES (10422, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：1476毫秒', 1, '', '2024-04-12 13:40:01', '2024-04-12 13:40:00', '2024-04-12 13:40:01');
INSERT INTO `t_job_log` VALUES (10423, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：480毫秒', 1, '', '2024-04-12 16:20:00', '2024-04-12 16:20:00', '2024-04-12 16:20:00');
INSERT INTO `t_job_log` VALUES (10424, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：8毫秒', 1, '', '2024-04-12 16:30:00', '2024-04-12 16:30:00', '2024-04-12 16:30:00');
INSERT INTO `t_job_log` VALUES (10425, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：3329毫秒', 1, '', '2024-04-12 16:30:03', '2024-04-12 16:30:00', '2024-04-12 16:30:03');
INSERT INTO `t_job_log` VALUES (10426, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：340毫秒', 1, '', '2024-04-12 16:40:00', '2024-04-12 16:40:00', '2024-04-12 16:40:00');
INSERT INTO `t_job_log` VALUES (10427, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4387毫秒', 1, '', '2024-04-12 16:50:04', '2024-04-12 16:50:00', '2024-04-12 16:50:04');
INSERT INTO `t_job_log` VALUES (10428, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：8毫秒', 1, '', '2024-04-12 17:00:00', '2024-04-12 17:00:00', '2024-04-12 17:00:00');
INSERT INTO `t_job_log` VALUES (10429, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：3499毫秒', 1, '', '2024-04-12 17:00:04', '2024-04-12 17:00:00', '2024-04-12 17:00:04');
INSERT INTO `t_job_log` VALUES (10430, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：317毫秒', 1, '', '2024-04-12 17:10:00', '2024-04-12 17:10:00', '2024-04-12 17:10:00');
INSERT INTO `t_job_log` VALUES (10431, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4420毫秒', 1, '', '2024-04-12 17:20:04', '2024-04-12 17:20:00', '2024-04-12 17:20:04');
INSERT INTO `t_job_log` VALUES (10432, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：9毫秒', 1, '', '2024-04-12 17:30:00', '2024-04-12 17:30:00', '2024-04-12 17:30:00');
INSERT INTO `t_job_log` VALUES (10433, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4431毫秒', 1, '', '2024-04-12 17:30:04', '2024-04-12 17:30:00', '2024-04-12 17:30:04');
INSERT INTO `t_job_log` VALUES (10434, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4298毫秒', 1, '', '2024-04-12 17:40:04', '2024-04-12 17:40:00', '2024-04-12 17:40:04');
INSERT INTO `t_job_log` VALUES (10435, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：2943毫秒', 1, '', '2024-04-12 17:50:03', '2024-04-12 17:50:00', '2024-04-12 17:50:03');
INSERT INTO `t_job_log` VALUES (10436, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：8毫秒', 1, '', '2024-04-12 18:00:00', '2024-04-12 18:00:00', '2024-04-12 18:00:00');
INSERT INTO `t_job_log` VALUES (10437, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：3702毫秒', 1, '', '2024-04-12 18:00:04', '2024-04-12 18:00:00', '2024-04-12 18:00:04');
INSERT INTO `t_job_log` VALUES (10438, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4507毫秒', 1, '', '2024-04-12 18:10:05', '2024-04-12 18:10:00', '2024-04-12 18:10:05');
INSERT INTO `t_job_log` VALUES (10439, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：1331毫秒', 1, '', '2024-04-12 18:20:01', '2024-04-12 18:20:00', '2024-04-12 18:20:01');
INSERT INTO `t_job_log` VALUES (10440, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：12毫秒', 1, '', '2024-04-12 18:30:00', '2024-04-12 18:30:00', '2024-04-12 18:30:00');
INSERT INTO `t_job_log` VALUES (10441, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：6286毫秒', 1, '', '2024-04-12 18:30:06', '2024-04-12 18:30:00', '2024-04-12 18:30:06');
INSERT INTO `t_job_log` VALUES (10442, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：327毫秒', 1, '', '2024-04-12 18:40:00', '2024-04-12 18:40:00', '2024-04-12 18:40:00');
INSERT INTO `t_job_log` VALUES (10443, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4460毫秒', 1, '', '2024-04-12 18:50:04', '2024-04-12 18:50:00', '2024-04-12 18:50:04');
INSERT INTO `t_job_log` VALUES (10444, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：7毫秒', 1, '', '2024-04-12 19:00:00', '2024-04-12 19:00:00', '2024-04-12 19:00:00');
INSERT INTO `t_job_log` VALUES (10445, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：307毫秒', 1, '', '2024-04-12 19:00:00', '2024-04-12 19:00:00', '2024-04-12 19:00:00');
INSERT INTO `t_job_log` VALUES (10446, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：3409毫秒', 1, '', '2024-04-12 19:10:03', '2024-04-12 19:10:00', '2024-04-12 19:10:03');
INSERT INTO `t_job_log` VALUES (10447, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：3311毫秒', 1, '', '2024-04-12 19:20:03', '2024-04-12 19:20:00', '2024-04-12 19:20:03');
INSERT INTO `t_job_log` VALUES (10448, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：8毫秒', 1, '', '2024-04-12 19:30:00', '2024-04-12 19:30:00', '2024-04-12 19:30:00');
INSERT INTO `t_job_log` VALUES (10449, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：368毫秒', 1, '', '2024-04-12 19:30:00', '2024-04-12 19:30:00', '2024-04-12 19:30:00');
INSERT INTO `t_job_log` VALUES (10450, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：482毫秒', 1, '', '2024-04-12 19:40:00', '2024-04-12 19:40:00', '2024-04-12 19:40:00');
INSERT INTO `t_job_log` VALUES (10451, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：2353毫秒', 1, '', '2024-04-12 19:50:02', '2024-04-12 19:50:00', '2024-04-12 19:50:02');
INSERT INTO `t_job_log` VALUES (10452, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：7毫秒', 1, '', '2024-04-12 20:00:00', '2024-04-12 20:00:00', '2024-04-12 20:00:00');
INSERT INTO `t_job_log` VALUES (10453, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：250毫秒', 1, '', '2024-04-12 20:00:00', '2024-04-12 20:00:00', '2024-04-12 20:00:00');
INSERT INTO `t_job_log` VALUES (10454, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：1280毫秒', 1, '', '2024-04-12 20:10:01', '2024-04-12 20:10:00', '2024-04-12 20:10:01');
INSERT INTO `t_job_log` VALUES (10455, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4404毫秒', 1, '', '2024-04-12 20:20:04', '2024-04-12 20:20:00', '2024-04-12 20:20:04');
INSERT INTO `t_job_log` VALUES (10456, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：6毫秒', 1, '', '2024-04-12 20:30:00', '2024-04-12 20:30:00', '2024-04-12 20:30:00');
INSERT INTO `t_job_log` VALUES (10457, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：1355毫秒', 1, '', '2024-04-12 20:30:01', '2024-04-12 20:30:00', '2024-04-12 20:30:01');
INSERT INTO `t_job_log` VALUES (10458, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：3218毫秒', 1, '', '2024-04-12 20:40:03', '2024-04-12 20:40:00', '2024-04-12 20:40:03');
INSERT INTO `t_job_log` VALUES (10459, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：386毫秒', 1, '', '2024-04-12 20:50:00', '2024-04-12 20:50:00', '2024-04-12 20:50:00');
INSERT INTO `t_job_log` VALUES (10460, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：8毫秒', 1, '', '2024-04-12 21:00:00', '2024-04-12 21:00:00', '2024-04-12 21:00:00');
INSERT INTO `t_job_log` VALUES (10461, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4459毫秒', 1, '', '2024-04-12 21:00:04', '2024-04-12 21:00:00', '2024-04-12 21:00:04');
INSERT INTO `t_job_log` VALUES (10462, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4287毫秒', 1, '', '2024-04-12 21:10:04', '2024-04-12 21:10:00', '2024-04-12 21:10:04');
INSERT INTO `t_job_log` VALUES (10463, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：241毫秒', 1, '', '2024-04-12 21:20:00', '2024-04-12 21:20:00', '2024-04-12 21:20:00');
INSERT INTO `t_job_log` VALUES (10464, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：3毫秒', 1, '', '2024-04-12 21:30:00', '2024-04-12 21:30:00', '2024-04-12 21:30:00');
INSERT INTO `t_job_log` VALUES (10465, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：1366毫秒', 1, '', '2024-04-12 21:30:01', '2024-04-12 21:30:00', '2024-04-12 21:30:01');
INSERT INTO `t_job_log` VALUES (10466, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：3763毫秒', 1, '', '2024-04-12 21:40:04', '2024-04-12 21:40:00', '2024-04-12 21:40:04');
INSERT INTO `t_job_log` VALUES (10467, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：4421毫秒', 1, '', '2024-04-12 21:50:04', '2024-04-12 21:50:00', '2024-04-12 21:50:04');
INSERT INTO `t_job_log` VALUES (10468, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：9毫秒', 1, '', '2024-04-12 22:00:00', '2024-04-12 22:00:00', '2024-04-12 22:00:00');
INSERT INTO `t_job_log` VALUES (10469, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：3318毫秒', 1, '', '2024-04-12 22:00:03', '2024-04-12 22:00:00', '2024-04-12 22:00:03');
INSERT INTO `t_job_log` VALUES (10470, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：1229毫秒', 1, '', '2024-04-12 22:10:01', '2024-04-12 22:10:00', '2024-04-12 22:10:01');
INSERT INTO `t_job_log` VALUES (10471, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：3357毫秒', 1, '', '2024-04-12 22:20:03', '2024-04-12 22:20:00', '2024-04-12 22:20:03');
INSERT INTO `t_job_log` VALUES (10472, 81, '统计用户地域分布', '默认', 'auroraQuartz.statisticalUserArea', '统计用户地域分布 总共耗时：7毫秒', 1, '', '2024-04-12 22:30:00', '2024-04-12 22:30:00', '2024-04-12 22:30:00');
INSERT INTO `t_job_log` VALUES (10473, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：3276毫秒', 1, '', '2024-04-12 22:30:03', '2024-04-12 22:30:00', '2024-04-12 22:30:03');
INSERT INTO `t_job_log` VALUES (10474, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：254毫秒', 1, '', '2024-04-12 22:40:00', '2024-04-12 22:40:00', '2024-04-12 22:40:00');
INSERT INTO `t_job_log` VALUES (10475, 84, '百度SEO', '默认', 'auroraQuartz.baiduSeo', '百度SEO 总共耗时：214毫秒', 1, '', '2024-04-12 22:50:00', '2024-04-12 22:50:00', '2024-04-12 22:50:00');

-- ----------------------------
-- Table structure for t_menu
-- ----------------------------
DROP TABLE IF EXISTS `t_menu`;
CREATE TABLE `t_menu`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '主键',
  `name` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '菜单名',
  `path` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '菜单路径',
  `component` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '组件',
  `icon` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '菜单icon',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  `order_num` tinyint(1) NOT NULL COMMENT '排序',
  `parent_id` int NULL DEFAULT NULL COMMENT '父id',
  `is_hidden` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否隐藏  0否1是',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 226 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_menu
-- ----------------------------
INSERT INTO `t_menu` VALUES (1, '首页', '/', '/home/Home.vue', 'el-icon-myshouye', '2021-01-26 17:06:51', '2024-03-14 15:54:22', 1, NULL, 0);
INSERT INTO `t_menu` VALUES (2, '文章管理', '/article-submenu', 'Layout', 'el-icon-mywenzhang-copy', '2021-01-25 20:43:07', '2022-07-27 16:32:55', 2, NULL, 0);
INSERT INTO `t_menu` VALUES (3, '消息管理', '/message-submenu', 'Layout', 'el-icon-myxiaoxi', '2021-01-25 20:44:17', '2022-07-27 16:32:57', 3, NULL, 0);
INSERT INTO `t_menu` VALUES (4, '系统管理', '/system-submenu', 'Layout', 'el-icon-myshezhi', '2021-01-25 20:45:57', '2021-01-25 20:45:59', 5, NULL, 0);
INSERT INTO `t_menu` VALUES (5, '个人中心', '/setting', '/setting/Setting.vue', 'el-icon-myuser', '2021-01-26 17:22:38', '2021-01-26 17:22:41', 7, NULL, 0);
INSERT INTO `t_menu` VALUES (6, '发布文章', '/articles', '/article/Article.vue', 'el-icon-myfabiaowenzhang', '2021-01-26 14:30:48', '2021-01-26 14:30:51', 1, 2, 0);
INSERT INTO `t_menu` VALUES (7, '修改文章', '/articles/*', '/article/Article.vue', 'el-icon-myfabiaowenzhang', '2021-01-26 14:31:32', '2022-07-28 16:28:06', 2, 2, 1);
INSERT INTO `t_menu` VALUES (8, '文章列表', '/article-list', '/article/ArticleList.vue', 'el-icon-mywenzhangliebiao', '2021-01-26 14:32:13', '2021-01-26 14:32:16', 3, 2, 0);
INSERT INTO `t_menu` VALUES (9, '分类管理', '/categories', '/category/Category.vue', 'el-icon-myfenlei', '2021-01-26 14:33:42', '2021-01-26 14:33:43', 4, 2, 0);
INSERT INTO `t_menu` VALUES (10, '标签管理', '/tags', '/tag/Tag.vue', 'el-icon-myicontag', '2021-01-26 14:34:33', '2021-01-26 14:34:36', 5, 2, 0);
INSERT INTO `t_menu` VALUES (11, '评论管理', '/comments', '/comment/Comment.vue', 'el-icon-mypinglunzu', '2021-01-26 14:35:31', '2021-01-26 14:35:34', 1, 3, 0);
INSERT INTO `t_menu` VALUES (13, '用户列表', '/users', '/user/User.vue', 'el-icon-myyonghuliebiao', '2021-01-26 14:38:09', '2021-01-26 14:38:12', 1, 202, 0);
INSERT INTO `t_menu` VALUES (14, '角色管理', '/roles', '/role/Role.vue', 'el-icon-myjiaoseliebiao', '2021-01-26 14:39:01', '2021-01-26 14:39:03', 2, 213, 0);
INSERT INTO `t_menu` VALUES (15, '接口管理', '/resources', '/resource/Resource.vue', 'el-icon-myjiekouguanli', '2021-01-26 14:40:14', '2021-08-07 20:00:28', 2, 213, 0);
INSERT INTO `t_menu` VALUES (16, '菜单管理', '/menus', '/menu/Menu.vue', 'el-icon-mycaidan', '2021-01-26 14:40:54', '2021-08-07 10:18:49', 2, 213, 0);
INSERT INTO `t_menu` VALUES (17, '友链管理', '/links', '/friendLink/FriendLink.vue', 'el-icon-mydashujukeshihuaico-', '2021-01-26 14:41:35', '2021-01-26 14:41:37', 3, 4, 0);
INSERT INTO `t_menu` VALUES (18, '关于我', '/about', '/about/About.vue', 'el-icon-myguanyuwo', '2021-01-26 14:42:05', '2021-01-26 14:42:10', 4, 4, 0);
INSERT INTO `t_menu` VALUES (19, '日志管理', '/log-submenu', 'Layout', 'el-icon-myguanyuwo', '2021-01-31 21:33:56', '2021-01-31 21:33:59', 6, NULL, 0);
INSERT INTO `t_menu` VALUES (20, '操作日志', '/operation/log', '/log/OperationLog.vue', 'el-icon-myguanyuwo', '2021-01-31 15:53:21', '2022-07-28 10:51:28', 1, 19, 0);
INSERT INTO `t_menu` VALUES (201, '在线用户', '/online/users', '/user/Online.vue', 'el-icon-myyonghuliebiao', '2021-02-05 14:59:51', '2021-02-05 14:59:53', 7, 202, 0);
INSERT INTO `t_menu` VALUES (202, '用户管理', '/users-submenu', 'Layout', 'el-icon-myyonghuliebiao', '2021-02-06 23:44:59', '2022-07-27 16:32:59', 4, NULL, 0);
INSERT INTO `t_menu` VALUES (205, '相册管理', '/album-submenu', 'Layout', 'el-icon-myimage-fill', '2021-08-03 15:10:54', '2021-08-07 20:02:06', 5, NULL, 0);
INSERT INTO `t_menu` VALUES (206, '相册列表', '/albums', '/album/Album.vue', 'el-icon-myzhaopian', '2021-08-03 20:29:19', '2021-08-04 11:45:47', 1, 205, 0);
INSERT INTO `t_menu` VALUES (208, '照片管理', '/albums/:albumId', '/album/Photo.vue', 'el-icon-myzhaopian', '2021-08-03 21:37:47', '2021-08-05 10:24:08', 1, 205, 1);
INSERT INTO `t_menu` VALUES (209, '定时任务', '/quartz', '/quartz/Quartz.vue', 'el-icon-myyemianpeizhi', '2021-08-04 11:36:27', '2021-08-07 20:01:26', 2, 4, 0);
INSERT INTO `t_menu` VALUES (210, '照片回收站', '/photos/delete', '/album/Delete.vue', 'el-icon-myhuishouzhan', '2021-08-05 13:55:19', NULL, 3, 205, 1);
INSERT INTO `t_menu` VALUES (213, '权限管理', '/permission-submenu', 'Layout', 'el-icon-mydaohanglantubiao_quanxianguanli', '2021-08-07 19:56:55', '2021-08-07 19:59:40', 4, NULL, 0);
INSERT INTO `t_menu` VALUES (214, '网站管理', '/website', '/website/Website.vue', 'el-icon-myxitong', '2021-08-07 20:06:41', NULL, 1, 4, 0);
INSERT INTO `t_menu` VALUES (220, '定时任务日志', '/quartz/log/:quartzId', '/log/QuartzLog.vue', 'el-icon-myguanyuwo', '2022-07-28 10:53:23', '2024-04-06 18:22:31', 2, 19, 1);
INSERT INTO `t_menu` VALUES (221, '说说管理', '/talk-submenu', 'Layout', 'el-icon-mypinglun', '2022-08-15 17:27:10', '2022-08-15 17:27:39', 3, NULL, 0);
INSERT INTO `t_menu` VALUES (222, '说说列表', '/talk-list', '/talk/TalkList.vue', 'el-icon-myiconfontdongtaidianji', '2022-08-15 17:29:05', NULL, 1, 221, 0);
INSERT INTO `t_menu` VALUES (223, '发布说说', '/talks', '/talk/Talk.vue', 'el-icon-myfabusekuai', '2022-08-15 17:34:26', '2022-08-16 16:06:04', 2, 221, 0);
INSERT INTO `t_menu` VALUES (224, '修改说说', '/talks/:talkId', '/talk/Talk.vue', 'el-icon-myfabusekuai', '2022-08-16 16:06:59', '2024-04-06 18:20:57', 3, 221, 1);
INSERT INTO `t_menu` VALUES (225, '异常日志', '/exception/log', '/log/ExceptionLog.vue', 'el-icon-myguanyuwo', '2022-08-25 13:40:08', '2022-08-25 13:40:31', 1, 19, 0);

-- ----------------------------
-- Table structure for t_operation_log
-- ----------------------------
DROP TABLE IF EXISTS `t_operation_log`;
CREATE TABLE `t_operation_log`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `opt_module` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '操作模块',
  `opt_type` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '操作类型',
  `opt_uri` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '操作url',
  `opt_method` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '操作方法',
  `opt_desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '操作描述',
  `request_param` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '请求参数',
  `request_method` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '请求方式',
  `response_data` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '返回数据',
  `user_id` int NOT NULL COMMENT '用户id',
  `nickname` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '用户昵称',
  `ip_address` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '操作ip',
  `ip_source` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '操作地址',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1796 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_operation_log
-- ----------------------------
INSERT INTO `t_operation_log` VALUES (1671, '用户信息模块', '修改', '/users/info', 'com.aurora.controller.UserInfoController.updateUserInfo', '更新用户信息', '[{\"intro\":\"演示账号的用户简介\",\"nickname\":\"演示账号\",\"website\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-12 22:05:17', NULL);
INSERT INTO `t_operation_log` VALUES (1672, 'aurora信息', '上传', '/admin/config/images', 'com.aurora.controller.AuroraInfoController.savePhotoAlbumCover', '上传博客配置图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-12 22:05:32', NULL);
INSERT INTO `t_operation_log` VALUES (1673, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"https://static.linhaojun.top/config/da4c6d8c13f66a8dd6716ddb48d73299.jpg\",\"author\":\"花未眠\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"苏ICP备2022012376号\",\"csdn\":\"\",\"englishName\":\"huaweimian\",\"gitee\":\"https://gitee.com/linhaojun\",\"github\":\"https://github.com/linhaojun857\",\"isCommentReview\":0,\"isEmailNotice\":1,\"isReward\":1,\"juejin\":\"\",\"logo\":\"https://static.linhaojun.top/config/cc36e9fa5aeb214e41495c1e2268f2db.png\",\"multiLanguage\":1,\"name\":\"花未眠\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"https://static.linhaojun.top/config/2af2e2db20740e712f0a011a6f8c9af5.jpg\",\"twitter\":\"\",\"userAvatar\":\"https://static.linhaojun.top/config/0af1901da1e64dfb99bb61db21e716c4.jpeg\",\"weChat\":\"\",\"websiteCreateTime\":\"2022-08-19\",\"weiXinQRCode\":\"https://static.linhaojun.top/config/ed47edae605f74306f751c6fba9f14bd.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-12 22:05:37', NULL);
INSERT INTO `t_operation_log` VALUES (1674, '用户信息模块', '修改', '/users/avatar', 'com.aurora.controller.UserInfoController.updateUserAvatar', '更新用户头像', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/avatar/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-12 22:05:50', NULL);
INSERT INTO `t_operation_log` VALUES (1675, '用户信息模块', '修改', '/users/info', 'com.aurora.controller.UserInfoController.updateUserInfo', '更新用户信息', '[{\"intro\":\"演示账号的用户简介\",\"nickname\":\"演示账号\",\"website\":\"https://www.linhaojun.top\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-12 22:05:52', NULL);
INSERT INTO `t_operation_log` VALUES (1676, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"https://static.linhaojun.top/config/da4c6d8c13f66a8dd6716ddb48d73299.jpg\",\"author\":\"花未眠\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"苏ICP备2022012376号\",\"csdn\":\"\",\"englishName\":\"huaweimian\",\"gitee\":\"https://gitee.com/linhaojun\",\"github\":\"https://github.com/linhaojun857\",\"isCommentReview\":0,\"isEmailNotice\":1,\"isReward\":1,\"juejin\":\"\",\"logo\":\"https://static.linhaojun.top/config/cc36e9fa5aeb214e41495c1e2268f2db.png\",\"multiLanguage\":1,\"name\":\"啊哈14\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"https://static.linhaojun.top/config/2af2e2db20740e712f0a011a6f8c9af5.jpg\",\"twitter\":\"\",\"userAvatar\":\"https://static.linhaojun.top/config/0af1901da1e64dfb99bb61db21e716c4.jpeg\",\"weChat\":\"\",\"websiteCreateTime\":\"2022-08-19\",\"weiXinQRCode\":\"https://static.linhaojun.top/config/ed47edae605f74306f751c6fba9f14bd.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-14 14:18:24', NULL);
INSERT INTO `t_operation_log` VALUES (1677, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"https://static.linhaojun.top/config/da4c6d8c13f66a8dd6716ddb48d73299.jpg\",\"author\":\"花未眠\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"苏ICP备2022012376号\",\"csdn\":\"\",\"englishName\":\"huaweimian\",\"gitee\":\"https://gitee.com/linhaojun\",\"github\":\"https://github.com/linhaojun857\",\"isCommentReview\":0,\"isEmailNotice\":1,\"isReward\":1,\"juejin\":\"\",\"logo\":\"https://static.linhaojun.top/config/cc36e9fa5aeb214e41495c1e2268f2db.png\",\"multiLanguage\":1,\"name\":\"啊哈14\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"https://static.linhaojun.top/config/2af2e2db20740e712f0a011a6f8c9af5.jpg\",\"twitter\":\"\",\"userAvatar\":\"https://static.linhaojun.top/config/0af1901da1e64dfb99bb61db21e716c4.jpeg\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"https://static.linhaojun.top/config/ed47edae605f74306f751c6fba9f14bd.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-14 14:28:50', NULL);
INSERT INTO `t_operation_log` VALUES (1678, 'aurora信息', '修改', '/admin/about', 'com.aurora.controller.AuroraInfoController.updateAbout', '修改关于我信息', '[{\"content\":\"this is 啊哈14\'s blog.\\nwelcome to my website.\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-14 14:30:06', NULL);
INSERT INTO `t_operation_log` VALUES (1679, '菜单模块', '修改', '/admin/menus/isHidden', 'com.aurora.controller.MenuController.updateMenuIsHidden', '修改目录是否隐藏', '[{\"id\":1,\"isHidden\":1}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-14 15:54:21', NULL);
INSERT INTO `t_operation_log` VALUES (1680, '菜单模块', '修改', '/admin/menus/isHidden', 'com.aurora.controller.MenuController.updateMenuIsHidden', '修改目录是否隐藏', '[{\"id\":1,\"isHidden\":0}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-14 15:54:22', NULL);
INSERT INTO `t_operation_log` VALUES (1681, '菜单模块', '修改', '/admin/menus/isHidden', 'com.aurora.controller.MenuController.updateMenuIsHidden', '修改目录是否隐藏', '[{\"id\":224,\"isHidden\":0}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-14 15:54:41', NULL);
INSERT INTO `t_operation_log` VALUES (1682, '角色模块', '新增或修改', '/admin/role', 'com.aurora.controller.RoleController.saveOrUpdateRole', '保存或更新角色', '[{\"id\":14,\"menuIds\":[1,2,6,7,8,9,10,3,11,221,222,223,224,202,13,201,213,14,15,16,4,214,209,17,18,205,206,208,210,5],\"roleName\":\"test\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-19 13:15:59', NULL);
INSERT INTO `t_operation_log` VALUES (1683, '角色模块', '新增或修改', '/admin/role', 'com.aurora.controller.RoleController.saveOrUpdateRole', '保存或更新角色', '[{\"id\":14,\"menuIds\":[1,2,6,7,8,9,10,3,11,221,222,223,224,202,13,201,213,14,15,16,4,214,209,17,18,205,206,208,210,19,20,225,220,5],\"roleName\":\"test\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-19 13:16:36', NULL);
INSERT INTO `t_operation_log` VALUES (1684, '角色模块', '新增或修改', '/admin/role', 'com.aurora.controller.RoleController.saveOrUpdateRole', '保存或更新角色', '[{\"id\":1,\"resourceIds\":[1050,1070,1071,1088,1148,1149,1051,1081,1082,1083,1084,1052,1101,1102,1103,1053,1089,1090,1091,1092,1054,1093,1094,1095,1096,1097,1098,1099,1100,1055,1158,1159,1160,1161,1162,1163,1164,1056,1108,1109,1073,1074,1075,1076,1077,1078,1079,1080,1058,1130,1131,1132,1133,1059,1110,1111,1112,1113,1114,1121,1060,1142,1143,1146,1147,1061,1140,1141,1144,1062,1115,1116,1117,1118,1119,1120,1063,1104,1105,1106,1107,1126,1139,1064,1125,1128,1129,1145,1065,1085,1086,1087,1167,1066,1134,1135,1136,1137,1067,1122,1123,1124,1127,1186,1187,1188],\"roleName\":\"admin\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-19 18:06:07', NULL);
INSERT INTO `t_operation_log` VALUES (1685, '角色模块', '新增或修改', '/admin/role', 'com.aurora.controller.RoleController.saveOrUpdateRole', '保存或更新角色', '[{\"id\":1,\"resourceIds\":[1050,1070,1071,1088,1148,1149,1051,1081,1082,1083,1084,1052,1101,1102,1103,1053,1089,1090,1091,1092,1054,1093,1094,1095,1096,1097,1098,1099,1100,1055,1158,1159,1160,1161,1162,1163,1164,1056,1108,1109,1057,1072,1073,1074,1075,1076,1077,1078,1079,1080,1058,1130,1131,1132,1133,1059,1110,1111,1112,1113,1114,1121,1060,1142,1143,1146,1147,1061,1140,1141,1144,1062,1115,1116,1117,1118,1119,1120,1063,1104,1105,1106,1107,1126,1139,1064,1125,1128,1129,1145,1065,1085,1086,1087,1167,1066,1134,1135,1136,1137,1067,1122,1123,1124,1127,1188],\"roleName\":\"admin\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-19 18:07:16', NULL);
INSERT INTO `t_operation_log` VALUES (1686, '角色模块', '新增或修改', '/admin/role', 'com.aurora.controller.RoleController.saveOrUpdateRole', '保存或更新角色', '[{\"id\":1,\"resourceIds\":[1050,1070,1071,1088,1148,1149,1051,1081,1082,1083,1084,1052,1101,1102,1103,1053,1089,1090,1091,1092,1054,1093,1094,1095,1096,1097,1098,1099,1100,1055,1158,1159,1160,1161,1162,1163,1164,1056,1108,1109,1057,1072,1073,1074,1075,1076,1077,1078,1079,1080,1058,1130,1131,1132,1133,1059,1110,1111,1112,1113,1114,1121,1060,1142,1143,1146,1147,1061,1140,1141,1144,1062,1115,1116,1117,1118,1119,1120,1063,1104,1105,1106,1107,1126,1139,1064,1125,1128,1129,1145,1065,1085,1086,1087,1167,1066,1134,1135,1136,1137,1067,1122,1123,1124,1127,1186,1187,1188],\"roleName\":\"admin\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-19 18:08:01', NULL);
INSERT INTO `t_operation_log` VALUES (1687, '菜单模块', '修改', '/admin/menus/isHidden', 'com.aurora.controller.MenuController.updateMenuIsHidden', '修改目录是否隐藏', '[{\"id\":220,\"isHidden\":0}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-23 18:58:07', NULL);
INSERT INTO `t_operation_log` VALUES (1688, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"\",\"articleContent\":\"# 测试文章\\n`test`\\n> 文章功能测试\",\"articleCover\":\"\",\"articleTitle\":\"测试文章demo\",\"isTop\":0,\"status\":3,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-25 18:46:53', NULL);
INSERT INTO `t_operation_log` VALUES (1689, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"\",\"articleContent\":\"# 测试文章\\n`test`\\n> 文章功能测试\",\"articleCover\":\"\",\"articleTitle\":\"测试文章demo\",\"id\":135,\"isFeatured\":0,\"isTop\":0,\"status\":3,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-25 18:47:47', NULL);
INSERT INTO `t_operation_log` VALUES (1690, '文章模块', '上传', '/admin/articles/images', 'com.aurora.controller.ArticleController.saveArticleImages', '上传文章图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/articles/6b8e209c04510c80669c8f3e43794e2d.png\",\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-25 18:49:35', NULL);
INSERT INTO `t_operation_log` VALUES (1691, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"测试文章\",\"articleContent\":\"# 测试文章\\n`test`\\n> 文章功能测试\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/6b8e209c04510c80669c8f3e43794e2d.png\",\"articleTitle\":\"测试文章demo\",\"categoryName\":\"测试\",\"id\":135,\"isFeatured\":0,\"isTop\":0,\"status\":1,\"tagNames\":[\"测试\"],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-25 18:50:24', NULL);
INSERT INTO `t_operation_log` VALUES (1692, '说说模块', '新增或修改', '/admin/talks', 'com.aurora.controller.TalkController.saveOrUpdateTalk', '保存或修改说说', '[{\"content\":\"说说测试\",\"images\":\"\",\"isTop\":0,\"status\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-26 18:10:47', NULL);
INSERT INTO `t_operation_log` VALUES (1693, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"测试文章\",\"articleContent\":\"# 测试文章\\n`test`\\n> 文章功能测试\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/6b8e209c04510c80669c8f3e43794e2d.png\",\"articleTitle\":\"测试文章demo\",\"categoryName\":\"测试\",\"id\":135,\"isFeatured\":0,\"isTop\":0,\"status\":1,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-27 18:11:31', NULL);
INSERT INTO `t_operation_log` VALUES (1694, '分类模块', '新增或修改', '/admin/categories', 'com.aurora.controller.CategoryController.saveOrUpdateCategory', '添加或修改分类', '[{\"categoryName\":\"分类测试\",\"id\":217}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 14:45:53', NULL);
INSERT INTO `t_operation_log` VALUES (1695, '标签模块', '新增或修改', '/admin/tags', 'com.aurora.controller.TagController.saveOrUpdateTag', '添加或修改标签', '[{\"id\":41,\"tagName\":\"分类测试\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 14:46:02', NULL);
INSERT INTO `t_operation_log` VALUES (1696, '标签模块', '新增或修改', '/admin/tags', 'com.aurora.controller.TagController.saveOrUpdateTag', '添加或修改标签', '[{\"id\":41,\"tagName\":\"标签测试\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 14:46:31', NULL);
INSERT INTO `t_operation_log` VALUES (1697, '用户信息模块', '修改', '/users/info', 'com.aurora.controller.UserInfoController.updateUserInfo', '更新用户信息', '[{\"intro\":\"管理员\",\"nickname\":\"管理员账号\",\"website\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 15:27:06', NULL);
INSERT INTO `t_operation_log` VALUES (1698, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"https://static.linhaojun.top/config/da4c6d8c13f66a8dd6716ddb48d73299.jpg\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"gitee\":\"https://gitee.com/linhaojun\",\"github\":\"https://github.com/linhaojun857\",\"isCommentReview\":0,\"isEmailNotice\":1,\"isReward\":1,\"juejin\":\"\",\"logo\":\"https://static.linhaojun.top/config/cc36e9fa5aeb214e41495c1e2268f2db.png\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"https://static.linhaojun.top/config/2af2e2db20740e712f0a011a6f8c9af5.jpg\",\"twitter\":\"\",\"userAvatar\":\"https://static.linhaojun.top/config/0af1901da1e64dfb99bb61db21e716c4.jpeg\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"https://static.linhaojun.top/config/ed47edae605f74306f751c6fba9f14bd.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 15:31:02', NULL);
INSERT INTO `t_operation_log` VALUES (1699, '用户信息模块', '修改', '/users/info', 'com.aurora.controller.UserInfoController.updateUserInfo', '更新用户信息', '[{\"intro\":\"管理员\",\"nickname\":\"管理员账号\",\"website\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 15:46:57', NULL);
INSERT INTO `t_operation_log` VALUES (1700, '用户信息模块', '修改', '/users/info', 'com.aurora.controller.UserInfoController.updateUserInfo', '更新用户信息', '[{\"intro\":\"管理员\",\"nickname\":\"管理员账号\",\"website\":\"www.aha14.com\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '演示账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 15:47:34', NULL);
INSERT INTO `t_operation_log` VALUES (1701, '评论模块', '新增', '/comments/save', 'com.aurora.controller.CommentController.saveComment', '添加评论', '[{\"commentContent\":\"测试评论\",\"topicId\":135,\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 16:36:16', NULL);
INSERT INTO `t_operation_log` VALUES (1702, '评论模块', '新增', '/comments/save', 'com.aurora.controller.CommentController.saveComment', '添加评论', '[{\"commentContent\":\"测试文章评论回复\",\"parentId\":1032,\"replyUserId\":1,\"topicId\":135,\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 16:38:08', NULL);
INSERT INTO `t_operation_log` VALUES (1703, '用户信息模块', '修改', '/admin/users/role', 'com.aurora.controller.UserInfoController.updateUserRole', '修改用户角色', '[{\"nickname\":\"测试账号\",\"roleIds\":[14],\"userInfoId\":2}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 17:59:20', NULL);
INSERT INTO `t_operation_log` VALUES (1704, '用户信息模块', '修改', '/admin/users/role', 'com.aurora.controller.UserInfoController.updateUserRole', '修改用户角色', '[{\"nickname\":\"测试账号\",\"roleIds\":[14,1],\"userInfoId\":2}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 17:59:56', NULL);
INSERT INTO `t_operation_log` VALUES (1705, '用户信息模块', '修改', '/admin/users/role', 'com.aurora.controller.UserInfoController.updateUserRole', '修改用户角色', '[{\"nickname\":\"测试账号\",\"roleIds\":[1],\"userInfoId\":2}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 17:59:59', NULL);
INSERT INTO `t_operation_log` VALUES (1706, '评论模块', '新增', '/comments/save', 'com.aurora.controller.CommentController.saveComment', '添加评论', '[{\"commentContent\":\"测试账号回复\",\"parentId\":1032,\"replyUserId\":1,\"topicId\":135,\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1014, '测试账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 18:00:36', NULL);
INSERT INTO `t_operation_log` VALUES (1707, '评论模块', '新增', '/comments/save', 'com.aurora.controller.CommentController.saveComment', '添加评论', '[{\"commentContent\":\"测试账号回复\",\"parentId\":1032,\"replyUserId\":1,\"topicId\":135,\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1014, '测试账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 18:05:21', NULL);
INSERT INTO `t_operation_log` VALUES (1708, '评论模块', '新增', '/comments/save', 'com.aurora.controller.CommentController.saveComment', '添加评论', '[{\"commentContent\":\"1\",\"parentId\":1032,\"replyUserId\":2,\"topicId\":135,\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 18:39:06', NULL);
INSERT INTO `t_operation_log` VALUES (1709, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"测试文章\",\"articleContent\":\"# 测试文章\\n`test`\\n> 文章功能测试\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/6b8e209c04510c80669c8f3e43794e2d.png\",\"articleTitle\":\"测试文章demo\",\"categoryName\":\"分类测试\",\"id\":135,\"isFeatured\":0,\"isTop\":0,\"status\":1,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 18:48:45', NULL);
INSERT INTO `t_operation_log` VALUES (1710, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"https://static.linhaojun.top/config/da4c6d8c13f66a8dd6716ddb48d73299.jpg\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"gitee\":\"\",\"github\":\"\",\"isCommentReview\":0,\"isEmailNotice\":1,\"isReward\":1,\"juejin\":\"\",\"logo\":\"https://static.linhaojun.top/config/cc36e9fa5aeb214e41495c1e2268f2db.png\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"https://static.linhaojun.top/config/2af2e2db20740e712f0a011a6f8c9af5.jpg\",\"twitter\":\"\",\"userAvatar\":\"https://static.linhaojun.top/config/0af1901da1e64dfb99bb61db21e716c4.jpeg\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"https://static.linhaojun.top/config/ed47edae605f74306f751c6fba9f14bd.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-28 22:48:34', NULL);
INSERT INTO `t_operation_log` VALUES (1711, '评论模块', '新增', '/comments/save', 'com.aurora.controller.CommentController.saveComment', '添加评论', '[{\"commentContent\":\"管理员回复管理员\",\"parentId\":1032,\"replyUserId\":1,\"topicId\":135,\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-29 00:36:54', NULL);
INSERT INTO `t_operation_log` VALUES (1712, '评论模块', '新增', '/comments/save', 'com.aurora.controller.CommentController.saveComment', '添加评论', '[{\"commentContent\":\"测试账号回复测试账号\",\"parentId\":1032,\"replyUserId\":2,\"topicId\":135,\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1014, '测试账号', '127.0.0.1', '内网IP|内网IP', '2024-03-29 00:38:12', NULL);
INSERT INTO `t_operation_log` VALUES (1713, '评论模块', '新增', '/comments/save', 'com.aurora.controller.CommentController.saveComment', '添加评论', '[{\"commentContent\":\"留言测试\",\"type\":2}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1014, '测试账号', '127.0.0.1', '内网IP|内网IP', '2024-03-29 00:55:13', NULL);
INSERT INTO `t_operation_log` VALUES (1714, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"https://static.linhaojun.top/config/da4c6d8c13f66a8dd6716ddb48d73299.jpg\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"gitee\":\"\",\"github\":\"\",\"isCommentReview\":0,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"https://static.linhaojun.top/config/cc36e9fa5aeb214e41495c1e2268f2db.png\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"https://static.linhaojun.top/config/2af2e2db20740e712f0a011a6f8c9af5.jpg\",\"twitter\":\"\",\"userAvatar\":\"https://static.linhaojun.top/config/0af1901da1e64dfb99bb61db21e716c4.jpeg\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"https://static.linhaojun.top/config/ed47edae605f74306f751c6fba9f14bd.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-29 09:35:28', NULL);
INSERT INTO `t_operation_log` VALUES (1715, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"测试文章\",\"articleContent\":\"# 测试文章\\n`test`\\n> 文章功能测试\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/6b8e209c04510c80669c8f3e43794e2d.png\",\"articleTitle\":\"测试文章demo\",\"categoryName\":\"分类测试\",\"id\":135,\"isFeatured\":0,\"isTop\":0,\"status\":1,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-29 17:02:37', NULL);
INSERT INTO `t_operation_log` VALUES (1716, '相册模块', '上传', '/admin/photos/albums/upload', 'com.aurora.controller.PhotoAlbumController.savePhotoAlbumCover', '上传相册封面', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/photos/cdf5b38c8c8f8d9fbc5b51b14ff71549.png\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-29 18:38:39', NULL);
INSERT INTO `t_operation_log` VALUES (1717, '相册模块', '新增或修改', '/admin/photos/albums', 'com.aurora.controller.PhotoAlbumController.saveOrUpdatePhotoAlbum', '保存或更新相册', '[{\"albumCover\":\"http://localhost:9000/blog/aurora/photos/cdf5b38c8c8f8d9fbc5b51b14ff71549.png\",\"albumDesc\":\"博主推荐的壁纸\",\"albumName\":\"壁纸\",\"status\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-29 18:38:42', NULL);
INSERT INTO `t_operation_log` VALUES (1718, '照片模块', '上传', '/admin/photos/upload', 'com.aurora.controller.PhotoController.savePhotoAlbumCover', '上传照片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/photos/264d1b5197f5bd940867acbb7c22a6c6.jpg\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-30 17:50:49', NULL);
INSERT INTO `t_operation_log` VALUES (1719, '照片模块', '上传', '/admin/photos/upload', 'com.aurora.controller.PhotoController.savePhotoAlbumCover', '上传照片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/photos/79bd15d738a6d694e6c5b46dede799c0.jpg\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-30 17:50:50', NULL);
INSERT INTO `t_operation_log` VALUES (1720, '照片模块', '上传', '/admin/photos/upload', 'com.aurora.controller.PhotoController.savePhotoAlbumCover', '上传照片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/photos/ec5d47dea25c44a1511d31487a524cef.jpg\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-30 17:50:55', NULL);
INSERT INTO `t_operation_log` VALUES (1721, '照片模块', '新增', '/admin/photos', 'com.aurora.controller.PhotoController.savePhotos', '保存照片', '[{\"albumId\":10,\"photoUrls\":[\"http://localhost:9000/blog/aurora/photos/264d1b5197f5bd940867acbb7c22a6c6.jpg\",\"http://localhost:9000/blog/aurora/photos/79bd15d738a6d694e6c5b46dede799c0.jpg\",\"http://localhost:9000/blog/aurora/photos/ec5d47dea25c44a1511d31487a524cef.jpg\"]}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-30 17:50:56', NULL);
INSERT INTO `t_operation_log` VALUES (1722, '照片模块', '修改', '/admin/photos/delete', 'com.aurora.controller.PhotoController.updatePhotoDelete', '更新照片删除状态', '[{\"ids\":[68],\"isDelete\":1}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-30 17:51:31', NULL);
INSERT INTO `t_operation_log` VALUES (1723, '照片模块', '删除', '/admin/photos', 'com.aurora.controller.PhotoController.deletePhotos', '删除照片', '[[68]]', 'DELETE', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-30 17:53:11', NULL);
INSERT INTO `t_operation_log` VALUES (1724, '照片模块', '修改', '/admin/photos/delete', 'com.aurora.controller.PhotoController.updatePhotoDelete', '更新照片删除状态', '[{\"ids\":[70,69],\"isDelete\":1}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-30 17:58:12', NULL);
INSERT INTO `t_operation_log` VALUES (1725, '照片模块', '修改', '/admin/photos/delete', 'com.aurora.controller.PhotoController.updatePhotoDelete', '更新照片删除状态', '[{\"ids\":[70,69],\"isDelete\":0}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-30 18:01:41', NULL);
INSERT INTO `t_operation_log` VALUES (1726, '照片模块', '修改', '/admin/photos/delete', 'com.aurora.controller.PhotoController.updatePhotoDelete', '更新照片删除状态', '[{\"ids\":[69,70],\"isDelete\":1}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-30 18:08:39', NULL);
INSERT INTO `t_operation_log` VALUES (1727, '照片模块', '修改', '/admin/photos/delete', 'com.aurora.controller.PhotoController.updatePhotoDelete', '更新照片删除状态', '[{\"ids\":[69,70],\"isDelete\":0}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-30 18:08:56', NULL);
INSERT INTO `t_operation_log` VALUES (1728, '角色模块', '新增或修改', '/admin/role', 'com.aurora.controller.RoleController.saveOrUpdateRole', '保存或更新角色', '[{\"id\":2,\"resourceIds\":[1167],\"roleName\":\"user\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-30 22:49:04', NULL);
INSERT INTO `t_operation_log` VALUES (1729, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"测试文章\",\"articleContent\":\"# 测试文章\\n`test`\\n> 文章功能测试\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/6b8e209c04510c80669c8f3e43794e2d.png\",\"articleTitle\":\"测试文章demo\",\"categoryName\":\"分类测试\",\"id\":135,\"isFeatured\":0,\"isTop\":0,\"status\":1,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 15:52:25', NULL);
INSERT INTO `t_operation_log` VALUES (1730, '说说模块', '上传', '/admin/talks/images', 'com.aurora.controller.TalkController.saveTalkImages', '上传说说图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/talks/a4b94dc9c70298cd04465ca4dfa48d02.jpg\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 16:47:43', NULL);
INSERT INTO `t_operation_log` VALUES (1731, '说说模块', '上传', '/admin/talks/images', 'com.aurora.controller.TalkController.saveTalkImages', '上传说说图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/talks/6abb80098bbd4f315f80903fa3302123.jpg\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 16:47:43', NULL);
INSERT INTO `t_operation_log` VALUES (1732, '说说模块', '新增或修改', '/admin/talks', 'com.aurora.controller.TalkController.saveOrUpdateTalk', '保存或修改说说', '[{\"content\":\"说说测试\",\"id\":68,\"images\":\"[\\\"http://localhost:9000/blog/aurora/talks/a4b94dc9c70298cd04465ca4dfa48d02.jpg\\\",\\\"http://localhost:9000/blog/aurora/talks/6abb80098bbd4f315f80903fa3302123.jpg\\\"]\",\"isTop\":0,\"status\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 16:47:46', NULL);
INSERT INTO `t_operation_log` VALUES (1733, '评论模块', '新增', '/comments/save', 'com.aurora.controller.CommentController.saveComment', '添加评论', '[{\"commentContent\":\"说说评论测试\",\"topicId\":68,\"type\":5}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1014, '测试账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 16:51:41', NULL);
INSERT INTO `t_operation_log` VALUES (1734, '用户信息模块', '修改', '/users/info', 'com.aurora.controller.UserInfoController.updateUserInfo', '更新用户信息', '[{\"intro\":\"大学牲\",\"nickname\":\"啊哈14\",\"website\":\"www.aha14.com\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 18:25:43', NULL);
INSERT INTO `t_operation_log` VALUES (1735, 'aurora信息', '上传', '/admin/config/images', 'com.aurora.controller.AuroraInfoController.savePhotoAlbumCover', '上传博客配置图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 18:56:44', NULL);
INSERT INTO `t_operation_log` VALUES (1736, 'aurora信息', '上传', '/admin/config/images', 'com.aurora.controller.AuroraInfoController.savePhotoAlbumCover', '上传博客配置图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 18:56:49', NULL);
INSERT INTO `t_operation_log` VALUES (1737, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"https://static.linhaojun.top/config/da4c6d8c13f66a8dd6716ddb48d73299.jpg\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"gitee\":\"\",\"github\":\"\",\"isCommentReview\":0,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"https://static.linhaojun.top/config/cc36e9fa5aeb214e41495c1e2268f2db.png\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"https://static.linhaojun.top/config/ed47edae605f74306f751c6fba9f14bd.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 18:56:51', NULL);
INSERT INTO `t_operation_log` VALUES (1738, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"https://static.linhaojun.top/config/da4c6d8c13f66a8dd6716ddb48d73299.jpg\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"gitee\":\"\",\"github\":\"\",\"isCommentReview\":0,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"https://static.linhaojun.top/config/cc36e9fa5aeb214e41495c1e2268f2db.png\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"https://static.linhaojun.top/config/ed47edae605f74306f751c6fba9f14bd.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 18:57:55', NULL);
INSERT INTO `t_operation_log` VALUES (1739, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"测试文章\",\"articleContent\":\"# 测试文章\\n`test`\\n> 文章功能测试\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/6b8e209c04510c80669c8f3e43794e2d.png\",\"articleTitle\":\"测试文章demo\",\"categoryName\":\"分类测试\",\"id\":135,\"isFeatured\":0,\"isTop\":0,\"status\":1,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 21:05:24', NULL);
INSERT INTO `t_operation_log` VALUES (1740, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"测试文章\",\"articleContent\":\"# 测试文章\\n`test`\\n> 文章功能测试\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/6b8e209c04510c80669c8f3e43794e2d.png\",\"articleTitle\":\"测试文章demo\",\"categoryName\":\"分类测试\",\"id\":135,\"isFeatured\":0,\"isTop\":0,\"password\":\"123\",\"status\":2,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 21:05:47', NULL);
INSERT INTO `t_operation_log` VALUES (1741, 'aurora信息', '上传', '/admin/config/images', 'com.aurora.controller.AuroraInfoController.savePhotoAlbumCover', '上传博客配置图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 21:36:10', NULL);
INSERT INTO `t_operation_log` VALUES (1742, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"https://static.linhaojun.top/config/da4c6d8c13f66a8dd6716ddb48d73299.jpg\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"gitee\":\"\",\"github\":\"\",\"isCommentReview\":0,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"https://static.linhaojun.top/config/ed47edae605f74306f751c6fba9f14bd.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 21:36:13', NULL);
INSERT INTO `t_operation_log` VALUES (1743, 'aurora信息', '上传', '/admin/config/images', 'com.aurora.controller.AuroraInfoController.savePhotoAlbumCover', '上传博客配置图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 21:36:56', NULL);
INSERT INTO `t_operation_log` VALUES (1744, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"https://static.linhaojun.top/config/da4c6d8c13f66a8dd6716ddb48d73299.jpg\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"favicon\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"gitee\":\"\",\"github\":\"\",\"isCommentReview\":0,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"https://static.linhaojun.top/config/ed47edae605f74306f751c6fba9f14bd.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 21:37:01', NULL);
INSERT INTO `t_operation_log` VALUES (1745, '文章模块', '上传', '/admin/articles/import', 'com.aurora.controller.ArticleController.importArticles', '导入文章', 'file', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 21:41:31', NULL);
INSERT INTO `t_operation_log` VALUES (1746, '文章模块', '上传', '/admin/articles/images', 'com.aurora.controller.ArticleController.saveArticleImages', '上传文章图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/articles/64e53e8813f025ee29f22135d2a520f3.jpg\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 21:43:18', NULL);
INSERT INTO `t_operation_log` VALUES (1747, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"以该blog为讲解主题\",\"articleContent\":\"[toc]\\r\\n\\r\\n# SpringSecurity 流程详解\\r\\n\\r\\n## 图片\\r\\n\\r\\n> ![](assets/1507b790a21944a98df11a27577740d9.png)\\r\\n\\r\\n## 流程\\r\\n\\r\\n> 在每一次的请求中都会对呆着token的信息进行JWT验证，同时上下文中的认证信息只在一次请求周期内完成，下一次新的请求会进行新的认证。\\r\\n\\r\\n## aurora项目`SpringSecurity`流程\\r\\n\\r\\n### 参考\\r\\n\\r\\n> [认证1流程](https://zhuanlan.zhihu.com/p/365513384)\\r\\n>\\r\\n> [SpringSecurity 登录流程](https://www.cnblogs.com/zongmin/p/13783174.html#_label1_0)\\r\\n>\\r\\n> [Spring Security详细讲解(JWT+SpringSecurity登入案例) 比较详细的一个流程](https://developer.aliyun.com/article/996569#slide-0)\\r\\n>\\r\\n> https://juejin.cn/column/6960549063062683684\\r\\n\\r\\n### 前端设置token\\r\\n\\r\\n> 代码：\\r\\n>\\r\\n> ```vue\\r\\n> axios.interceptors.request.use((config) => {\\r\\n>   config.headers[\'Authorization\'] = \'Bearer \' + sessionStorage.getItem(\'token\')\\r\\n>   return config\\r\\n> })\\r\\n> ```\\r\\n>\\r\\n> 该函数是一个axios请求拦截器，用于在每次发送请求前统一设置请求头中的Authorization字段。它从sessionStorage中获取token，然后将其与\'Bearer \'拼接，作为Authorization字段的值。这样可以确保每个请求都携带了认证信息。\\r\\n\\r\\n### 第一次认证的处理\\r\\n\\r\\n> - 第一次都是登录，本地中并没有存在认证信息和token信息\\r\\n>\\r\\n> \\t1. 前端发送登录请求，携带用户名和密码\\r\\n>\\r\\n> \\t2. 因为`Security`配置开启了`formlogin()`，所以对于登录的请求，`UsernamePasswordAuthenticationFilter`会接收用户名和密码，进行封装为一个==待认证==的`Authentication`。\\r\\n>\\r\\n> \\t  ```java\\r\\n> \\t  //UsernamePasswordAuthenticationFilter 类进行处理的语句\\r\\n> \\t  UsernamePasswordAuthenticationToken authRequest = new UsernamePasswordAuthenticationToken(username, password);\\r\\n> \\t  //封装之后就是对这个信息进行认证了\\r\\n> \\t  this.getAuthenticationManager().authenticate(authRequest);//通过这个方法进行认证\\r\\n> \\t  ```\\r\\n>\\r\\n> \\t3. 通过调用`AuthenticationManager的authenticate()方法`进行上边`Authentication`的认证，认证成功，则会返回一个封装了当前用户权限等信息的 `Authentication` 对象进行返回。\\r\\n> \\t    但是因为`AuthenticationManager`是一个接口，`AuthenticationManager` 的默认实现是 `ProviderManager`，进而调用他的`authenticate()`方法进行认证处理。\\r\\n> \\t    但是它不直接自己处理认证请求，而是委托给其所配置的 `AuthenticationProvider` 列表，然后会依次使用每一个 `AuthenticationProvider` 进行认证，如果有一个 `AuthenticationProvider` 认证后的结果不为 `null`，则表示该 `AuthenticationProvider` 已经认证成功，之后的 `AuthenticationProvider` 将不再继续认证。然后直接以该 `AuthenticationProvider` 的认证结果作为 `ProviderManager` 的认证结果。如果所有的 `AuthenticationProvider` 的认证结果都为 `null`，则表示认证失败，将抛出一个 `ProviderNotFoundException`。\\r\\n>\\r\\n> \\t  ```java\\r\\n> \\t  protected final UserDetails retrieveUser(String username, UsernamePasswordAuthenticationToken authentication)\\r\\n> \\t  //AuthenticationProvider 列表中一个实现类DaoAuthenticationProvider类中的一个认证执行方法 ,一般使用的就是这个进行认证。\\r\\n> \\t  //`AbstractUserDetailsAuthenticationProvider `是DaoAuthenticationProvider的上层抽象类，也就是ProviderManager--AuthenticationProvider：AbstractUserDetailsAuthenticationProvider（抽象类）---DaoAuthenticationProvider（抽象的实现类）\\r\\n> \\t  ```\\r\\n>\\r\\n> \\r\\n>\\r\\n> 4. 而在委托的`ProviderManager`类中进行认证时【调用`authenticate()`或者`retrieveUser()`方法】，会使用`UserDetailsService`接口.\\r\\n>     通过 `UserDetailsService` 的 `loadUserByUsername()` 方法获取用户名对应的信息并封装到 `UserDetails` \\r\\n>     ==本项目自定实现了`UserDetailsService`和`UserDetails`两个接口`UserDetailServiceImpl`和`UserDetailsDTO`，前者自定义了从数据库中取出`username`相关的数据==\\r\\n>\\r\\n>\\r\\n> ```java\\r\\n> UserDetails loadUserByUsername(String username)//通过用户名进行数据库的信息查找元素\\r\\n> ```\\r\\n>\\r\\n> 5. `UserDetails` 赋给上层的`Provider`的实现类，之后调用`additionalAuthenticationChecks`方法对用户的密码进行最后的检查.方法是在`DaoAuthenticationProvider`父类 `AbstractUserDetailsAuthenticationProvider `的 `authenticate `方法中被调用的调用上下文中设置的`PasswordEncoder`，最终密码校验的细节完全在`BCrypt`实体类中进行\\r\\n> \\t补充：数据库保存的密码编码和这里的应设置一样，不一样要进行多次的编码解码，而数据库的设置，应该是在注册哪里进行保存的时候进行编码。\\r\\n>\\r\\n> \\t```java\\r\\n> \\t//additionalAuthenticationChecks 方法内部执行验证的逻辑\\r\\n> \\tthis.passwordEncoder.matches(presentedPassword, userDetails.getPassword())\\r\\n> \\t```\\r\\n>\\r\\n> \\t==密码校验通过==之后就会返回一个认证通过的 `Authentication` 的 `principal`，然后会把该 `Authentication` 存入到 `SecurityContext` 中。\\r\\n>\\r\\n> 6. 现在认证处理已经完成，根据认证结果不同转向不同的处理器\\r\\n>\\r\\n> \\t1. 认证成功，转向`AuthenticationSuccessHandler`\\r\\n> \\t\\t1. 根据`SecurityContext` 中`authentication`信息，生成`JWT-token`。【具体实现细节在`TokenServiceImpl`中，他会生成，并把`authentication`对应的`UserDetails` 存入`redis`中】\\r\\n> \\t\\t2. 将登录成功后的用户信息（包含token）返回给客户端（前端），==这里就保证后边请求会携带`token`了==\\r\\n>\\r\\n> \\t1. 认证失败，转向`AuthenticationFailureHandler`,\\r\\n> \\t\\t1. `aurora`项目这里就是向前端返回一个JSON字符串，包含了认证错误的原因。\\r\\n\\r\\n### 已经经过登录的请求-不是登录请求\\r\\n\\r\\n> 1. 前端发送请求【因为已经登录验证过了，这里请求中都会携带`token`】\\r\\n>\\r\\n> 2. 这里转向`JwtAuthenticationTokenFilter`进行验证，通过`doFilterInternal()`方法在这一次的上下文中设置`authentication`。\\r\\n>     ==因为一个认证信息的周期就是一次请求的周期==\\r\\n>\\r\\n> 3.1. 如果可以通过解析`token`获取到对应的`UserDetails` ，说明这个用户是获得认证的用户，之后将其的`authentication`放到 `SecurityContext` 中。\\r\\n> 3.2. 不能获取到，就会像登录那样直接转到`UsernamePasswordAuthenticationFilter`这个过滤器进行在一次的处理。【一般就是认证过期，再次登录】\\r\\n>\\r\\n> 4. 上下文存在`authentication`,这次请求的认证结束。剩余的过滤器等认证都会通过。\\r\\n> 5. 执行具体的业务层逻辑。\\r\\n\\r\\n### 权限认证\\r\\n\\r\\n> [通过自定义决策管理器实现动态权限管理](https://blog.csdn.net/m0_59448100/article/details/127093942)\\r\\n>\\r\\n> [动态权限控制（上）思路](https://juejin.cn/post/6844904006209241096?searchId=2024031918550725963048FD0787BE7A2F#heading-0)\\r\\n>\\r\\n> [动态权限控制（下）实习](https://juejin.cn/post/6844904007534641159)\\r\\n\\r\\n> 1. 用户认证之后，就要对请求`url`进行权限判定，判定当前认证的用户是否对于这个请求的资源有权限。\\r\\n>\\r\\n> 2. 而过滤器中的`FilterSecurityInterceptor`负责对 `http` 接口进行权限认证。【是Security的内置filter】\\r\\n>\\r\\n> \\t```java\\r\\n> \\t //`FilterSecurityInterceptor`\\t内执行的方法\\r\\n> \\tpublic void doFilter(ServletRequest request, ServletResponse response,\\r\\n> \\t \\t\\t\\tFilterChain chain) throws IOException, ServletException {\\r\\n> \\t \\t\\tFilterInvocation fi = new FilterInvocation(request, response, chain);\\r\\n> \\t \\t\\tinvoke(fi);\\r\\n> \\t \\t}\\r\\n> \\t//初始化了一个 FilterInvocation ：封装 Servlet 环境中的 HTTP 请求、响应以及过滤器链 然后被 invoke 方法处理\\r\\n> \\t//实际上是将当前请求的上下文信息封装起来，并交给 Spring Security 的安全过滤器链进行处理。在过滤器链的执行过程中，各个安全过滤器可以通过 FilterInvocation 对象来获取当前请求的信息，并进行相应的安全控制操作。\\r\\n> \\t```\\r\\n>\\r\\n> \\t`invoke`方法内部一般使用父类的 `beforeInvocation` 方法进一步进行鉴权处理，然后再进入过滤器链。\\r\\n>\\r\\n> 3. `beforeInvocation`方法详解\\r\\n> \\t通过 `this.obtainSecurityMetadataSource().getAttributes(Object object)`拿受保护对象（就是当前请求的 URI）所有的映射角色（`ConfigAttribute` 直接理解为角色的进一步抽象） ==也就是调用下边的元数据加载器的方法，得到方法生成的权限信息==。\\r\\n>\\r\\n> \\t```java\\r\\n> \\tAuthentication authenticated = this.authenticateIfRequired();\\r\\n> \\t//这一步拿到当前上下文的认证信息\\r\\n> \\t this.accessDecisionManager.decide(authenticated, object, attributes);\\r\\n> \\t```\\r\\n>\\r\\n> \\t然后使用访问自定义实现的决策管理器`AccessDecisionManager` 进行投票决策来确定是否放行。\\r\\n>\\r\\n> 4. `FilterInvocationSecurityMetadataSource`元数据加载器 \\r\\n> \\t加载符合这个`url`路径的权限列表（角色列表）\\r\\n>\\r\\n> 5. `AccessDecisionManager访问决策管理器`会将上边加载的角色列表和当前认证的角色信息对比，符合就放行，完成鉴权的认定。否则就抛出异常信息。\\r\\n> \\t【因为是自定义的，没有使用投票器，也就不需要投票判定，直接上述的角色对比，符合就放行】\\r\\n>\\r\\n> 6. 鉴权结束\\r\\n\\r\\n### 异常处理\\r\\n\\r\\n> 说明：\\r\\n>\\r\\n> 我们还希望在认证失败或者是授权失败的情况下也能和我们的接口一样返回相同结构的json，这样可以让前端能对响应进行统一的处理。要实现这个功能我们需要知道SpringSecurity的异常处理机制。在SpringSecurity中，如果我们==在认证或者授权的过程==中出现了异常会被`ExceptionTranslationFilter`捕获到。在ExceptionTranslationFilter中会去判断是认证失败还是授权失败出现的异常。\\r\\n\\r\\n> 如果是==认证==过程中出现的异常会被封装成`AuthenticationException`然后调用 `AuthenticationEntryPoint` 对象的方法去进行异常处理。\\r\\n> 如果是==授权==过程中出现的异常会被封装成`AccessDeniedException`然后调用 `AccessDeniedHandler` 对象的方法去进行异常处理。\\r\\n\\r\\n> 所以如果我们需要自定义异常处理，我们只需要自定义`AuthenticationEntryPoint`和`AccessDeniedHandler`然后配置给`SpringSecurity`即可，\\r\\n>\\r\\n> 本项目认证实现类：`AuthenticationEntryPointImpl` 向前端发送JSON：用户未登录\\r\\n>\\r\\n> 本项目授权实现类：`AccessDeniedHandlerImpl`向前端发送JSON：用户权限不足\\r\\n\\r\\n## 知识点\\r\\n\\r\\n### `UserDetailsService`接口\\r\\n\\r\\n> 1. 接口只提供了一个方法：\\r\\n>\\r\\n> \\t```java\\r\\n> \\tUserDetails loadUserByUsername(String username) throws UsernameNotFoundException;\\r\\n> \\t```\\r\\n>\\r\\n> \\t该方法很容易理解：==通过用户名来加载用户==。这个方法主要用于从系统数据中查询并加载具体的用户到Spring Security中。\\r\\n>\\r\\n> 2. UserDetailsService 可以知道最终交给Spring Security的是`UserDetails` 。\\r\\n>\\r\\n> 3. 通过继承``UserDetailsService`接口，可以自定义从数据库读取信息的逻辑。\\r\\n\\r\\n### `UserDetails`接口\\r\\n\\r\\n> 1. 该接口是提供用户信息的核心接口。该接口实现仅仅存储用户的信息。\\r\\n>     后续会将该接口提供的用户信息封装到认证对象Authentication中去。\\r\\n> 2. 我们可以自定义一些属性传递给`Authentication`,通过实现`UserDetails`接口。完成数据的自定义封装\\r\\n> 3. ```java\\r\\n> \\t\\t@Override\\r\\n> \\t    @Transient\\r\\n> \\t    public Collection<? extends GrantedAuthority> getAuthorities() {\\r\\n> \\t        return roles.stream()\\r\\n> \\t                .map(SimpleGrantedAuthority::new)\\r\\n> \\t                .collect(Collectors.toSet());\\r\\n> \\t    }\\r\\n> \\t```\\r\\n>\\r\\n> \\t这个重写的方法同样可以用于`authentication.getAuthorities()`,本质就是使用这个获取`UserDetails`中`roles`信息（角色信息）。\\r\\n\\r\\n### `UserDetailsManager`\\r\\n\\r\\n> `UserDetailsManager` 类型负责对安全用户实体抽象`UserDetails`的增删查改操作。同时还继承了`UserDetailsService`接口。\\r\\n\\r\\n### `PasswordEncoder`\\r\\n\\r\\n> https://felord.blog.csdn.net/article/details/102504387\\r\\n\\r\\n### `WebSecurityConfigurerAdapter`配置类\\r\\n\\r\\n> https://felord.blog.csdn.net/article/details/102583995\\r\\n\\r\\n### 自定义登录相关流程解析\\r\\n\\r\\n> https://felord.blog.csdn.net/article/details/102617422\\r\\n\\r\\n### 过滤器链\\r\\n\\r\\n> https://mp.weixin.qq.com/s?__biz=MzUzMzQ2MDIyMA%3D%3D&chksm=faa2e6f2cdd56fe441d637ef6c339518af064bded807d6c12a0ac3ef9ed9424eb9785eae469f&idx=1&mid=2247484257&scene=21&sn=7034ccb9c2b6ac6d61364a2a87111a50#wechat_redirect\\r\\n\\r\\n#### `SecurityContextPersistenceFilter`\\r\\n\\r\\n> `SecurityContextPersistenceFilter` 主要控制 `SecurityContext` 的在一次请求中的生命周期 。请求来临时，创建`SecurityContext` 安全上下文信息，请求结束时清空 `SecurityContextHolder`。\\r\\n>\\r\\n> `SecurityContextPersistenceFilter` 通过 `HttpScurity#securityContext()` 及相关方法引入其配置对象 `SecurityContextConfigurer` 来进行配置。\\r\\n\\r\\n### RBAC权限模型\\r\\n\\r\\n> RBAC权限模型：**`基于角色的访问控制（RBAC）是实施面向企业安全策略的一种有效的访问控制方式。`** 其基本思想是，对系统操作的各种权限不是直接授予具体的用户，而是在用户集合与权限集合之间建立一个角色集合。每一种角色对应一组相应的权限。一旦用户被分配了适当的角色后，该用户就拥有此角色的所有操作权限。这样做的好处是，不必在每次创建用户时都进行分配权限的操作，只要分配用户相应的角色即可，而且角色的权限变更比用户的权限变更要少得多，这样将简化用户的权限管理，减少系统的开销。\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/64e53e8813f025ee29f22135d2a520f3.jpg\",\"articleTitle\":\"SpringSecurity详解\",\"categoryName\":\"java\",\"id\":136,\"isFeatured\":0,\"isTop\":0,\"status\":1,\"tagNames\":[\"SpringSecurity\"],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 21:44:02', NULL);
INSERT INTO `t_operation_log` VALUES (1748, '文章模块', '修改', '/admin/articles/topAndFeatured', 'com.aurora.controller.ArticleController.updateArticleTopAndFeatured', '修改文章是否置顶和推荐', '[{\"id\":136,\"isFeatured\":0,\"isTop\":1}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 21:44:14', NULL);
INSERT INTO `t_operation_log` VALUES (1749, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"以该blog为讲解主题\",\"articleContent\":\"# SpringSecurity 流程详解\\n\\n## 流程\\n\\n> 在每一次的请求中都会对呆着token的信息进行JWT验证，同时上下文中的认证信息只在一次请求周期内完成，下一次新的请求会进行新的认证。\\n\\n## aurora项目`SpringSecurity`流程\\n\\n### 参考\\n\\n> [认证1流程](https://zhuanlan.zhihu.com/p/365513384)\\n>\\n> [SpringSecurity 登录流程](https://www.cnblogs.com/zongmin/p/13783174.html#_label1_0)\\n>\\n> [Spring Security详细讲解(JWT+SpringSecurity登入案例) 比较详细的一个流程](https://developer.aliyun.com/article/996569#slide-0)\\n>\\n> https://juejin.cn/column/6960549063062683684\\n\\n### 前端设置token\\n\\n> 代码：\\n>\\n> ```vue\\n> axios.interceptors.request.use((config) => {\\n>   config.headers[\'Authorization\'] = \'Bearer \' + sessionStorage.getItem(\'token\')\\n>   return config\\n> })\\n> ```\\n>\\n> 该函数是一个axios请求拦截器，用于在每次发送请求前统一设置请求头中的Authorization字段。它从sessionStorage中获取token，然后将其与\'Bearer \'拼接，作为Authorization字段的值。这样可以确保每个请求都携带了认证信息。\\n\\n### 第一次认证的处理\\n\\n> - 第一次都是登录，本地中并没有存在认证信息和token信息\\n>\\n> \\t1. 前端发送登录请求，携带用户名和密码\\n>\\n> \\t2. 因为`Security`配置开启了`formlogin()`，所以对于登录的请求，`UsernamePasswordAuthenticationFilter`会接收用户名和密码，进行封装为一个==待认证==的`Authentication`。\\n>\\n> \\t  ```java\\n> \\t  //UsernamePasswordAuthenticationFilter 类进行处理的语句\\n> \\t  UsernamePasswordAuthenticationToken authRequest = new UsernamePasswordAuthenticationToken(username, password);\\n> \\t  //封装之后就是对这个信息进行认证了\\n> \\t  this.getAuthenticationManager().authenticate(authRequest);//通过这个方法进行认证\\n> \\t  ```\\n>\\n> \\t3. 通过调用`AuthenticationManager的authenticate()方法`进行上边`Authentication`的认证，认证成功，则会返回一个封装了当前用户权限等信息的 `Authentication` 对象进行返回。\\n> \\t    但是因为`AuthenticationManager`是一个接口，`AuthenticationManager` 的默认实现是 `ProviderManager`，进而调用他的`authenticate()`方法进行认证处理。\\n> \\t    但是它不直接自己处理认证请求，而是委托给其所配置的 `AuthenticationProvider` 列表，然后会依次使用每一个 `AuthenticationProvider` 进行认证，如果有一个 `AuthenticationProvider` 认证后的结果不为 `null`，则表示该 `AuthenticationProvider` 已经认证成功，之后的 `AuthenticationProvider` 将不再继续认证。然后直接以该 `AuthenticationProvider` 的认证结果作为 `ProviderManager` 的认证结果。如果所有的 `AuthenticationProvider` 的认证结果都为 `null`，则表示认证失败，将抛出一个 `ProviderNotFoundException`。\\n>\\n> \\t  ```java\\n> \\t  protected final UserDetails retrieveUser(String username, UsernamePasswordAuthenticationToken authentication)\\n> \\t  //AuthenticationProvider 列表中一个实现类DaoAuthenticationProvider类中的一个认证执行方法 ,一般使用的就是这个进行认证。\\n> \\t  //`AbstractUserDetailsAuthenticationProvider `是DaoAuthenticationProvider的上层抽象类，也就是ProviderManager--AuthenticationProvider：AbstractUserDetailsAuthenticationProvider（抽象类）---DaoAuthenticationProvider（抽象的实现类）\\n> \\t  ```\\n>\\n> \\n>\\n> 4. 而在委托的`ProviderManager`类中进行认证时【调用`authenticate()`或者`retrieveUser()`方法】，会使用`UserDetailsService`接口.\\n>     通过 `UserDetailsService` 的 `loadUserByUsername()` 方法获取用户名对应的信息并封装到 `UserDetails` \\n>     ==本项目自定实现了`UserDetailsService`和`UserDetails`两个接口`UserDetailServiceImpl`和`UserDetailsDTO`，前者自定义了从数据库中取出`username`相关的数据==\\n>\\n>\\n> ```java\\n> UserDetails loadUserByUsername(String username)//通过用户名进行数据库的信息查找元素\\n> ```\\n>\\n> 5. `UserDetails` 赋给上层的`Provider`的实现类，之后调用`additionalAuthenticationChecks`方法对用户的密码进行最后的检查.方法是在`DaoAuthenticationProvider`父类 `AbstractUserDetailsAuthenticationProvider `的 `authenticate `方法中被调用的调用上下文中设置的`PasswordEncoder`，最终密码校验的细节完全在`BCrypt`实体类中进行\\n> \\t补充：数据库保存的密码编码和这里的应设置一样，不一样要进行多次的编码解码，而数据库的设置，应该是在注册哪里进行保存的时候进行编码。\\n>\\n> \\t```java\\n> \\t//additionalAuthenticationChecks 方法内部执行验证的逻辑\\n> \\tthis.passwordEncoder.matches(presentedPassword, userDetails.getPassword())\\n> \\t```\\n>\\n> \\t==密码校验通过==之后就会返回一个认证通过的 `Authentication` 的 `principal`，然后会把该 `Authentication` 存入到 `SecurityContext` 中。\\n>\\n> 6. 现在认证处理已经完成，根据认证结果不同转向不同的处理器\\n>\\n> \\t1. 认证成功，转向`AuthenticationSuccessHandler`\\n> \\t\\t1. 根据`SecurityContext` 中`authentication`信息，生成`JWT-token`。【具体实现细节在`TokenServiceImpl`中，他会生成，并把`authentication`对应的`UserDetails` 存入`redis`中】\\n> \\t\\t2. 将登录成功后的用户信息（包含token）返回给客户端（前端），==这里就保证后边请求会携带`token`了==\\n>\\n> \\t1. 认证失败，转向`AuthenticationFailureHandler`,\\n> \\t\\t1. `aurora`项目这里就是向前端返回一个JSON字符串，包含了认证错误的原因。\\n\\n### 已经经过登录的请求-不是登录请求\\n\\n> 1. 前端发送请求【因为已经登录验证过了，这里请求中都会携带`token`】\\n>\\n> 2. 这里转向`JwtAuthenticationTokenFilter`进行验证，通过`doFilterInternal()`方法在这一次的上下文中设置`authentication`。\\n>     ==因为一个认证信息的周期就是一次请求的周期==\\n>\\n> 3.1. 如果可以通过解析`token`获取到对应的`UserDetails` ，说明这个用户是获得认证的用户，之后将其的`authentication`放到 `SecurityContext` 中。\\n> 3.2. 不能获取到，就会像登录那样直接转到`UsernamePasswordAuthenticationFilter`这个过滤器进行在一次的处理。【一般就是认证过期，再次登录】\\n>\\n> 4. 上下文存在`authentication`,这次请求的认证结束。剩余的过滤器等认证都会通过。\\n> 5. 执行具体的业务层逻辑。\\n\\n### 权限认证\\n\\n> [通过自定义决策管理器实现动态权限管理](https://blog.csdn.net/m0_59448100/article/details/127093942)\\n>\\n> [动态权限控制（上）思路](https://juejin.cn/post/6844904006209241096?searchId=2024031918550725963048FD0787BE7A2F#heading-0)\\n>\\n> [动态权限控制（下）实习](https://juejin.cn/post/6844904007534641159)\\n\\n> 1. 用户认证之后，就要对请求`url`进行权限判定，判定当前认证的用户是否对于这个请求的资源有权限。\\n>\\n> 2. 而过滤器中的`FilterSecurityInterceptor`负责对 `http` 接口进行权限认证。【是Security的内置filter】\\n>\\n> \\t```java\\n> \\t //`FilterSecurityInterceptor`\\t内执行的方法\\n> \\tpublic void doFilter(ServletRequest request, ServletResponse response,\\n> \\t \\t\\t\\tFilterChain chain) throws IOException, ServletException {\\n> \\t \\t\\tFilterInvocation fi = new FilterInvocation(request, response, chain);\\n> \\t \\t\\tinvoke(fi);\\n> \\t \\t}\\n> \\t//初始化了一个 FilterInvocation ：封装 Servlet 环境中的 HTTP 请求、响应以及过滤器链 然后被 invoke 方法处理\\n> \\t//实际上是将当前请求的上下文信息封装起来，并交给 Spring Security 的安全过滤器链进行处理。在过滤器链的执行过程中，各个安全过滤器可以通过 FilterInvocation 对象来获取当前请求的信息，并进行相应的安全控制操作。\\n> \\t```\\n>\\n> \\t`invoke`方法内部一般使用父类的 `beforeInvocation` 方法进一步进行鉴权处理，然后再进入过滤器链。\\n>\\n> 3. `beforeInvocation`方法详解\\n> \\t通过 `this.obtainSecurityMetadataSource().getAttributes(Object object)`拿受保护对象（就是当前请求的 URI）所有的映射角色（`ConfigAttribute` 直接理解为角色的进一步抽象） ==也就是调用下边的元数据加载器的方法，得到方法生成的权限信息==。\\n>\\n> \\t```java\\n> \\tAuthentication authenticated = this.authenticateIfRequired();\\n> \\t//这一步拿到当前上下文的认证信息\\n> \\t this.accessDecisionManager.decide(authenticated, object, attributes);\\n> \\t```\\n>\\n> \\t然后使用访问自定义实现的决策管理器`AccessDecisionManager` 进行投票决策来确定是否放行。\\n>\\n> 4. `FilterInvocationSecurityMetadataSource`元数据加载器 \\n> \\t加载符合这个`url`路径的权限列表（角色列表）\\n>\\n> 5. `AccessDecisionManager访问决策管理器`会将上边加载的角色列表和当前认证的角色信息对比，符合就放行，完成鉴权的认定。否则就抛出异常信息。\\n> \\t【因为是自定义的，没有使用投票器，也就不需要投票判定，直接上述的角色对比，符合就放行】\\n>\\n> 6. 鉴权结束\\n\\n### 异常处理\\n\\n> 说明：\\n>\\n> 我们还希望在认证失败或者是授权失败的情况下也能和我们的接口一样返回相同结构的json，这样可以让前端能对响应进行统一的处理。要实现这个功能我们需要知道SpringSecurity的异常处理机制。在SpringSecurity中，如果我们==在认证或者授权的过程==中出现了异常会被`ExceptionTranslationFilter`捕获到。在ExceptionTranslationFilter中会去判断是认证失败还是授权失败出现的异常。\\n\\n> 如果是==认证==过程中出现的异常会被封装成`AuthenticationException`然后调用 `AuthenticationEntryPoint` 对象的方法去进行异常处理。\\n> 如果是==授权==过程中出现的异常会被封装成`AccessDeniedException`然后调用 `AccessDeniedHandler` 对象的方法去进行异常处理。\\n\\n> 所以如果我们需要自定义异常处理，我们只需要自定义`AuthenticationEntryPoint`和`AccessDeniedHandler`然后配置给`SpringSecurity`即可，\\n>\\n> 本项目认证实现类：`AuthenticationEntryPointImpl` 向前端发送JSON：用户未登录\\n>\\n> 本项目授权实现类：`AccessDeniedHandlerImpl`向前端发送JSON：用户权限不足\\n\\n## 知识点\\n\\n### `UserDetailsService`接口\\n\\n> 1. 接口只提供了一个方法：\\n>\\n> \\t```java\\n> \\tUserDetails loadUserByUsername(String username) throws UsernameNotFoundException;\\n> \\t```\\n>\\n> \\t该方法很容易理解：==通过用户名来加载用户==。这个方法主要用于从系统数据中查询并加载具体的用户到Spring Security中。\\n>\\n> 2. UserDetailsService 可以知道最终交给Spring Security的是`UserDetails` 。\\n>\\n> 3. 通过继承``UserDetailsService`接口，可以自定义从数据库读取信息的逻辑。\\n\\n### `UserDetails`接口\\n\\n> 1. 该接口是提供用户信息的核心接口。该接口实现仅仅存储用户的信息。\\n>     后续会将该接口提供的用户信息封装到认证对象Authentication中去。\\n> 2. 我们可以自定义一些属性传递给`Authentication`,通过实现`UserDetails`接口。完成数据的自定义封装\\n> 3. ```java\\n> \\t\\t@Override\\n> \\t    @Transient\\n> \\t    public Collection<? extends GrantedAuthority> getAuthorities() {\\n> \\t        return roles.stream()\\n> \\t                .map(SimpleGrantedAuthority::new)\\n> \\t                .collect(Collectors.toSet());\\n> \\t    }\\n> \\t```\\n>\\n> \\t这个重写的方法同样可以用于`authentication.getAuthorities()`,本质就是使用这个获取`UserDetails`中`roles`信息（角色信息）。\\n\\n### `UserDetailsManager`\\n\\n> `UserDetailsManager` 类型负责对安全用户实体抽象`UserDetails`的增删查改操作。同时还继承了`UserDetailsService`接口。\\n\\n### `PasswordEncoder`\\n\\n> https://felord.blog.csdn.net/article/details/102504387\\n\\n### `WebSecurityConfigurerAdapter`配置类\\n\\n> https://felord.blog.csdn.net/article/details/102583995\\n\\n### 自定义登录相关流程解析\\n\\n> https://felord.blog.csdn.net/article/details/102617422\\n\\n### 过滤器链\\n\\n> https://mp.weixin.qq.com/s?__biz=MzUzMzQ2MDIyMA%3D%3D&chksm=faa2e6f2cdd56fe441d637ef6c339518af064bded807d6c12a0ac3ef9ed9424eb9785eae469f&idx=1&mid=2247484257&scene=21&sn=7034ccb9c2b6ac6d61364a2a87111a50#wechat_redirect\\n\\n#### `SecurityContextPersistenceFilter`\\n\\n> `SecurityContextPersistenceFilter` 主要控制 `SecurityContext` 的在一次请求中的生命周期 。请求来临时，创建`SecurityContext` 安全上下文信息，请求结束时清空 `SecurityContextHolder`。\\n>\\n> `SecurityContextPersistenceFilter` 通过 `HttpScurity#securityContext()` 及相关方法引入其配置对象 `SecurityContextConfigurer` 来进行配置。\\n\\n### RBAC权限模型\\n\\n> RBAC权限模型：**`基于角色的访问控制（RBAC）是实施面向企业安全策略的一种有效的访问控制方式。`** 其基本思想是，对系统操作的各种权限不是直接授予具体的用户，而是在用户集合与权限集合之间建立一个角色集合。每一种角色对应一组相应的权限。一旦用户被分配了适当的角色后，该用户就拥有此角色的所有操作权限。这样做的好处是，不必在每次创建用户时都进行分配权限的操作，只要分配用户相应的角色即可，而且角色的权限变更比用户的权限变更要少得多，这样将简化用户的权限管理，减少系统的开销。\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/64e53e8813f025ee29f22135d2a520f3.jpg\",\"articleTitle\":\"SpringSecurity详解\",\"categoryName\":\"java\",\"id\":136,\"isFeatured\":0,\"isTop\":1,\"status\":1,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 21:45:25', NULL);
INSERT INTO `t_operation_log` VALUES (1750, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"https://static.linhaojun.top/config/da4c6d8c13f66a8dd6716ddb48d73299.jpg\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"favicon\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"gitee\":\"\",\"github\":\"\",\"isCommentReview\":1,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"https://static.linhaojun.top/config/ed47edae605f74306f751c6fba9f14bd.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:15:00', NULL);
INSERT INTO `t_operation_log` VALUES (1751, 'aurora信息', '上传', '/admin/config/images', 'com.aurora.controller.AuroraInfoController.savePhotoAlbumCover', '上传博客配置图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:20:30', NULL);
INSERT INTO `t_operation_log` VALUES (1752, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"gitee\":\"\",\"github\":\"\",\"isCommentReview\":0,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"\",\"twitter\":\"\",\"userAvatar\":\"\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:20:37', NULL);
INSERT INTO `t_operation_log` VALUES (1753, 'aurora信息', '上传', '/admin/config/images', 'com.aurora.controller.AuroraInfoController.savePhotoAlbumCover', '上传博客配置图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:20:49', NULL);
INSERT INTO `t_operation_log` VALUES (1754, 'aurora信息', '上传', '/admin/config/images', 'com.aurora.controller.AuroraInfoController.savePhotoAlbumCover', '上传博客配置图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:20:53', NULL);
INSERT INTO `t_operation_log` VALUES (1755, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"gitee\":\"\",\"github\":\"\",\"isCommentReview\":0,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:20:55', NULL);
INSERT INTO `t_operation_log` VALUES (1756, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"gitee\":\"\",\"github\":\"\",\"isCommentReview\":0,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"3347778009@qq.com\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:21:39', NULL);
INSERT INTO `t_operation_log` VALUES (1757, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"gitee\":\"\",\"github\":\"\",\"isCommentReview\":1,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"3347778009@qq.com\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:22:32', NULL);
INSERT INTO `t_operation_log` VALUES (1758, '评论模块', '新增', '/comments/save', 'com.aurora.controller.CommentController.saveComment', '添加评论', '[{\"commentContent\":\"评论测试demo2\",\"topicId\":135,\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1015, '用户1774377440806739970', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:23:18', NULL);
INSERT INTO `t_operation_log` VALUES (1759, '用户信息模块', '删除', '/admin/users/1024/online', 'com.aurora.controller.UserInfoController.removeOnlineUser', '下线用户', '[1024]', 'DELETE', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '管理员账号', '127.0.0.1', '内网IP|内网IP', '2024-03-31 22:27:36', NULL);
INSERT INTO `t_operation_log` VALUES (1760, 'aurora信息', '上传', '/admin/config/images', 'com.aurora.controller.AuroraInfoController.savePhotoAlbumCover', '上传博客配置图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-01 15:02:58', NULL);
INSERT INTO `t_operation_log` VALUES (1761, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"一个疯狂的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"favicon\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"gitee\":\"\",\"github\":\"\",\"isCommentReview\":1,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"3347778009@qq.com\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-01 15:03:03', NULL);
INSERT INTO `t_operation_log` VALUES (1762, '文章模块', '上传', '/admin/articles/import', 'com.aurora.controller.ArticleController.importArticles', '导入文章', 'file', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-01 15:23:58', NULL);
INSERT INTO `t_operation_log` VALUES (1763, '文章模块', '删除', '/admin/articles/delete', 'com.aurora.controller.ArticleController.deleteArticles', '物理删除文章', '[[137]]', 'DELETE', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-01 15:24:50', NULL);
INSERT INTO `t_operation_log` VALUES (1764, '定时任务模块', '新增', '/admin/jobs', 'com.aurora.controller.JobController.saveJob', '添加定时任务', '[{\"concurrent\":1,\"cronExpression\":\"0 15 0 * * ?\",\"invokeTarget\":\"auroraQuarz.importDataIntoES\",\"jobGroup\":\"默认\",\"jobName\":\"导入文章数据到ES\",\"misfirePolicy\":3,\"remark\":\"dev阶段调试ES搜索设置，此时未使用maxwell，rabbitmq，将文章数据自动更新到ES\",\"status\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-01 17:03:18', NULL);
INSERT INTO `t_operation_log` VALUES (1765, '定时任务模块', '修改', '/admin/jobs', 'com.aurora.controller.JobController.updateJob', '修改定时任务', '[{\"concurrent\":1,\"cronExpression\":\"0 15 0 * * ?\",\"id\":86,\"invokeTarget\":\"auroraQuartz.importDataIntoES\",\"jobGroup\":\"默认\",\"jobName\":\"导入文章数据到ES\",\"misfirePolicy\":3,\"remark\":\"dev阶段调试ES搜索设置，此时未使用maxwell，rabbitmq，将文章数据自动更新到ES\",\"status\":1}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-01 17:05:12', NULL);
INSERT INTO `t_operation_log` VALUES (1766, '定时任务模块', '修改', '/admin/jobs', 'com.aurora.controller.JobController.updateJob', '修改定时任务', '[{\"concurrent\":1,\"cronExpression\":\"0 15 0 * * ?\",\"id\":86,\"invokeTarget\":\"auroraQuartz.importDataIntoES\",\"jobGroup\":\"默认\",\"jobName\":\"导入文章数据到ES\",\"misfirePolicy\":3,\"remark\":\"(能完成功能)dev阶段调试ES搜索设置，此时未使用maxwell，rabbitmq，将文章数据自动更新到ES\",\"status\":0}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-01 17:06:26', NULL);
INSERT INTO `t_operation_log` VALUES (1767, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"测试文章\",\"articleContent\":\"# 测试文章\\n`test`\\n> 文章功能测试\\n1. ~~自动保存功能~~\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/6b8e209c04510c80669c8f3e43794e2d.png\",\"articleTitle\":\"测试文章demo\",\"categoryName\":\"分类测试\",\"id\":135,\"isFeatured\":0,\"isTop\":0,\"password\":\"123\",\"status\":2,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 16:22:55', NULL);
INSERT INTO `t_operation_log` VALUES (1768, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"测试文章\",\"articleContent\":\"# 测试文章\\n`test`\\n> 文章功能测试\\n1. ~~自动保存功能~~\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/6b8e209c04510c80669c8f3e43794e2d.png\",\"articleTitle\":\"测试文章demo\",\"categoryName\":\"分类测试\",\"id\":135,\"isFeatured\":0,\"isTop\":0,\"password\":\"123\",\"status\":2,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 16:23:53', NULL);
INSERT INTO `t_operation_log` VALUES (1769, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"测试文章\",\"articleContent\":\"# 测试文章\\n`test`\\n> 文章功能测试\\n1. ~~自动保存功能~~\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/6b8e209c04510c80669c8f3e43794e2d.png\",\"articleTitle\":\"测试文章demo\",\"categoryName\":\"分类测试\",\"id\":135,\"isFeatured\":0,\"isTop\":0,\"password\":\"123\",\"status\":2,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 16:54:49', NULL);
INSERT INTO `t_operation_log` VALUES (1770, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"以该blog为讲解主题\",\"articleContent\":\"# SpringSecurity 流程详解\\n\\n## 流程\\n\\n> 在每一次的请求中都会对呆着token的信息进行JWT验证，同时上下文中的认证信息只在一次请求周期内完成，下一次新的请求会进行新的认证。\\n\\n## aurora项目`SpringSecurity`流程\\n\\n### 参考\\n\\n> [认证1流程](https://zhuanlan.zhihu.com/p/365513384)\\n>\\n> [SpringSecurity 登录流程](https://www.cnblogs.com/zongmin/p/13783174.html#_label1_0)\\n>\\n> [Spring Security详细讲解(JWT+SpringSecurity登入案例) 比较详细的一个流程](https://developer.aliyun.com/article/996569#slide-0)\\n>\\n> https://juejin.cn/column/6960549063062683684\\n\\n### 前端设置token\\n\\n> 代码：\\n>\\n> ```vue\\n> axios.interceptors.request.use((config) => {\\n>   config.headers[\'Authorization\'] = \'Bearer \' + sessionStorage.getItem(\'token\')\\n>   return config\\n> })\\n> ```\\n>\\n> 该函数是一个axios请求拦截器，用于在每次发送请求前统一设置请求头中的Authorization字段。它从sessionStorage中获取token，然后将其与\'Bearer \'拼接，作为Authorization字段的值。这样可以确保每个请求都携带了认证信息。\\n\\n### 第一次认证的处理\\n\\n> - 第一次都是登录，本地中并没有存在认证信息和token信息\\n>\\n> \\t1. 前端发送登录请求，携带用户名和密码\\n>\\n> \\t2. 因为`Security`配置开启了`formlogin()`，所以对于登录的请求，`UsernamePasswordAuthenticationFilter`会接收用户名和密码，进行封装为一个==待认证==的`Authentication`。\\n>\\n> \\t  ```java\\n> \\t  //UsernamePasswordAuthenticationFilter 类进行处理的语句\\n> \\t  UsernamePasswordAuthenticationToken authRequest = new UsernamePasswordAuthenticationToken(username, password);\\n> \\t  //封装之后就是对这个信息进行认证了\\n> \\t  this.getAuthenticationManager().authenticate(authRequest);//通过这个方法进行认证\\n> \\t  ```\\n>\\n> \\t3. 通过调用`AuthenticationManager的authenticate()方法`进行上边`Authentication`的认证，认证成功，则会返回一个封装了当前用户权限等信息的 `Authentication` 对象进行返回。\\n> \\t    但是因为`AuthenticationManager`是一个接口，`AuthenticationManager` 的默认实现是 `ProviderManager`，进而调用他的`authenticate()`方法进行认证处理。\\n> \\t    但是它不直接自己处理认证请求，而是委托给其所配置的 `AuthenticationProvider` 列表，然后会依次使用每一个 `AuthenticationProvider` 进行认证，如果有一个 `AuthenticationProvider` 认证后的结果不为 `null`，则表示该 `AuthenticationProvider` 已经认证成功，之后的 `AuthenticationProvider` 将不再继续认证。然后直接以该 `AuthenticationProvider` 的认证结果作为 `ProviderManager` 的认证结果。如果所有的 `AuthenticationProvider` 的认证结果都为 `null`，则表示认证失败，将抛出一个 `ProviderNotFoundException`。\\n>\\n> \\t  ```java\\n> \\t  protected final UserDetails retrieveUser(String username, UsernamePasswordAuthenticationToken authentication)\\n> \\t  //AuthenticationProvider 列表中一个实现类DaoAuthenticationProvider类中的一个认证执行方法 ,一般使用的就是这个进行认证。\\n> \\t  //`AbstractUserDetailsAuthenticationProvider `是DaoAuthenticationProvider的上层抽象类，也就是ProviderManager--AuthenticationProvider：AbstractUserDetailsAuthenticationProvider（抽象类）---DaoAuthenticationProvider（抽象的实现类）\\n> \\t  ```\\n>\\n> \\n>\\n> 4. 而在委托的`ProviderManager`类中进行认证时【调用`authenticate()`或者`retrieveUser()`方法】，会使用`UserDetailsService`接口.\\n>     通过 `UserDetailsService` 的 `loadUserByUsername()` 方法获取用户名对应的信息并封装到 `UserDetails` \\n>     ==本项目自定实现了`UserDetailsService`和`UserDetails`两个接口`UserDetailServiceImpl`和`UserDetailsDTO`，前者自定义了从数据库中取出`username`相关的数据==\\n>\\n>\\n> ```java\\n> UserDetails loadUserByUsername(String username)//通过用户名进行数据库的信息查找元素\\n> ```\\n>\\n> 5. `UserDetails` 赋给上层的`Provider`的实现类，之后调用`additionalAuthenticationChecks`方法对用户的密码进行最后的检查.方法是在`DaoAuthenticationProvider`父类 `AbstractUserDetailsAuthenticationProvider `的 `authenticate `方法中被调用的调用上下文中设置的`PasswordEncoder`，最终密码校验的细节完全在`BCrypt`实体类中进行\\n> \\t补充：数据库保存的密码编码和这里的应设置一样，不一样要进行多次的编码解码，而数据库的设置，应该是在注册哪里进行保存的时候进行编码。\\n>\\n> \\t```java\\n> \\t//additionalAuthenticationChecks 方法内部执行验证的逻辑\\n> \\tthis.passwordEncoder.matches(presentedPassword, userDetails.getPassword())\\n> \\t```\\n>\\n> \\t==密码校验通过==之后就会返回一个认证通过的 `Authentication` 的 `principal`，然后会把该 `Authentication` 存入到 `SecurityContext` 中。\\n>\\n> 6. 现在认证处理已经完成，根据认证结果不同转向不同的处理器\\n>\\n> \\t1. 认证成功，转向`AuthenticationSuccessHandler`\\n> \\t\\t1. 根据`SecurityContext` 中`authentication`信息，生成`JWT-token`。【具体实现细节在`TokenServiceImpl`中，他会生成，并把`authentication`对应的`UserDetails` 存入`redis`中】\\n> \\t\\t2. 将登录成功后的用户信息（包含token）返回给客户端（前端），==这里就保证后边请求会携带`token`了==\\n>\\n> \\t1. 认证失败，转向`AuthenticationFailureHandler`,\\n> \\t\\t1. `aurora`项目这里就是向前端返回一个JSON字符串，包含了认证错误的原因。\\n\\n### 已经经过登录的请求-不是登录请求\\n\\n> 1. 前端发送请求【因为已经登录验证过了，这里请求中都会携带`token`】\\n>\\n> 2. 这里转向`JwtAuthenticationTokenFilter`进行验证，通过`doFilterInternal()`方法在这一次的上下文中设置`authentication`。\\n>     ==因为一个认证信息的周期就是一次请求的周期==\\n>\\n> 3.1. 如果可以通过解析`token`获取到对应的`UserDetails` ，说明这个用户是获得认证的用户，之后将其的`authentication`放到 `SecurityContext` 中。\\n> 3.2. 不能获取到，就会像登录那样直接转到`UsernamePasswordAuthenticationFilter`这个过滤器进行在一次的处理。【一般就是认证过期，再次登录】\\n>\\n> 4. 上下文存在`authentication`,这次请求的认证结束。剩余的过滤器等认证都会通过。\\n> 5. 执行具体的业务层逻辑。\\n\\n### 权限认证\\n\\n> [通过自定义决策管理器实现动态权限管理](https://blog.csdn.net/m0_59448100/article/details/127093942)\\n>\\n> [动态权限控制（上）思路](https://juejin.cn/post/6844904006209241096?searchId=2024031918550725963048FD0787BE7A2F#heading-0)\\n>\\n> [动态权限控制（下）实习](https://juejin.cn/post/6844904007534641159)\\n\\n> 1. 用户认证之后，就要对请求`url`进行权限判定，判定当前认证的用户是否对于这个请求的资源有权限。\\n>\\n> 2. 而过滤器中的`FilterSecurityInterceptor`负责对 `http` 接口进行权限认证。【是Security的内置filter】\\n>\\n> \\t```java\\n> \\t //`FilterSecurityInterceptor`\\t内执行的方法\\n> \\tpublic void doFilter(ServletRequest request, ServletResponse response,\\n> \\t \\t\\t\\tFilterChain chain) throws IOException, ServletException {\\n> \\t \\t\\tFilterInvocation fi = new FilterInvocation(request, response, chain);\\n> \\t \\t\\tinvoke(fi);\\n> \\t \\t}\\n> \\t//初始化了一个 FilterInvocation ：封装 Servlet 环境中的 HTTP 请求、响应以及过滤器链 然后被 invoke 方法处理\\n> \\t//实际上是将当前请求的上下文信息封装起来，并交给 Spring Security 的安全过滤器链进行处理。在过滤器链的执行过程中，各个安全过滤器可以通过 FilterInvocation 对象来获取当前请求的信息，并进行相应的安全控制操作。\\n> \\t```\\n>\\n> \\t`invoke`方法内部一般使用父类的 `beforeInvocation` 方法进一步进行鉴权处理，然后再进入过滤器链。\\n>\\n> 3. `beforeInvocation`方法详解\\n> \\t通过 `this.obtainSecurityMetadataSource().getAttributes(Object object)`拿受保护对象（就是当前请求的 URI）所有的映射角色（`ConfigAttribute` 直接理解为角色的进一步抽象） ==也就是调用下边的元数据加载器的方法，得到方法生成的权限信息==。\\n>\\n> \\t```java\\n> \\tAuthentication authenticated = this.authenticateIfRequired();\\n> \\t//这一步拿到当前上下文的认证信息\\n> \\t this.accessDecisionManager.decide(authenticated, object, attributes);\\n> \\t```\\n>\\n> \\t然后使用访问自定义实现的决策管理器`AccessDecisionManager` 进行投票决策来确定是否放行。\\n>\\n> 4. `FilterInvocationSecurityMetadataSource`元数据加载器 \\n> \\t加载符合这个`url`路径的权限列表（角色列表）\\n>\\n> 5. `AccessDecisionManager访问决策管理器`会将上边加载的角色列表和当前认证的角色信息对比，符合就放行，完成鉴权的认定。否则就抛出异常信息。\\n> \\t【因为是自定义的，没有使用投票器，也就不需要投票判定，直接上述的角色对比，符合就放行】\\n>\\n> 6. 鉴权结束\\n\\n### 异常处理\\n\\n> 说明：\\n>\\n> 我们还希望在认证失败或者是授权失败的情况下也能和我们的接口一样返回相同结构的json，这样可以让前端能对响应进行统一的处理。要实现这个功能我们需要知道SpringSecurity的异常处理机制。在SpringSecurity中，如果我们==在认证或者授权的过程==中出现了异常会被`ExceptionTranslationFilter`捕获到。在ExceptionTranslationFilter中会去判断是认证失败还是授权失败出现的异常。\\n\\n> 如果是==认证==过程中出现的异常会被封装成`AuthenticationException`然后调用 `AuthenticationEntryPoint` 对象的方法去进行异常处理。\\n> 如果是==授权==过程中出现的异常会被封装成`AccessDeniedException`然后调用 `AccessDeniedHandler` 对象的方法去进行异常处理。\\n\\n> 所以如果我们需要自定义异常处理，我们只需要自定义`AuthenticationEntryPoint`和`AccessDeniedHandler`然后配置给`SpringSecurity`即可，\\n>\\n> 本项目认证实现类：`AuthenticationEntryPointImpl` 向前端发送JSON：用户未登录\\n>\\n> 本项目授权实现类：`AccessDeniedHandlerImpl`向前端发送JSON：用户权限不足\\n\\n## 知识点\\n\\n### `UserDetailsService`接口\\n\\n> 1. 接口只提供了一个方法：\\n>\\n> \\t```java\\n> \\tUserDetails loadUserByUsername(String username) throws UsernameNotFoundException;\\n> \\t```\\n>\\n> \\t该方法很容易理解：==通过用户名来加载用户==。这个方法主要用于从系统数据中查询并加载具体的用户到Spring Security中。\\n>\\n> 2. UserDetailsService 可以知道最终交给Spring Security的是`UserDetails` 。\\n>\\n> 3. 通过继承``UserDetailsService`接口，可以自定义从数据库读取信息的逻辑。\\n\\n### `UserDetails`接口\\n\\n> 1. 该接口是提供用户信息的核心接口。该接口实现仅仅存储用户的信息。\\n>     后续会将该接口提供的用户信息封装到认证对象Authentication中去。\\n> 2. 我们可以自定义一些属性传递给`Authentication`,通过实现`UserDetails`接口。完成数据的自定义封装\\n> 3. ```java\\n> \\t\\t@Override\\n> \\t    @Transient\\n> \\t    public Collection<? extends GrantedAuthority> getAuthorities() {\\n> \\t        return roles.stream()\\n> \\t                .map(SimpleGrantedAuthority::new)\\n> \\t                .collect(Collectors.toSet());\\n> \\t    }\\n> \\t```\\n>\\n> \\t这个重写的方法同样可以用于`authentication.getAuthorities()`,本质就是使用这个获取`UserDetails`中`roles`信息（角色信息）。\\n\\n### `UserDetailsManager`\\n\\n> `UserDetailsManager` 类型负责对安全用户实体抽象`UserDetails`的增删查改操作。同时还继承了`UserDetailsService`接口。\\n\\n### `PasswordEncoder`\\n\\n> https://felord.blog.csdn.net/article/details/102504387\\n\\n### `WebSecurityConfigurerAdapter`配置类\\n\\n> https://felord.blog.csdn.net/article/details/102583995\\n\\n### 自定义登录相关流程解析\\n\\n> https://felord.blog.csdn.net/article/details/102617422\\n\\n### 过滤器链\\n\\n> https://mp.weixin.qq.com/s?__biz=MzUzMzQ2MDIyMA%3D%3D&chksm=faa2e6f2cdd56fe441d637ef6c339518af064bded807d6c12a0ac3ef9ed9424eb9785eae469f&idx=1&mid=2247484257&scene=21&sn=7034ccb9c2b6ac6d61364a2a87111a50#wechat_redirect\\n\\n#### `SecurityContextPersistenceFilter`\\n\\n> `SecurityContextPersistenceFilter` 主要控制 `SecurityContext` 的在一次请求中的生命周期 。请求来临时，创建`SecurityContext` 安全上下文信息，请求结束时清空 `SecurityContextHolder`。\\n>\\n> `SecurityContextPersistenceFilter` 通过 `HttpScurity#securityContext()` 及相关方法引入其配置对象 `SecurityContextConfigurer` 来进行配置。\\n\\n### RBAC权限模型\\n\\n> RBAC权限模型：**`基于角色的访问控制（RBAC）是实施面向企业安全策略的一种有效的访问控制方式。`** 其基本思想是，对系统操作的各种权限不是直接授予具体的用户，而是在用户集合与权限集合之间建立一个角色集合。每一种角色对应一组相应的权限。一旦用户被分配了适当的角色后，该用户就拥有此角色的所有操作权限。这样做的好处是，不必在每次创建用户时都进行分配权限的操作，只要分配用户相应的角色即可，而且角色的权限变更比用户的权限变更要少得多，这样将简化用户的权限管理，减少系统的开销。\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/64e53e8813f025ee29f22135d2a520f3.jpg\",\"articleTitle\":\"SpringSecurity详解\",\"categoryName\":\"java\",\"id\":136,\"isFeatured\":0,\"isTop\":1,\"status\":1,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 17:04:29', NULL);
INSERT INTO `t_operation_log` VALUES (1771, '文章模块', '上传', '/admin/articles/images', 'com.aurora.controller.ArticleController.saveArticleImages', '上传文章图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/articles/a4483be44cc72c76099a98fe78e47e11.jpg\",\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 17:17:33', NULL);
INSERT INTO `t_operation_log` VALUES (1772, 'aurora信息', '修改', '/admin/about', 'com.aurora.controller.AuroraInfoController.updateAbout', '修改关于我信息', '[{\"content\":\"this is 啊哈14\'s blog.\\nwelcome to my website.\\n![logo.jpg](http://localhost:9000/blog/aurora/articles/a4483be44cc72c76099a98fe78e47e11.jpg)\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 17:17:43', NULL);
INSERT INTO `t_operation_log` VALUES (1773, '评论模块', '删除', '/admin/comments', 'com.aurora.controller.CommentController.deleteComments', '删除评论', '[[1038,1039,1040,1041,1035,1034]]', 'DELETE', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 17:43:00', NULL);
INSERT INTO `t_operation_log` VALUES (1774, '用户信息模块', '删除', '/admin/users/1024/online', 'com.aurora.controller.UserInfoController.removeOnlineUser', '下线用户', '[1024]', 'DELETE', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 17:50:11', NULL);
INSERT INTO `t_operation_log` VALUES (1775, '角色模块', '新增或修改', '/admin/role', 'com.aurora.controller.RoleController.saveOrUpdateRole', '保存或更新角色', '[{\"id\":1,\"menuIds\":[1,2,6,7,8,9,10,3,11,221,222,223,224,202,13,201,213,14,15,16,4,214,209,17,18,205,206,208,210,20,225,5,19],\"roleName\":\"admin\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 17:56:51', NULL);
INSERT INTO `t_operation_log` VALUES (1776, '菜单模块', '新增或修改', '/admin/menus', 'com.aurora.controller.MenuController.saveOrUpdateMenu', '新增或修改菜单', '[{\"component\":\"/log/QuartzLog.vue\",\"icon\":\"el-icon-myguanyuwo\",\"id\":220,\"isHidden\":0,\"name\":\"定时任务日志\",\"orderNum\":2,\"path\":\"/quartz/log/quartzId\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 18:14:27', NULL);
INSERT INTO `t_operation_log` VALUES (1777, '角色模块', '新增或修改', '/admin/role', 'com.aurora.controller.RoleController.saveOrUpdateRole', '保存或更新角色', '[{\"id\":1,\"menuIds\":[1,2,6,7,8,9,10,3,11,221,222,223,224,202,13,201,213,14,15,16,4,214,209,17,18,205,206,208,210,20,225,5,19],\"roleName\":\"admin\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 18:16:36', NULL);
INSERT INTO `t_operation_log` VALUES (1778, '角色模块', '新增或修改', '/admin/role', 'com.aurora.controller.RoleController.saveOrUpdateRole', '保存或更新角色', '[{\"id\":1,\"menuIds\":[1,2,6,7,8,9,10,3,11,222,223,202,13,201,213,14,15,16,4,214,209,17,18,205,206,208,210,19,20,225,220,5,221],\"roleName\":\"admin\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 18:17:00', NULL);
INSERT INTO `t_operation_log` VALUES (1779, '菜单模块', '新增或修改', '/admin/menus', 'com.aurora.controller.MenuController.saveOrUpdateMenu', '新增或修改菜单', '[{\"component\":\"/log/QuartzLog.vue\",\"icon\":\"el-icon-myguanyuwo\",\"id\":220,\"isHidden\":0,\"name\":\"定时任务日志\",\"orderNum\":2,\"path\":\"/quartz/log/:quartzId\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 18:18:05', NULL);
INSERT INTO `t_operation_log` VALUES (1780, '角色模块', '新增或修改', '/admin/role', 'com.aurora.controller.RoleController.saveOrUpdateRole', '保存或更新角色', '[{\"id\":1,\"menuIds\":[1,2,6,7,8,9,10,3,11,221,222,223,224,202,13,201,213,14,15,16,4,214,209,17,18,205,206,208,210,19,20,225,220,5],\"roleName\":\"admin\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 18:20:11', NULL);
INSERT INTO `t_operation_log` VALUES (1781, '菜单模块', '修改', '/admin/menus/isHidden', 'com.aurora.controller.MenuController.updateMenuIsHidden', '修改目录是否隐藏', '[{\"id\":224,\"isHidden\":1}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 18:20:57', NULL);
INSERT INTO `t_operation_log` VALUES (1782, '菜单模块', '修改', '/admin/menus/isHidden', 'com.aurora.controller.MenuController.updateMenuIsHidden', '修改目录是否隐藏', '[{\"id\":220,\"isHidden\":1}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 18:22:31', NULL);
INSERT INTO `t_operation_log` VALUES (1783, '角色模块', '新增或修改', '/admin/role', 'com.aurora.controller.RoleController.saveOrUpdateRole', '保存或更新角色', '[{\"id\":14,\"menuIds\":[1,2,6,7,8,9,10,3,11,221,222,223,224],\"roleName\":\"test\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 18:46:01', NULL);
INSERT INTO `t_operation_log` VALUES (1784, '角色模块', '新增或修改', '/admin/role', 'com.aurora.controller.RoleController.saveOrUpdateRole', '保存或更新角色', '[{\"id\":14,\"menuIds\":[1,2,6,7,8,9,10,3,11,221,222,223,224,201,202],\"roleName\":\"test\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-06 18:46:33', NULL);
INSERT INTO `t_operation_log` VALUES (1785, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"还在学习的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"favicon\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"gitee\":\"\",\"github\":\"\",\"isCommentReview\":1,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"3347778009@qq.com\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-07 17:12:13', NULL);
INSERT INTO `t_operation_log` VALUES (1786, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"还在学习的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"favicon\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"gitee\":\"https://gitee.com/aha14\",\"github\":\"https://github.com/HHermit\",\"isCommentReview\":1,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"3347778009\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-07 17:13:59', NULL);
INSERT INTO `t_operation_log` VALUES (1787, 'aurora信息', '上传', '/admin/config/images', 'com.aurora.controller.AuroraInfoController.savePhotoAlbumCover', '上传博客配置图片', 'file', 'POST', '{\"code\":20000,\"data\":\"http://localhost:9000/blog/aurora/config/7c5ddbfd6e5754d192eb24c698f1f7f9.png\",\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-07 17:17:02', NULL);
INSERT INTO `t_operation_log` VALUES (1788, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"还在学习的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"favicon\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"gitee\":\"https://gitee.com/aha14\",\"github\":\"https://github.com/HHermit\",\"isCommentReview\":1,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"3347778009\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"http://localhost:9000/blog/aurora/config/7c5ddbfd6e5754d192eb24c698f1f7f9.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-07 17:17:03', NULL);
INSERT INTO `t_operation_log` VALUES (1789, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"还在学习的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"favicon\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"gitee\":\"https://gitee.com/aha14\",\"github\":\"https://github.com/HHermit\",\"isCommentReview\":1,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"https://qm.qq.com/q/4mzr0pJE2Y\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"http://localhost:9000/blog/aurora/config/7c5ddbfd6e5754d192eb24c698f1f7f9.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-07 17:29:59', NULL);
INSERT INTO `t_operation_log` VALUES (1790, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"还在学习的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"favicon\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"gitee\":\"https://gitee.com/aha14\",\"github\":\"https://github.com/HHermit\",\"isCommentReview\":1,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"https://admin.qidian.qq.com/static_proxy/b2b-qq/wpa-link/index.html#/person?uin=3347778009\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"http://localhost:9000/blog/aurora/config/7c5ddbfd6e5754d192eb24c698f1f7f9.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-07 17:45:02', NULL);
INSERT INTO `t_operation_log` VALUES (1791, 'aurora信息', '修改', '/admin/website/config', 'com.aurora.controller.AuroraInfoController.updateWebsiteConfig', '更新网站配置', '[{\"alipayQRCode\":\"\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"还在学习的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"favicon\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"gitee\":\"https://gitee.com/aha14\",\"github\":\"https://github.com/HHermit\",\"isCommentReview\":1,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"https://admin.qidian.qq.com/static_proxy/b2b-qq/wpa-link/index.html#/person?uin=2651694460\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"http://localhost:9000/blog/aurora/config/7c5ddbfd6e5754d192eb24c698f1f7f9.png\",\"weibo\":\"\",\"zhihu\":\"\"}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-07 17:45:56', NULL);
INSERT INTO `t_operation_log` VALUES (1792, '文章模块', '新增或修改', '/admin/articles', 'com.aurora.controller.ArticleController.saveOrUpdateArticle', '保存和修改文章', '[{\"articleAbstract\":\"以该blog为讲解主题\",\"articleContent\":\"# SpringSecurity 流程详解\\n\\n## 流程\\n\\n> 在每一次的请求中都会对呆着token的信息进行JWT验证，同时上下文中的认证信息只在一次请求周期内完成，下一次新的请求会进行新的认证。\\n\\n## aurora项目`SpringSecurity`流程\\n\\n### 参考\\n\\n> [认证1流程](https://zhuanlan.zhihu.com/p/365513384)\\n>\\n> [SpringSecurity 登录流程](https://www.cnblogs.com/zongmin/p/13783174.html#_label1_0)\\n>\\n> [Spring Security详细讲解(JWT+SpringSecurity登入案例) 比较详细的一个流程](https://developer.aliyun.com/article/996569#slide-0)\\n>\\n> https://juejin.cn/column/6960549063062683684\\n\\n### 前端设置token\\n\\n> 代码：\\n>\\n> ```vue\\n> axios.interceptors.request.use((config) => {\\n>   config.headers[\'Authorization\'] = \'Bearer \' + sessionStorage.getItem(\'token\')\\n>   return config\\n> })\\n> ```\\n>\\n> 该函数是一个axios请求拦截器，用于在每次发送请求前统一设置请求头中的Authorization字段。它从sessionStorage中获取token，然后将其与\'Bearer \'拼接，作为Authorization字段的值。这样可以确保每个请求都携带了认证信息。\\n\\n### 第一次认证的处理\\n\\n> - 第一次都是登录，本地中并没有存在认证信息和token信息\\n>\\n> \\t1. 前端发送登录请求，携带用户名和密码\\n>\\n> \\t2. 因为`Security`配置开启了`formlogin()`，所以对于登录的请求，`UsernamePasswordAuthenticationFilter`会接收用户名和密码，进行封装为一个==待认证==的`Authentication`。\\n>\\n> \\t  ```java\\n> \\t  //UsernamePasswordAuthenticationFilter 类进行处理的语句\\n> \\t  UsernamePasswordAuthenticationToken authRequest = new UsernamePasswordAuthenticationToken(username, password);\\n> \\t  //封装之后就是对这个信息进行认证了\\n> \\t  this.getAuthenticationManager().authenticate(authRequest);//通过这个方法进行认证\\n> \\t  ```\\n>\\n> \\t3. 通过调用`AuthenticationManager的authenticate()方法`进行上边`Authentication`的认证，认证成功，则会返回一个封装了当前用户权限等信息的 `Authentication` 对象进行返回。\\n> \\t    但是因为`AuthenticationManager`是一个接口，`AuthenticationManager` 的默认实现是 `ProviderManager`，进而调用他的`authenticate()`方法进行认证处理。\\n> \\t    但是它不直接自己处理认证请求，而是委托给其所配置的 `AuthenticationProvider` 列表，然后会依次使用每一个 `AuthenticationProvider` 进行认证，如果有一个 `AuthenticationProvider` 认证后的结果不为 `null`，则表示该 `AuthenticationProvider` 已经认证成功，之后的 `AuthenticationProvider` 将不再继续认证。然后直接以该 `AuthenticationProvider` 的认证结果作为 `ProviderManager` 的认证结果。如果所有的 `AuthenticationProvider` 的认证结果都为 `null`，则表示认证失败，将抛出一个 `ProviderNotFoundException`。\\n>\\n> \\t  ```java\\n> \\t  protected final UserDetails retrieveUser(String username, UsernamePasswordAuthenticationToken authentication)\\n> \\t  //AuthenticationProvider 列表中一个实现类DaoAuthenticationProvider类中的一个认证执行方法 ,一般使用的就是这个进行认证。\\n> \\t  //`AbstractUserDetailsAuthenticationProvider `是DaoAuthenticationProvider的上层抽象类，也就是ProviderManager--AuthenticationProvider：AbstractUserDetailsAuthenticationProvider（抽象类）---DaoAuthenticationProvider（抽象的实现类）\\n> \\t  ```\\n>\\n> \\n>\\n> 4. 而在委托的`ProviderManager`类中进行认证时【调用`authenticate()`或者`retrieveUser()`方法】，会使用`UserDetailsService`接口.\\n>     通过 `UserDetailsService` 的 `loadUserByUsername()` 方法获取用户名对应的信息并封装到 `UserDetails` \\n>     ==本项目自定实现了`UserDetailsService`和`UserDetails`两个接口`UserDetailServiceImpl`和`UserDetailsDTO`，前者自定义了从数据库中取出`username`相关的数据==\\n>\\n>\\n> ```java\\n> UserDetails loadUserByUsername(String username)//通过用户名进行数据库的信息查找元素\\n> ```\\n>\\n> 5. `UserDetails` 赋给上层的`Provider`的实现类，之后调用`additionalAuthenticationChecks`方法对用户的密码进行最后的检查.方法是在`DaoAuthenticationProvider`父类 `AbstractUserDetailsAuthenticationProvider `的 `authenticate `方法中被调用的调用上下文中设置的`PasswordEncoder`，最终密码校验的细节完全在`BCrypt`实体类中进行\\n> \\t补充：数据库保存的密码编码和这里的应设置一样，不一样要进行多次的编码解码，而数据库的设置，应该是在注册哪里进行保存的时候进行编码。\\n>\\n> \\t```java\\n> \\t//additionalAuthenticationChecks 方法内部执行验证的逻辑\\n> \\tthis.passwordEncoder.matches(presentedPassword, userDetails.getPassword())\\n> \\t```\\n>\\n> \\t==密码校验通过==之后就会返回一个认证通过的 `Authentication` 的 `principal`，然后会把该 `Authentication` 存入到 `SecurityContext` 中。\\n>\\n> 6. 现在认证处理已经完成，根据认证结果不同转向不同的处理器\\n>\\n> \\t1. 认证成功，转向`AuthenticationSuccessHandler`\\n> \\t\\t1. 根据`SecurityContext` 中`authentication`信息，生成`JWT-token`。【具体实现细节在`TokenServiceImpl`中，他会生成，并把`authentication`对应的`UserDetails` 存入`redis`中】\\n> \\t\\t2. 将登录成功后的用户信息（包含token）返回给客户端（前端），==这里就保证后边请求会携带`token`了==\\n>\\n> \\t1. 认证失败，转向`AuthenticationFailureHandler`,\\n> \\t\\t1. `aurora`项目这里就是向前端返回一个JSON字符串，包含了认证错误的原因。\\n\\n### 已经经过登录的请求-不是登录请求\\n\\n> 1. 前端发送请求【因为已经登录验证过了，这里请求中都会携带`token`】\\n>\\n> 2. 这里转向`JwtAuthenticationTokenFilter`进行验证，通过`doFilterInternal()`方法在这一次的上下文中设置`authentication`。\\n>     ==因为一个认证信息的周期就是一次请求的周期==\\n>\\n> 3.1. 如果可以通过解析`token`获取到对应的`UserDetails` ，说明这个用户是获得认证的用户，之后将其的`authentication`放到 `SecurityContext` 中。\\n> 3.2. 不能获取到，就会像登录那样直接转到`UsernamePasswordAuthenticationFilter`这个过滤器进行在一次的处理。【一般就是认证过期，再次登录】\\n>\\n> 4. 上下文存在`authentication`,这次请求的认证结束。剩余的过滤器等认证都会通过。\\n> 5. 执行具体的业务层逻辑。\\n\\n### 权限认证\\n\\n> [通过自定义决策管理器实现动态权限管理](https://blog.csdn.net/m0_59448100/article/details/127093942)\\n>\\n> [动态权限控制（上）思路](https://juejin.cn/post/6844904006209241096?searchId=2024031918550725963048FD0787BE7A2F#heading-0)\\n>\\n> [动态权限控制（下）实习](https://juejin.cn/post/6844904007534641159)\\n\\n> 1. 用户认证之后，就要对请求`url`进行权限判定，判定当前认证的用户是否对于这个请求的资源有权限。\\n>\\n> 2. 而过滤器中的`FilterSecurityInterceptor`负责对 `http` 接口进行权限认证。【是Security的内置filter】\\n>\\n> \\t```java\\n> \\t //`FilterSecurityInterceptor`\\t内执行的方法\\n> \\tpublic void doFilter(ServletRequest request, ServletResponse response,\\n> \\t \\t\\t\\tFilterChain chain) throws IOException, ServletException {\\n> \\t \\t\\tFilterInvocation fi = new FilterInvocation(request, response, chain);\\n> \\t \\t\\tinvoke(fi);\\n> \\t \\t}\\n> \\t//初始化了一个 FilterInvocation ：封装 Servlet 环境中的 HTTP 请求、响应以及过滤器链 然后被 invoke 方法处理\\n> \\t//实际上是将当前请求的上下文信息封装起来，并交给 Spring Security 的安全过滤器链进行处理。在过滤器链的执行过程中，各个安全过滤器可以通过 FilterInvocation 对象来获取当前请求的信息，并进行相应的安全控制操作。\\n> \\t```\\n>\\n> \\t`invoke`方法内部一般使用父类的 `beforeInvocation` 方法进一步进行鉴权处理，然后再进入过滤器链。\\n>\\n> 3. `beforeInvocation`方法详解\\n> \\t通过 `this.obtainSecurityMetadataSource().getAttributes(Object object)`拿受保护对象（就是当前请求的 URI）所有的映射角色（`ConfigAttribute` 直接理解为角色的进一步抽象） ==也就是调用下边的元数据加载器的方法，得到方法生成的权限信息==。\\n>\\n> \\t```java\\n> \\tAuthentication authenticated = this.authenticateIfRequired();\\n> \\t//这一步拿到当前上下文的认证信息\\n> \\t this.accessDecisionManager.decide(authenticated, object, attributes);\\n> \\t```\\n>\\n> \\t然后使用访问自定义实现的决策管理器`AccessDecisionManager` 进行投票决策来确定是否放行。\\n>\\n> 4. `FilterInvocationSecurityMetadataSource`元数据加载器 \\n> \\t加载符合这个`url`路径的权限列表（角色列表）\\n>\\n> 5. `AccessDecisionManager访问决策管理器`会将上边加载的角色列表和当前认证的角色信息对比，符合就放行，完成鉴权的认定。否则就抛出异常信息。\\n> \\t【因为是自定义的，没有使用投票器，也就不需要投票判定，直接上述的角色对比，符合就放行】\\n>\\n> 6. 鉴权结束\\n\\n### 异常处理\\n\\n> 说明：\\n>\\n> 我们还希望在认证失败或者是授权失败的情况下也能和我们的接口一样返回相同结构的json，这样可以让前端能对响应进行统一的处理。要实现这个功能我们需要知道SpringSecurity的异常处理机制。在SpringSecurity中，如果我们==在认证或者授权的过程==中出现了异常会被`ExceptionTranslationFilter`捕获到。在ExceptionTranslationFilter中会去判断是认证失败还是授权失败出现的异常。\\n\\n> 如果是==认证==过程中出现的异常会被封装成`AuthenticationException`然后调用 `AuthenticationEntryPoint` 对象的方法去进行异常处理。\\n> 如果是==授权==过程中出现的异常会被封装成`AccessDeniedException`然后调用 `AccessDeniedHandler` 对象的方法去进行异常处理。\\n\\n> 所以如果我们需要自定义异常处理，我们只需要自定义`AuthenticationEntryPoint`和`AccessDeniedHandler`然后配置给`SpringSecurity`即可，\\n>\\n> 本项目认证实现类：`AuthenticationEntryPointImpl` 向前端发送JSON：用户未登录\\n>\\n> 本项目授权实现类：`AccessDeniedHandlerImpl`向前端发送JSON：用户权限不足\\n\\n## 知识点\\n\\n### `UserDetailsService`接口\\n\\n> 1. 接口只提供了一个方法：\\n>\\n> \\t```java\\n> \\tUserDetails loadUserByUsername(String username) throws UsernameNotFoundException;\\n> \\t```\\n>\\n> \\t该方法很容易理解：==通过用户名来加载用户==。这个方法主要用于从系统数据中查询并加载具体的用户到Spring Security中。\\n>\\n> 2. UserDetailsService 可以知道最终交给Spring Security的是`UserDetails` 。\\n>\\n> 3. 通过继承``UserDetailsService`接口，可以自定义从数据库读取信息的逻辑。\\n\\n### `UserDetails`接口\\n\\n> 1. 该接口是提供用户信息的核心接口。该接口实现仅仅存储用户的信息。\\n>     后续会将该接口提供的用户信息封装到认证对象Authentication中去。\\n> 2. 我们可以自定义一些属性传递给`Authentication`,通过实现`UserDetails`接口。完成数据的自定义封装\\n> 3. ```java\\n> \\t\\t@Override\\n> \\t    @Transient\\n> \\t    public Collection<? extends GrantedAuthority> getAuthorities() {\\n> \\t        return roles.stream()\\n> \\t                .map(SimpleGrantedAuthority::new)\\n> \\t                .collect(Collectors.toSet());\\n> \\t    }\\n> \\t```\\n>\\n> \\t这个重写的方法同样可以用于`authentication.getAuthorities()`,本质就是使用这个获取`UserDetails`中`roles`信息（角色信息）。\\n\\n### `UserDetailsManager`\\n\\n> `UserDetailsManager` 类型负责对安全用户实体抽象`UserDetails`的增删查改操作。同时还继承了`UserDetailsService`接口。\\n\\n### `PasswordEncoder`\\n\\n> https://felord.blog.csdn.net/article/details/102504387\\n\\n### `WebSecurityConfigurerAdapter`配置类\\n\\n> https://felord.blog.csdn.net/article/details/102583995\\n\\n### 自定义登录相关流程解析\\n\\n> https://felord.blog.csdn.net/article/details/102617422\\n\\n### 过滤器链\\n\\n> https://mp.weixin.qq.com/s?__biz=MzUzMzQ2MDIyMA%3D%3D&chksm=faa2e6f2cdd56fe441d637ef6c339518af064bded807d6c12a0ac3ef9ed9424eb9785eae469f&idx=1&mid=2247484257&scene=21&sn=7034ccb9c2b6ac6d61364a2a87111a50#wechat_redirect\\n\\n#### `SecurityContextPersistenceFilter`\\n\\n> `SecurityContextPersistenceFilter` 主要控制 `SecurityContext` 的在一次请求中的生命周期 。请求来临时，创建`SecurityContext` 安全上下文信息，请求结束时清空 `SecurityContextHolder`。\\n>\\n> `SecurityContextPersistenceFilter` 通过 `HttpScurity#securityContext()` 及相关方法引入其配置对象 `SecurityContextConfigurer` 来进行配置。\\n\\n### RBAC权限模型\\n\\n> RBAC权限模型：**`基于角色的访问控制（RBAC）是实施面向企业安全策略的一种有效的访问控制方式。`** 其基本思想是，对系统操作的各种权限不是直接授予具体的用户，而是在用户集合与权限集合之间建立一个角色集合。每一种角色对应一组相应的权限。一旦用户被分配了适当的角色后，该用户就拥有此角色的所有操作权限。这样做的好处是，不必在每次创建用户时都进行分配权限的操作，只要分配用户相应的角色即可，而且角色的权限变更比用户的权限变更要少得多，这样将简化用户的权限管理，减少系统的开销。\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\",\"articleCover\":\"http://localhost:9000/blog/aurora/articles/64e53e8813f025ee29f22135d2a520f3.jpg\",\"articleTitle\":\"SpringSecurity详解\",\"categoryName\":\"java\",\"id\":136,\"isFeatured\":0,\"isTop\":1,\"status\":1,\"tagNames\":[],\"type\":1}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-08 20:42:27', NULL);
INSERT INTO `t_operation_log` VALUES (1793, '评论模块', '新增', '/comments/save', 'com.aurora.controller.CommentController.saveComment', '添加评论', '[{\"commentContent\":\"留言测试demo\",\"type\":2}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1015, '用户1774377440806739970', '127.0.0.1', '内网IP|内网IP', '2024-04-11 23:54:59', NULL);
INSERT INTO `t_operation_log` VALUES (1794, '评论模块', '修改', '/admin/comments/review', 'com.aurora.controller.CommentController.updateCommentsReview', '审核评论', '[{\"ids\":[1042],\"isReview\":1}]', 'PUT', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-11 23:55:09', NULL);
INSERT INTO `t_operation_log` VALUES (1795, '友链模块', '新增或修改', '/admin/links', 'com.aurora.controller.FriendLinkController.saveOrUpdateFriendLink', '保存或修改友链', '[{\"linkAddress\":\"https://www.baidu.com/\",\"linkAvatar\":\"https://www.baidu.com/favicon.ico\",\"linkIntro\":\"友链demo\",\"linkName\":\"友链测试（跳转到baidu）\"}]', 'POST', '{\"code\":20000,\"flag\":true,\"message\":\"操作成功\"}', 1, '啊哈14', '127.0.0.1', '内网IP|内网IP', '2024-04-11 23:59:22', NULL);

-- ----------------------------
-- Table structure for t_photo
-- ----------------------------
DROP TABLE IF EXISTS `t_photo`;
CREATE TABLE `t_photo`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '主键',
  `album_id` int NOT NULL COMMENT '相册id',
  `photo_name` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '照片名',
  `photo_desc` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '照片描述',
  `photo_src` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '照片地址',
  `is_delete` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否删除',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 71 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '照片' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_photo
-- ----------------------------
INSERT INTO `t_photo` VALUES (69, 10, '1774011416395657219', NULL, 'http://localhost:9000/blog/aurora/photos/79bd15d738a6d694e6c5b46dede799c0.jpg', 0, '2024-03-30 17:50:56', '2024-03-30 18:08:56');
INSERT INTO `t_photo` VALUES (70, 10, '1774011416395657220', NULL, 'http://localhost:9000/blog/aurora/photos/ec5d47dea25c44a1511d31487a524cef.jpg', 0, '2024-03-30 17:50:56', '2024-03-30 18:08:56');

-- ----------------------------
-- Table structure for t_photo_album
-- ----------------------------
DROP TABLE IF EXISTS `t_photo_album`;
CREATE TABLE `t_photo_album`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '主键',
  `album_name` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '相册名',
  `album_desc` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '相册描述',
  `album_cover` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '相册封面',
  `is_delete` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否删除',
  `status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '状态值 1公开 2私密',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 11 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '相册' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_photo_album
-- ----------------------------
INSERT INTO `t_photo_album` VALUES (10, '壁纸', '博主推荐的壁纸', 'http://localhost:9000/blog/aurora/photos/cdf5b38c8c8f8d9fbc5b51b14ff71549.png', 0, 1, '2024-03-29 18:38:42', '2024-03-30 18:08:56');

-- ----------------------------
-- Table structure for t_resource
-- ----------------------------
DROP TABLE IF EXISTS `t_resource`;
CREATE TABLE `t_resource`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '主键',
  `resource_name` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '资源名',
  `url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '权限路径',
  `request_method` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '请求方式',
  `parent_id` int NULL DEFAULT NULL COMMENT '父模块id',
  `is_anonymous` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否匿名访问 0否 1是',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1189 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_resource
-- ----------------------------
INSERT INTO `t_resource` VALUES (1050, 'aurora信息', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1051, '分类模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1052, '友链模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1053, '定时任务日志模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1054, '定时任务模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1055, '异常处理模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1056, '操作日志模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1057, '文章模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1058, '标签模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1059, '照片模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1060, '用户信息模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1061, '用户账号模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1062, '相册模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1063, '菜单模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1064, '角色模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1065, '评论模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1066, '说说模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1067, '资源模块', NULL, NULL, NULL, 0, '2022-08-19 22:26:21', NULL);
INSERT INTO `t_resource` VALUES (1068, '获取系统信息', '/', 'GET', 1050, 1, '2022-08-19 22:26:22', '2022-08-19 22:26:55');
INSERT INTO `t_resource` VALUES (1069, '查看关于我信息', '/about', 'GET', 1050, 1, '2022-08-19 22:26:22', '2022-08-19 22:26:57');
INSERT INTO `t_resource` VALUES (1070, '获取系统后台信息', '/admin', 'GET', 1050, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1071, '修改关于我信息', '/admin/about', 'PUT', 1050, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1072, '获取后台文章', '/admin/articles', 'GET', 1057, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1073, '保存和修改文章', '/admin/articles', 'POST', 1057, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1074, '删除或者恢复文章', '/admin/articles', 'PUT', 1057, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1075, '物理删除文章', '/admin/articles/delete', 'DELETE', 1057, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1076, '导出文章', '/admin/articles/export', 'POST', 1057, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1077, '上传文章图片', '/admin/articles/images', 'POST', 1057, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1078, '导入文章', '/admin/articles/import', 'POST', 1057, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1079, '修改文章是否置顶和推荐', '/admin/articles/topAndFeatured', 'PUT', 1057, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1080, '根据id查看后台文章', '/admin/articles/*', 'GET', 1057, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1081, '查看后台分类列表', '/admin/categories', 'GET', 1051, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1082, '添加或修改分类', '/admin/categories', 'POST', 1051, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1083, '删除分类', '/admin/categories', 'DELETE', 1051, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1084, '搜索文章分类', '/admin/categories/search', 'GET', 1051, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1085, '查询后台评论', '/admin/comments', 'GET', 1065, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1086, '删除评论', '/admin/comments', 'DELETE', 1065, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1087, '审核评论', '/admin/comments/review', 'PUT', 1065, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1088, '上传博客配置图片', '/admin/config/images', 'POST', 1050, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1089, '获取定时任务的日志列表', '/admin/jobLogs', 'GET', 1053, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1090, '删除定时任务的日志', '/admin/jobLogs', 'DELETE', 1053, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1091, '清除定时任务的日志', '/admin/jobLogs/clean', 'DELETE', 1053, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1092, '获取定时任务日志的所有组名', '/admin/jobLogs/jobGroups', 'GET', 1053, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1093, '获取任务列表', '/admin/jobs', 'GET', 1054, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1094, '添加定时任务', '/admin/jobs', 'POST', 1054, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1095, '修改定时任务', '/admin/jobs', 'PUT', 1054, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1096, '删除定时任务', '/admin/jobs', 'DELETE', 1054, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1097, '获取所有job分组', '/admin/jobs/jobGroups', 'GET', 1054, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1098, '执行某个任务', '/admin/jobs/run', 'PUT', 1054, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1099, '更改任务的状态', '/admin/jobs/status', 'PUT', 1054, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1100, '根据id获取任务', '/admin/jobs/*', 'GET', 1054, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1101, '查看后台友链列表', '/admin/links', 'GET', 1052, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1102, '保存或修改友链', '/admin/links', 'POST', 1052, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1103, '删除友链', '/admin/links', 'DELETE', 1052, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1104, '查看菜单列表', '/admin/menus', 'GET', 1063, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1105, '新增或修改菜单', '/admin/menus', 'POST', 1063, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1106, '修改目录是否隐藏', '/admin/menus/isHidden', 'PUT', 1063, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1107, '删除菜单', '/admin/menus/*', 'DELETE', 1063, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1108, '查看操作日志', '/admin/operation/logs', 'GET', 1056, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1109, '删除操作日志', '/admin/operation/logs', 'DELETE', 1056, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1110, '根据相册id获取照片列表', '/admin/photos', 'GET', 1059, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1111, '保存照片', '/admin/photos', 'POST', 1059, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1112, '更新照片信息', '/admin/photos', 'PUT', 1059, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1113, '删除照片', '/admin/photos', 'DELETE', 1059, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1114, '移动照片相册', '/admin/photos/album', 'PUT', 1059, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1115, '查看后台相册列表', '/admin/photos/albums', 'GET', 1062, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1116, '保存或更新相册', '/admin/photos/albums', 'POST', 1062, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1117, '上传相册封面', '/admin/photos/albums/cover', 'POST', 1062, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1118, '获取后台相册列表信息', '/admin/photos/albums/info', 'GET', 1062, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1119, '根据id删除相册', '/admin/photos/albums/*', 'DELETE', 1062, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1120, '根据id获取后台相册信息', '/admin/photos/albums/*/info', 'GET', 1062, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1121, '更新照片删除状态', '/admin/photos/delete', 'PUT', 1059, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1122, '查看资源列表', '/admin/resources', 'GET', 1067, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1123, '新增或修改资源', '/admin/resources', 'POST', 1067, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1124, '删除资源', '/admin/resources/*', 'DELETE', 1067, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1125, '保存或更新角色', '/admin/role', 'POST', 1064, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1126, '查看角色菜单选项', '/admin/role/menus', 'GET', 1063, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1127, '查看角色资源选项', '/admin/role/resources', 'GET', 1067, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1128, '查询角色列表', '/admin/roles', 'GET', 1064, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1129, '删除角色', '/admin/roles', 'DELETE', 1064, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1130, '查询后台标签列表', '/admin/tags', 'GET', 1058, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1131, '添加或修改标签', '/admin/tags', 'POST', 1058, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1132, '删除标签', '/admin/tags', 'DELETE', 1058, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1133, '搜索文章标签', '/admin/tags/search', 'GET', 1058, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1134, '查看后台说说', '/admin/talks', 'GET', 1066, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1135, '保存或修改说说', '/admin/talks', 'POST', 1066, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1136, '删除说说', '/admin/talks', 'DELETE', 1066, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1137, '上传说说图片', '/admin/talks/images', 'POST', 1066, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1138, '根据id查看后台说说', '/admin/talks/*', 'GET', 1066, 1, '2022-08-19 22:26:22', '2022-08-19 22:33:52');
INSERT INTO `t_resource` VALUES (1139, '查看当前用户菜单', '/admin/user/menus', 'GET', 1063, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1140, '查询后台用户列表', '/admin/users', 'GET', 1061, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1141, '获取用户区域分布', '/admin/users/area', 'GET', 1061, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1142, '修改用户禁用状态', '/admin/users/disable', 'PUT', 1060, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1143, '查看在线用户', '/admin/users/online', 'GET', 1060, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1144, '修改管理员密码', '/admin/users/password', 'PUT', 1061, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1145, '查询用户角色选项', '/admin/users/role', 'GET', 1064, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1146, '修改用户角色', '/admin/users/role', 'PUT', 1060, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1147, '下线用户', '/admin/users/*/online', 'DELETE', 1060, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1148, '获取网站配置', '/admin/website/config', 'GET', 1050, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1149, '更新网站配置', '/admin/website/config', 'PUT', 1050, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1150, '根据相册id查看照片列表', '/albums/*/photos', 'GET', 1059, 1, '2022-08-19 22:26:22', '2022-08-19 22:27:54');
INSERT INTO `t_resource` VALUES (1151, '获取所有文章归档', '/archives/all', 'GET', 1057, 1, '2022-08-19 22:26:22', '2022-08-19 22:27:35');
INSERT INTO `t_resource` VALUES (1152, '获取所有文章', '/articles/all', 'GET', 1057, 1, '2022-08-19 22:26:22', '2022-08-19 22:27:37');
INSERT INTO `t_resource` VALUES (1153, '根据分类id获取文章', '/articles/categoryId', 'GET', 1057, 1, '2022-08-19 22:26:22', '2022-08-19 22:27:38');
INSERT INTO `t_resource` VALUES (1154, '搜索文章', '/articles/search', 'GET', 1057, 1, '2022-08-19 22:26:22', '2022-08-19 22:27:40');
INSERT INTO `t_resource` VALUES (1155, '根据标签id获取文章', '/articles/tagId', 'GET', 1057, 1, '2022-08-19 22:26:22', '2022-08-19 22:27:40');
INSERT INTO `t_resource` VALUES (1156, '获取置顶和推荐文章', '/articles/topAndFeatured', 'GET', 1057, 1, '2022-08-19 22:26:22', '2022-08-19 22:27:41');
INSERT INTO `t_resource` VALUES (1157, '根据id获取文章', '/articles/*', 'GET', 1057, 1, '2022-08-19 22:26:22', '2022-08-19 22:27:42');
INSERT INTO `t_resource` VALUES (1158, '/处理BizException', '/bizException', 'GET', 1055, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1159, '/处理BizException', '/bizException', 'HEAD', 1055, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1160, '/处理BizException', '/bizException', 'POST', 1055, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1161, '/处理BizException', '/bizException', 'PUT', 1055, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1162, '/处理BizException', '/bizException', 'DELETE', 1055, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1163, '/处理BizException', '/bizException', 'OPTIONS', 1055, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1164, '/处理BizException', '/bizException', 'PATCH', 1055, 0, '2022-08-19 22:26:22', NULL);
INSERT INTO `t_resource` VALUES (1165, '获取所有分类', '/categories/all', 'GET', 1051, 1, '2022-08-19 22:26:22', '2022-08-19 22:27:05');
INSERT INTO `t_resource` VALUES (1166, '获取评论', '/comments', 'GET', 1065, 1, '2022-08-19 22:26:22', '2022-08-19 22:33:50');
INSERT INTO `t_resource` VALUES (1167, '添加评论', '/comments/save', 'POST', 1065, 0, '2022-08-19 22:26:22', '2022-08-19 22:33:47');
INSERT INTO `t_resource` VALUES (1168, '获取前七个评论', '/comments/topSeven', 'GET', 1065, 1, '2022-08-19 22:26:22', '2022-08-19 22:33:44');
INSERT INTO `t_resource` VALUES (1169, '查看友链列表', '/links', 'GET', 1052, 1, '2022-08-19 22:26:22', '2022-08-19 22:27:13');
INSERT INTO `t_resource` VALUES (1170, '获取相册列表', '/photos/albums', 'GET', 1062, 1, '2022-08-19 22:26:22', '2022-08-19 22:28:25');
INSERT INTO `t_resource` VALUES (1171, 'report', '/report', 'POST', 1050, 1, '2022-08-19 22:26:22', '2022-08-19 22:27:00');
INSERT INTO `t_resource` VALUES (1172, '获取所有标签', '/tags/all', 'GET', 1058, 1, '2022-08-19 22:26:22', '2022-08-19 22:31:23');
INSERT INTO `t_resource` VALUES (1173, '获取前十个标签', '/tags/topTen', 'GET', 1058, 1, '2022-08-19 22:26:22', '2022-08-19 22:31:27');
INSERT INTO `t_resource` VALUES (1174, '查看说说列表', '/talks', 'GET', 1066, 1, '2022-08-19 22:26:22', '2022-08-19 22:28:38');
INSERT INTO `t_resource` VALUES (1175, '根据id查看说说', '/talks/*', 'GET', 1066, 1, '2022-08-19 22:26:22', '2022-08-19 22:28:38');
INSERT INTO `t_resource` VALUES (1176, '更新用户头像', '/users/avatar', 'POST', 1060, 1, '2022-08-19 22:26:22', '2022-08-19 22:28:05');
INSERT INTO `t_resource` VALUES (1177, '发送邮箱验证码', '/users/code', 'GET', 1061, 1, '2022-08-19 22:26:22', '2022-08-19 22:28:15');
INSERT INTO `t_resource` VALUES (1178, '绑定用户邮箱', '/users/email', 'PUT', 1060, 1, '2022-08-19 22:26:22', '2022-08-19 22:28:06');
INSERT INTO `t_resource` VALUES (1179, '更新用户信息', '/users/info', 'PUT', 1060, 1, '2022-08-19 22:26:22', '2022-08-19 22:28:07');
INSERT INTO `t_resource` VALUES (1180, '根据id获取用户信息', '/users/info/*', 'GET', 1060, 1, '2022-08-19 22:26:22', '2022-08-19 22:28:07');
INSERT INTO `t_resource` VALUES (1181, '用户登出', '/users/logout', 'POST', 1061, 1, '2022-08-19 22:26:22', '2022-08-19 22:28:15');
INSERT INTO `t_resource` VALUES (1182, 'qq登录', '/users/oauth/qq', 'POST', 1061, 1, '2022-08-19 22:26:22', '2022-08-19 22:28:16');
INSERT INTO `t_resource` VALUES (1183, '修改密码', '/users/password', 'PUT', 1061, 1, '2022-08-19 22:26:22', '2022-08-19 22:28:18');
INSERT INTO `t_resource` VALUES (1184, '用户注册', '/users/register', 'POST', 1061, 1, '2022-08-19 22:26:22', '2022-08-19 22:28:17');
INSERT INTO `t_resource` VALUES (1185, '修改用户的订阅状态', '/users/subscribe', 'PUT', 1060, 1, '2022-08-19 22:26:22', '2022-08-19 22:28:08');
INSERT INTO `t_resource` VALUES (1186, '异常日志模块', NULL, NULL, NULL, 0, '2022-08-25 15:13:40', NULL);
INSERT INTO `t_resource` VALUES (1187, '获取异常日志', '/admin/exception/logs', 'GET', 1186, 0, '2022-08-25 15:14:27', NULL);
INSERT INTO `t_resource` VALUES (1188, '删除异常日志', '/admin/exception/logs', 'DELETE', 1186, 0, '2022-08-25 15:14:59', NULL);

-- ----------------------------
-- Table structure for t_role
-- ----------------------------
DROP TABLE IF EXISTS `t_role`;
CREATE TABLE `t_role`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `role_name` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '角色名',
  `is_disable` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否禁用  0否 1是',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 15 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_role
-- ----------------------------
INSERT INTO `t_role` VALUES (1, 'admin', 0, '2022-07-20 13:25:19', '2024-04-06 18:20:11');
INSERT INTO `t_role` VALUES (2, 'user', 0, '2022-07-20 13:25:40', '2024-03-30 22:49:03');
INSERT INTO `t_role` VALUES (14, 'test', 0, '2022-08-19 21:48:14', '2024-04-06 18:46:33');

-- ----------------------------
-- Table structure for t_role_menu
-- ----------------------------
DROP TABLE IF EXISTS `t_role_menu`;
CREATE TABLE `t_role_menu`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '主键',
  `role_id` int NULL DEFAULT NULL COMMENT '角色id',
  `menu_id` int NULL DEFAULT NULL COMMENT '菜单id',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3111 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_role_menu
-- ----------------------------
INSERT INTO `t_role_menu` VALUES (3049, 1, 1);
INSERT INTO `t_role_menu` VALUES (3050, 1, 2);
INSERT INTO `t_role_menu` VALUES (3051, 1, 6);
INSERT INTO `t_role_menu` VALUES (3052, 1, 7);
INSERT INTO `t_role_menu` VALUES (3053, 1, 8);
INSERT INTO `t_role_menu` VALUES (3054, 1, 9);
INSERT INTO `t_role_menu` VALUES (3055, 1, 10);
INSERT INTO `t_role_menu` VALUES (3056, 1, 3);
INSERT INTO `t_role_menu` VALUES (3057, 1, 11);
INSERT INTO `t_role_menu` VALUES (3058, 1, 221);
INSERT INTO `t_role_menu` VALUES (3059, 1, 222);
INSERT INTO `t_role_menu` VALUES (3060, 1, 223);
INSERT INTO `t_role_menu` VALUES (3061, 1, 224);
INSERT INTO `t_role_menu` VALUES (3062, 1, 202);
INSERT INTO `t_role_menu` VALUES (3063, 1, 13);
INSERT INTO `t_role_menu` VALUES (3064, 1, 201);
INSERT INTO `t_role_menu` VALUES (3065, 1, 213);
INSERT INTO `t_role_menu` VALUES (3066, 1, 14);
INSERT INTO `t_role_menu` VALUES (3067, 1, 15);
INSERT INTO `t_role_menu` VALUES (3068, 1, 16);
INSERT INTO `t_role_menu` VALUES (3069, 1, 4);
INSERT INTO `t_role_menu` VALUES (3070, 1, 214);
INSERT INTO `t_role_menu` VALUES (3071, 1, 209);
INSERT INTO `t_role_menu` VALUES (3072, 1, 17);
INSERT INTO `t_role_menu` VALUES (3073, 1, 18);
INSERT INTO `t_role_menu` VALUES (3074, 1, 205);
INSERT INTO `t_role_menu` VALUES (3075, 1, 206);
INSERT INTO `t_role_menu` VALUES (3076, 1, 208);
INSERT INTO `t_role_menu` VALUES (3077, 1, 210);
INSERT INTO `t_role_menu` VALUES (3078, 1, 19);
INSERT INTO `t_role_menu` VALUES (3079, 1, 20);
INSERT INTO `t_role_menu` VALUES (3080, 1, 225);
INSERT INTO `t_role_menu` VALUES (3081, 1, 220);
INSERT INTO `t_role_menu` VALUES (3082, 1, 5);
INSERT INTO `t_role_menu` VALUES (3096, 14, 1);
INSERT INTO `t_role_menu` VALUES (3097, 14, 2);
INSERT INTO `t_role_menu` VALUES (3098, 14, 6);
INSERT INTO `t_role_menu` VALUES (3099, 14, 7);
INSERT INTO `t_role_menu` VALUES (3100, 14, 8);
INSERT INTO `t_role_menu` VALUES (3101, 14, 9);
INSERT INTO `t_role_menu` VALUES (3102, 14, 10);
INSERT INTO `t_role_menu` VALUES (3103, 14, 3);
INSERT INTO `t_role_menu` VALUES (3104, 14, 11);
INSERT INTO `t_role_menu` VALUES (3105, 14, 221);
INSERT INTO `t_role_menu` VALUES (3106, 14, 222);
INSERT INTO `t_role_menu` VALUES (3107, 14, 223);
INSERT INTO `t_role_menu` VALUES (3108, 14, 224);
INSERT INTO `t_role_menu` VALUES (3109, 14, 201);
INSERT INTO `t_role_menu` VALUES (3110, 14, 202);

-- ----------------------------
-- Table structure for t_role_resource
-- ----------------------------
DROP TABLE IF EXISTS `t_role_resource`;
CREATE TABLE `t_role_resource`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `role_id` int NULL DEFAULT NULL COMMENT '角色id',
  `resource_id` int NULL DEFAULT NULL COMMENT '权限id',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 5868 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_role_resource
-- ----------------------------
INSERT INTO `t_role_resource` VALUES (5516, 14, 1070);
INSERT INTO `t_role_resource` VALUES (5517, 14, 1148);
INSERT INTO `t_role_resource` VALUES (5518, 14, 1081);
INSERT INTO `t_role_resource` VALUES (5519, 14, 1084);
INSERT INTO `t_role_resource` VALUES (5520, 14, 1101);
INSERT INTO `t_role_resource` VALUES (5521, 14, 1089);
INSERT INTO `t_role_resource` VALUES (5522, 14, 1092);
INSERT INTO `t_role_resource` VALUES (5523, 14, 1093);
INSERT INTO `t_role_resource` VALUES (5524, 14, 1097);
INSERT INTO `t_role_resource` VALUES (5525, 14, 1100);
INSERT INTO `t_role_resource` VALUES (5526, 14, 1108);
INSERT INTO `t_role_resource` VALUES (5527, 14, 1072);
INSERT INTO `t_role_resource` VALUES (5528, 14, 1080);
INSERT INTO `t_role_resource` VALUES (5529, 14, 1130);
INSERT INTO `t_role_resource` VALUES (5530, 14, 1133);
INSERT INTO `t_role_resource` VALUES (5531, 14, 1110);
INSERT INTO `t_role_resource` VALUES (5532, 14, 1143);
INSERT INTO `t_role_resource` VALUES (5533, 14, 1140);
INSERT INTO `t_role_resource` VALUES (5534, 14, 1141);
INSERT INTO `t_role_resource` VALUES (5535, 14, 1115);
INSERT INTO `t_role_resource` VALUES (5536, 14, 1118);
INSERT INTO `t_role_resource` VALUES (5537, 14, 1104);
INSERT INTO `t_role_resource` VALUES (5538, 14, 1126);
INSERT INTO `t_role_resource` VALUES (5539, 14, 1139);
INSERT INTO `t_role_resource` VALUES (5540, 14, 1128);
INSERT INTO `t_role_resource` VALUES (5541, 14, 1145);
INSERT INTO `t_role_resource` VALUES (5542, 14, 1085);
INSERT INTO `t_role_resource` VALUES (5543, 14, 1134);
INSERT INTO `t_role_resource` VALUES (5544, 14, 1122);
INSERT INTO `t_role_resource` VALUES (5545, 14, 1127);
INSERT INTO `t_role_resource` VALUES (5546, 14, 1187);
INSERT INTO `t_role_resource` VALUES (5759, 1, 1050);
INSERT INTO `t_role_resource` VALUES (5760, 1, 1070);
INSERT INTO `t_role_resource` VALUES (5761, 1, 1071);
INSERT INTO `t_role_resource` VALUES (5762, 1, 1088);
INSERT INTO `t_role_resource` VALUES (5763, 1, 1148);
INSERT INTO `t_role_resource` VALUES (5764, 1, 1149);
INSERT INTO `t_role_resource` VALUES (5765, 1, 1051);
INSERT INTO `t_role_resource` VALUES (5766, 1, 1081);
INSERT INTO `t_role_resource` VALUES (5767, 1, 1082);
INSERT INTO `t_role_resource` VALUES (5768, 1, 1083);
INSERT INTO `t_role_resource` VALUES (5769, 1, 1084);
INSERT INTO `t_role_resource` VALUES (5770, 1, 1052);
INSERT INTO `t_role_resource` VALUES (5771, 1, 1101);
INSERT INTO `t_role_resource` VALUES (5772, 1, 1102);
INSERT INTO `t_role_resource` VALUES (5773, 1, 1103);
INSERT INTO `t_role_resource` VALUES (5774, 1, 1053);
INSERT INTO `t_role_resource` VALUES (5775, 1, 1089);
INSERT INTO `t_role_resource` VALUES (5776, 1, 1090);
INSERT INTO `t_role_resource` VALUES (5777, 1, 1091);
INSERT INTO `t_role_resource` VALUES (5778, 1, 1092);
INSERT INTO `t_role_resource` VALUES (5779, 1, 1054);
INSERT INTO `t_role_resource` VALUES (5780, 1, 1093);
INSERT INTO `t_role_resource` VALUES (5781, 1, 1094);
INSERT INTO `t_role_resource` VALUES (5782, 1, 1095);
INSERT INTO `t_role_resource` VALUES (5783, 1, 1096);
INSERT INTO `t_role_resource` VALUES (5784, 1, 1097);
INSERT INTO `t_role_resource` VALUES (5785, 1, 1098);
INSERT INTO `t_role_resource` VALUES (5786, 1, 1099);
INSERT INTO `t_role_resource` VALUES (5787, 1, 1100);
INSERT INTO `t_role_resource` VALUES (5788, 1, 1055);
INSERT INTO `t_role_resource` VALUES (5789, 1, 1158);
INSERT INTO `t_role_resource` VALUES (5790, 1, 1159);
INSERT INTO `t_role_resource` VALUES (5791, 1, 1160);
INSERT INTO `t_role_resource` VALUES (5792, 1, 1161);
INSERT INTO `t_role_resource` VALUES (5793, 1, 1162);
INSERT INTO `t_role_resource` VALUES (5794, 1, 1163);
INSERT INTO `t_role_resource` VALUES (5795, 1, 1164);
INSERT INTO `t_role_resource` VALUES (5796, 1, 1056);
INSERT INTO `t_role_resource` VALUES (5797, 1, 1108);
INSERT INTO `t_role_resource` VALUES (5798, 1, 1109);
INSERT INTO `t_role_resource` VALUES (5799, 1, 1057);
INSERT INTO `t_role_resource` VALUES (5800, 1, 1072);
INSERT INTO `t_role_resource` VALUES (5801, 1, 1073);
INSERT INTO `t_role_resource` VALUES (5802, 1, 1074);
INSERT INTO `t_role_resource` VALUES (5803, 1, 1075);
INSERT INTO `t_role_resource` VALUES (5804, 1, 1076);
INSERT INTO `t_role_resource` VALUES (5805, 1, 1077);
INSERT INTO `t_role_resource` VALUES (5806, 1, 1078);
INSERT INTO `t_role_resource` VALUES (5807, 1, 1079);
INSERT INTO `t_role_resource` VALUES (5808, 1, 1080);
INSERT INTO `t_role_resource` VALUES (5809, 1, 1058);
INSERT INTO `t_role_resource` VALUES (5810, 1, 1130);
INSERT INTO `t_role_resource` VALUES (5811, 1, 1131);
INSERT INTO `t_role_resource` VALUES (5812, 1, 1132);
INSERT INTO `t_role_resource` VALUES (5813, 1, 1133);
INSERT INTO `t_role_resource` VALUES (5814, 1, 1059);
INSERT INTO `t_role_resource` VALUES (5815, 1, 1110);
INSERT INTO `t_role_resource` VALUES (5816, 1, 1111);
INSERT INTO `t_role_resource` VALUES (5817, 1, 1112);
INSERT INTO `t_role_resource` VALUES (5818, 1, 1113);
INSERT INTO `t_role_resource` VALUES (5819, 1, 1114);
INSERT INTO `t_role_resource` VALUES (5820, 1, 1121);
INSERT INTO `t_role_resource` VALUES (5821, 1, 1060);
INSERT INTO `t_role_resource` VALUES (5822, 1, 1142);
INSERT INTO `t_role_resource` VALUES (5823, 1, 1143);
INSERT INTO `t_role_resource` VALUES (5824, 1, 1146);
INSERT INTO `t_role_resource` VALUES (5825, 1, 1147);
INSERT INTO `t_role_resource` VALUES (5826, 1, 1061);
INSERT INTO `t_role_resource` VALUES (5827, 1, 1140);
INSERT INTO `t_role_resource` VALUES (5828, 1, 1141);
INSERT INTO `t_role_resource` VALUES (5829, 1, 1144);
INSERT INTO `t_role_resource` VALUES (5830, 1, 1062);
INSERT INTO `t_role_resource` VALUES (5831, 1, 1115);
INSERT INTO `t_role_resource` VALUES (5832, 1, 1116);
INSERT INTO `t_role_resource` VALUES (5833, 1, 1117);
INSERT INTO `t_role_resource` VALUES (5834, 1, 1118);
INSERT INTO `t_role_resource` VALUES (5835, 1, 1119);
INSERT INTO `t_role_resource` VALUES (5836, 1, 1120);
INSERT INTO `t_role_resource` VALUES (5837, 1, 1063);
INSERT INTO `t_role_resource` VALUES (5838, 1, 1104);
INSERT INTO `t_role_resource` VALUES (5839, 1, 1105);
INSERT INTO `t_role_resource` VALUES (5840, 1, 1106);
INSERT INTO `t_role_resource` VALUES (5841, 1, 1107);
INSERT INTO `t_role_resource` VALUES (5842, 1, 1126);
INSERT INTO `t_role_resource` VALUES (5843, 1, 1139);
INSERT INTO `t_role_resource` VALUES (5844, 1, 1064);
INSERT INTO `t_role_resource` VALUES (5845, 1, 1125);
INSERT INTO `t_role_resource` VALUES (5846, 1, 1128);
INSERT INTO `t_role_resource` VALUES (5847, 1, 1129);
INSERT INTO `t_role_resource` VALUES (5848, 1, 1145);
INSERT INTO `t_role_resource` VALUES (5849, 1, 1065);
INSERT INTO `t_role_resource` VALUES (5850, 1, 1085);
INSERT INTO `t_role_resource` VALUES (5851, 1, 1086);
INSERT INTO `t_role_resource` VALUES (5852, 1, 1087);
INSERT INTO `t_role_resource` VALUES (5853, 1, 1167);
INSERT INTO `t_role_resource` VALUES (5854, 1, 1066);
INSERT INTO `t_role_resource` VALUES (5855, 1, 1134);
INSERT INTO `t_role_resource` VALUES (5856, 1, 1135);
INSERT INTO `t_role_resource` VALUES (5857, 1, 1136);
INSERT INTO `t_role_resource` VALUES (5858, 1, 1137);
INSERT INTO `t_role_resource` VALUES (5859, 1, 1067);
INSERT INTO `t_role_resource` VALUES (5860, 1, 1122);
INSERT INTO `t_role_resource` VALUES (5861, 1, 1123);
INSERT INTO `t_role_resource` VALUES (5862, 1, 1124);
INSERT INTO `t_role_resource` VALUES (5863, 1, 1127);
INSERT INTO `t_role_resource` VALUES (5864, 1, 1186);
INSERT INTO `t_role_resource` VALUES (5865, 1, 1187);
INSERT INTO `t_role_resource` VALUES (5866, 1, 1188);
INSERT INTO `t_role_resource` VALUES (5867, 2, 1167);

-- ----------------------------
-- Table structure for t_tag
-- ----------------------------
DROP TABLE IF EXISTS `t_tag`;
CREATE TABLE `t_tag`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `tag_name` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '标签名',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 43 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_tag
-- ----------------------------
INSERT INTO `t_tag` VALUES (41, '标签测试', '2024-03-25 18:50:24', '2024-03-28 14:46:31');
INSERT INTO `t_tag` VALUES (42, 'SpringSecurity', '2024-03-31 21:44:02', NULL);

-- ----------------------------
-- Table structure for t_talk
-- ----------------------------
DROP TABLE IF EXISTS `t_talk`;
CREATE TABLE `t_talk`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '说说id',
  `user_id` int NOT NULL COMMENT '用户id',
  `content` varchar(2000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '说说内容',
  `images` varchar(2500) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '图片',
  `is_top` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否置顶',
  `status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '状态 1.公开 2.私密',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 69 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_talk
-- ----------------------------
INSERT INTO `t_talk` VALUES (68, 1, '说说测试', '[\"http://localhost:9000/blog/aurora/talks/a4b94dc9c70298cd04465ca4dfa48d02.jpg\",\"http://localhost:9000/blog/aurora/talks/6abb80098bbd4f315f80903fa3302123.jpg\"]', 0, 1, '2024-03-26 18:10:47', '2024-03-31 16:47:46');

-- ----------------------------
-- Table structure for t_unique_view
-- ----------------------------
DROP TABLE IF EXISTS `t_unique_view`;
CREATE TABLE `t_unique_view`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `views_count` int NOT NULL COMMENT '访问量',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1561 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_unique_view
-- ----------------------------
INSERT INTO `t_unique_view` VALUES (1539, 1, '2024-03-12 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1540, 1, '2024-03-13 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1541, 1, '2024-03-14 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1542, 1, '2024-03-15 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1543, 0, '2024-03-16 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1544, 1, '2024-03-17 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1545, 1, '2024-03-18 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1546, 1, '2024-03-19 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1547, 1, '2024-03-22 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1548, 1, '2024-03-24 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1549, 1, '2024-03-25 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1550, 0, '2024-03-26 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1551, 0, '2024-03-27 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1552, 1, '2024-03-28 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1553, 1, '2024-03-29 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1554, 1, '2024-03-30 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1555, 1, '2024-03-31 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1556, 1, '2024-04-02 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1557, 1, '2024-04-05 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1558, 1, '2024-04-06 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1559, 1, '2024-04-10 00:00:00', NULL);
INSERT INTO `t_unique_view` VALUES (1560, 1, '2024-04-11 00:00:00', NULL);

-- ----------------------------
-- Table structure for t_user_auth
-- ----------------------------
DROP TABLE IF EXISTS `t_user_auth`;
CREATE TABLE `t_user_auth`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `user_info_id` int NOT NULL COMMENT '用户信息id',
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '用户名',
  `password` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '密码',
  `login_type` tinyint(1) NOT NULL COMMENT '登录类型',
  `ip_address` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '用户登录ip',
  `ip_source` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT 'ip来源',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  `last_login_time` datetime NULL DEFAULT NULL COMMENT '上次登录时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `username`(`username` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1016 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_user_auth
-- ----------------------------
INSERT INTO `t_user_auth` VALUES (1, 1, '3347778009@qq.com', '$2a$10$/Z90STxVyGOIfNhTfvzbEuJ9t1yHjrkN6pBMRAqd5g5SdNIrdt5Da', 1, '127.0.0.1', '内网IP|内网IP', '2022-08-19 21:43:46', '2024-04-12 08:46:41', '2024-04-12 08:46:40');
INSERT INTO `t_user_auth` VALUES (1014, 2, 'test@163.com', '$2a$10$/Z90STxVyGOIfNhTfvzbEuJ9t1yHjrkN6pBMRAqd5g5SdNIrdt5Da', 1, '127.0.0.1', '内网IP|内网IP', '2024-03-28 17:56:20', '2024-03-29 00:37:51', '2024-03-29 00:37:51');
INSERT INTO `t_user_auth` VALUES (1015, 1024, '2651694460@qq.com', '$2a$10$IPrZHGhsGEiZ2.qW0jx.8.zC.c6drrWIEvH2ELfTS/Tuo0Ymb7A82', 1, '127.0.0.1', '内网IP|内网IP', '2024-03-31 18:05:23', '2024-04-12 21:53:34', '2024-04-12 21:53:34');

-- ----------------------------
-- Table structure for t_user_info
-- ----------------------------
DROP TABLE IF EXISTS `t_user_info`;
CREATE TABLE `t_user_info`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '用户ID',
  `email` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '邮箱号',
  `nickname` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '用户昵称',
  `avatar` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '' COMMENT '用户头像',
  `intro` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '用户简介',
  `website` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '个人网站',
  `is_subscribe` tinyint(1) NULL DEFAULT NULL COMMENT '是否订阅',
  `is_disable` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否禁用',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1025 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_user_info
-- ----------------------------
INSERT INTO `t_user_info` VALUES (1, '3347778009@qq.com', '啊哈14', 'http://localhost:9000/blog/aurora/avatar/e925e14cbfb325d4b8f76f02370d116f.jpg', '大学牲', 'www.aha14.com', 0, 0, '2022-08-19 21:42:04', '2024-03-31 18:25:43');
INSERT INTO `t_user_info` VALUES (2, 'test@163.com', '测试账号', 'http://127.0.0.1:9000/blog/aurora/avatar/9d11a6e0-192a-499a-b4f5-d69f553fed24.png', NULL, NULL, NULL, 0, '2024-03-28 17:57:20', '2024-03-28 17:59:59');
INSERT INTO `t_user_info` VALUES (1024, '2651694460@qq.com', '用户1774377440806739970', 'http://127.0.0.1:9000/blog/aurora/avatar/dafe0cb9-0b66-4bf1-b093-b4743fdaddcd.png', NULL, NULL, NULL, 0, '2024-03-31 18:05:23', NULL);

-- ----------------------------
-- Table structure for t_user_role
-- ----------------------------
DROP TABLE IF EXISTS `t_user_role`;
CREATE TABLE `t_user_role`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `user_id` int NULL DEFAULT NULL COMMENT '用户id',
  `role_id` int NULL DEFAULT NULL COMMENT '角色id',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1037 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_user_role
-- ----------------------------
INSERT INTO `t_user_role` VALUES (1, 1, 1);
INSERT INTO `t_user_role` VALUES (1035, 2, 1);
INSERT INTO `t_user_role` VALUES (1036, 1024, 2);

-- ----------------------------
-- Table structure for t_website_config
-- ----------------------------
DROP TABLE IF EXISTS `t_website_config`;
CREATE TABLE `t_website_config`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `config` varchar(2000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '配置信息',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of t_website_config
-- ----------------------------
INSERT INTO `t_website_config` VALUES (1, '{\"alipayQRCode\":\"\",\"author\":\"啊哈14\",\"authorAvatar\":\"http://localhost:9000/blog/aurora/config/e925e14cbfb325d4b8f76f02370d116f.jpg\",\"authorIntro\":\"还在学习的coder\",\"beianNumber\":\"\",\"csdn\":\"\",\"englishName\":\"aha14\",\"favicon\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"gitee\":\"https://gitee.com/aha14\",\"github\":\"https://github.com/HHermit\",\"isCommentReview\":1,\"isEmailNotice\":0,\"isReward\":1,\"juejin\":\"\",\"logo\":\"http://localhost:9000/blog/aurora/config/a4483be44cc72c76099a98fe78e47e11.jpg\",\"multiLanguage\":1,\"name\":\"啊哈14的个人博客\",\"notice\":\"代码已经开源，如果你感觉还行就给一个star吧。。。\",\"qq\":\"https://admin.qidian.qq.com/static_proxy/b2b-qq/wpa-link/index.html#/person?uin=2651694460\",\"qqLogin\":1,\"stackoverflow\":\"\",\"touristAvatar\":\"http://localhost:9000/blog/aurora/config/429af7c9178d277f2a76fd5d051ab8c4.png\",\"twitter\":\"\",\"userAvatar\":\"http://localhost:9000/blog/aurora/config/4e73721dccdede6352d34aa792348825.png\",\"weChat\":\"\",\"websiteCreateTime\":\"2024-03-14\",\"weiXinQRCode\":\"http://localhost:9000/blog/aurora/config/7c5ddbfd6e5754d192eb24c698f1f7f9.png\",\"weibo\":\"\",\"zhihu\":\"\"}', '2022-07-24 12:05:33', '2024-04-07 17:45:56');

SET FOREIGN_KEY_CHECKS = 1;
